io.flutter.embedding.android.FlutterFragmentActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.fragment.app.Fragment: void performLowMemory()
com.jcraft.jsch.ChannelSftp: int OVERWRITE
com.jcraft.jsch.Session: int buffer_margin
com.jcraft.jsch.jce.ARCFOUR256: void update(byte[],int,int,byte[],int)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent)
io.flutter.embedding.engine.plugins.PluginRegistry: void removeAll()
com.jcraft.jsch.ProxySOCKS4: int getDefaultPort()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.StandardMessageCodec: byte NULL
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_9
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
com.jcraft.jsch.jcraft.HMACMD5: java.lang.String getName()
io.flutter.plugins.urllauncher.UrlLauncherPlugin
androidx.fragment.app.FragmentActivity: androidx.collection.SparseArrayCompat mPendingFragmentActivityResults
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldHandleDeeplinking()
com.jcraft.jsch.ChannelX11: java.util.Hashtable faked_cookie_hex_pool
com.jcraft.jsch.KeyPairDSA: byte[] getEnd()
com.jcraft.jsch.Buffer
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
com.jcraft.jsch.ChannelSftp$LsEntry: java.lang.String filename
com.jcraft.jsch.PBKDF: byte[] getKey(byte[],byte[],int,int)
com.jcraft.jsch.Proxy: void close()
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String TAG
com.jcraft.jsch.RequestPtyReq
io.flutter.app.FlutterActivity: void onStart()
io.flutter.view.AccessibilityBridge$Action
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.plugin.editing.InputConnectionAdaptor: java.lang.String TAG
io.flutter.embedding.engine.loader.ResourceExtractor: long getVersionCode(android.content.pm.PackageInfo)
com.jcraft.jsch.jce.TripleDESCBC: void init(int,byte[],byte[])
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: java.lang.String TAG
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.jcraft.jsch.jce.AES192CTR: int getIVSize()
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader$2: void run()
com.jcraft.jsch.MAC: java.lang.String getName()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_REQUEST
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
io.flutter.embedding.engine.loader.FlutterLoader$2: java.lang.Runnable val$callback
io.flutter.embedding.engine.loader.FlutterLoader$1$1
com.jcraft.jsch.ChannelSftp: void setPtyType(java.lang.String,int,int,int,int)
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int NONE
io.flutter.Log: void v(java.lang.String,java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerView: void setRepeatToggleModes(int)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.lang.String TAG
io.flutter.embedding.android.FlutterFragment: void onTrimMemory(int)
org.threeten.bp.chrono.JapaneseChronology: java.lang.Object readResolve()
com.jcraft.jsch.RequestPtyReq: int thp
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
com.jcraft.jsch.GSSContext: byte[] init(byte[],int,int)
io.flutter.FlutterInjector$1
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.lang.Class)
com.jcraft.jsch.IdentityFile: java.lang.String getName()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler handler
io.flutter.plugins.sharedpreferences.R$id: int line3
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
io.flutter.view.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.jcraft.jsch.Compression: int INFLATER
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
com.jcraft.jsch.ProxySOCKS4: void close()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
io.flutter.embedding.android.MotionEventTracker$MotionEventId
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.concurrent.Executor uiThreadExecutor
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.sharedpreferences.R$id: int icon_group
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: long id()
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_26
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
io.flutter.embedding.android.FlutterSplashView$3: FlutterSplashView$3(io.flutter.embedding.android.FlutterSplashView)
org.threeten.bp.ZoneOffset: java.lang.Object readResolve()
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
com.jcraft.jsch.HostKey: java.lang.String host
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_EXTENDED_REPLY
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel)
com.jcraft.jsch.jce.BlowfishCBC: int bsize
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3202(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.plugins.urllauncher.R$layout: int notification_template_custom_big
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
com.jcraft.jsch.KnownHosts: com.jcraft.jsch.MAC access$000(com.jcraft.jsch.KnownHosts)
com.jcraft.jsch.ChannelSftp: void symlink(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterShellArgs: void add(java.lang.String)
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
com.jcraft.jsch.Session$GlobalRequestReply: int port
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
androidx.work.InputMerger: InputMerger()
androidx.fragment.app.FragmentActivity: boolean mStartedActivityFromFragment
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
io.flutter.app.FlutterActivityDelegate: android.view.View access$000(io.flutter.app.FlutterActivityDelegate)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment createDefault()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
com.jcraft.jsch.Channel: void write(byte[],int,int)
com.jcraft.jsch.JSch
com.jcraft.jsch.jce.DH: void setF(byte[])
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder withNewEngine()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onRestoreInstanceState(android.os.Bundle)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterFragment: boolean shouldRestoreAndSaveState()
com.jcraft.jsch.ChannelSftp: java.lang.String UTF8
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Line2
com.jcraft.jsch.Session: void setPortForwardingR(int,java.lang.String,java.lang.Object[])
androidx.fragment.app.Fragment: int INITIALIZING
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: EventChannel$IncomingStreamRequestHandler(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENDLESS_TRACE_BUFFER
com.jcraft.jsch.Session: void send_kexinit()
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
io.flutter.plugin.editing.InputConnectionAdaptor: boolean isSamsung()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
com.jcraft.jsch.KnownHosts$HashedHostKey: java.lang.String HASH_DELIM
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
com.jcraft.jsch.KnownHosts: java.lang.String deleteSubString(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_DART_ENTRYPOINT
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
com.jcraft.jsch.HostKey
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.fragment.app.FragmentActivity: void onStart()
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
com.jcraft.jsch.SftpATTRS: java.lang.String toString()
com.jcraft.jsch.DHGEX: byte[] e
org.threeten.bp.Month: org.threeten.bp.Month valueOf(java.lang.String)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1
com.jcraft.jsch.ChannelSftp$RequestQueue$Request
com.jcraft.jsch.KeyPairECDSA: int key_size
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.google.android.exoplayer2.ui.PlayerView: com.google.android.exoplayer2.Player getPlayer()
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
com.jcraft.jsch.KeyPairPKCS8: byte[] aes128cbc
com.jcraft.jsch.HostKey: java.lang.String getMarker()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
com.jcraft.jsch.jcraft.HMAC: int bsize
io.flutter.plugin.common.EventChannel$EventSink
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra valueOf(java.lang.String)
com.jcraft.jsch.KeyPairGenRSA: byte[] getN()
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.ChannelX11: byte[] table
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
com.jcraft.jsch.jgss.GSSContextKrb5: java.lang.String useSubjectCredsOnly
com.jcraft.jsch.KeyPair: void writePublicKey(java.io.OutputStream,java.lang.String)
androidx.work.impl.workers.DiagnosticsWorker
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.pm.ApplicationInfo getApplicationInfo()
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderCerts
com.jcraft.jsch.jce.ARCFOUR128: void update(byte[],int,int,byte[],int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
io.flutter.plugins.urllauncher.WebViewActivity$2
io.flutter.plugins.pathprovider.R$id: int title
com.journeyapps.barcodescanner.CameraPreview: void setTorch(boolean)
androidx.appcompat.widget.AppCompatCheckBox
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
com.jcraft.jsch.Session: java.lang.String[] checkKexes(java.lang.String)
com.jcraft.jsch.KeyPairECDSA: byte[] name
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityPluginBinding
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_29
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
io.flutter.plugins.pathprovider.R$id: int text2
io.flutter.plugins.sharedpreferences.BuildConfig
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String TAG
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
com.jcraft.jsch.KeyPairPKCS8: byte[] getPublicKeyBlob()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
com.jcraft.jsch.KeyPairPKCS8: byte[] aes192cbc
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
io.flutter.embedding.engine.loader.FlutterApplicationInfo
com.jcraft.jsch.Session: java.net.Socket socket
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel)
com.jcraft.jsch.jce.DH: void checkRange()
io.flutter.view.AccessibilityBridge
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
io.flutter.plugin.common.BasicMessageChannel$MessageHandler
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
io.flutter.view.AccessibilityBridge: int access$1100(io.flutter.view.AccessibilityBridge)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
com.jcraft.jsch.jcraft.HMACSHA196
com.jcraft.jsch.Signature: byte[] sign()
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
com.jcraft.jsch.jce.SignatureECDSA: java.security.Signature signature
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.google.android.exoplayer2.ui.StyledPlayerView: android.view.View[] getAdOverlayViews()
com.jcraft.jsch.ChannelExec: void setPtyType(java.lang.String,int,int,int,int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
com.jcraft.jsch.KeyPairECDSA: byte[] forSSHAgent()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpStatVFS _statVFS(java.lang.String)
com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
com.jcraft.jsch.ChannelShell: void setTerminalMode(byte[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.jcraft.jsch.ChannelSession: int thp
com.jcraft.jsch.jce.HMACSHA512: java.lang.String getName()
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.app.FlutterActivityDelegate: boolean onActivityResult(int,int,android.content.Intent)
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
com.jcraft.jsch.JSchPartialAuthException
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.view.FlutterView: void assertAttached()
androidx.fragment.app.Fragment: boolean mIsCreated
com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,byte[],byte[])
io.flutter.view.FlutterView$ViewportMetrics: int physicalWidth
com.jcraft.jsch.OpenSSHConfig$MyConfig
androidx.appcompat.widget.ButtonBarLayout
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
com.jcraft.jsch.Logger: int DEBUG
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void removePendingEvent(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugin.common.MethodChannel channel
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView getFlutterNativeView()
com.jcraft.jsch.ChannelSftp: int getBulkRequests()
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_pane_title
io.flutter.embedding.engine.dart.DartExecutor
com.jcraft.jsch.jgss.GSSContextKrb5: org.ietf.jgss.GSSContext context
com.jcraft.jsch.ChannelSftp: void putHEAD(byte,int)
com.journeyapps.barcodescanner.CameraPreview: void setPreviewScalingStrategy(com.journeyapps.barcodescanner.camera.PreviewScalingStrategy)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowFastForwardButton(boolean)
com.google.android.exoplayer2.ui.PlayerView: void setShowPreviousButton(boolean)
io.flutter.plugin.platform.VirtualDisplayController$1$1: void run()
com.jcraft.jsch.SftpATTRS: void setACMODTIME(int,int)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationEnd(android.animation.Animator)
com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String)
com.jcraft.jsch.SignatureDSA: void setPrvKey(byte[],byte[],byte[],byte[])
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_ttcIndex
com.jcraft.jsch.ChannelSftp: void start()
com.jcraft.jsch.ChannelSession
androidx.fragment.app.Fragment: void performStart()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.jcraft.jsch.jce.TripleDESCBC: int getIVSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context)
io.flutter.view.FlutterView: void onFirstFrame()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
io.flutter.plugins.sharedpreferences.R$dimen: int compat_notification_large_icon_max_width
com.jcraft.jsch.ChannelDirectTCPIP: void setPort(int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.jcraft.jsch.DHECN: com.jcraft.jsch.Packet packet
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_tileMode
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_BACKGROUND_MODE
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values()
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
com.jcraft.jsch.KeyPair$ASN1: int length
io.flutter.view.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_26
com.jcraft.jsch.SftpStatVFS: long getUsed()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: FlutterFragmentActivity$NewEngineIntentBuilder(java.lang.Class)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.fragment.app.Fragment: boolean isVisible()
com.jcraft.jsch.IdentityRepository$Wrapper: boolean remove(byte[])
com.jcraft.jsch.SftpStatVFS: long getMountFlag()
io.flutter.app.FlutterActivityEvents: void onPause()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
io.flutter.plugins.urllauncher.R$id: int chronometer
com.jcraft.jsch.KeyPairPKCS8: com.jcraft.jsch.KeyPair kpair
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
com.jcraft.jsch.jce.ARCFOUR: void update(byte[],int,int,byte[],int)
com.jcraft.jsch.Cipher: boolean isCBC()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
io.flutter.plugins.pathprovider.PathProviderPlugin: void executeInBackground(java.util.concurrent.Callable,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderTemporaryDirectory()
io.flutter.plugin.mouse.MouseCursorPlugin
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] d
com.jcraft.jsch.Session$Forwarding
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
com.jcraft.jsch.DHECN: DHECN()
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
com.jcraft.jsch.ChannelExec: void run()
com.jcraft.jsch.jce.AES192CBC: int getBlockSize()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
com.jcraft.jsch.KnownHosts: java.lang.String _known_hosts
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context)
io.flutter.app.FlutterPluginRegistry: void attach(io.flutter.view.FlutterView,android.app.Activity)
com.jcraft.jsch.ChannelExec: void setEnv(byte[],byte[])
androidx.appcompat.widget.SearchView: int getPreferredWidth()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
io.flutter.embedding.android.TransparencyMode
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
io.flutter.plugins.urllauncher.UrlLauncher: android.app.Activity activity
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
com.jcraft.jsch.KeyPair: byte[] publickeyblob
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
io.flutter.plugin.common.MethodChannel: java.lang.String name
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
com.jcraft.jsch.KeyPair: void setPassphrase(java.lang.String)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handlePlatformMessageResponse(int,byte[])
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair genKeyPair(com.jcraft.jsch.JSch,int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
io.flutter.plugins.pathprovider.R$string
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.jcraft.jsch.jce.TripleDESCBC: javax.crypto.Cipher cipher
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DART_FLAGS
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: boolean clipboardHasStrings()
com.jcraft.jsch.jce.TripleDESCTR: int getBlockSize()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
io.flutter.embedding.engine.loader.FlutterLoader$2: io.flutter.embedding.engine.loader.FlutterLoader this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
com.jcraft.jsch.Channel$1: void write(byte[],int,int)
com.jcraft.jsch.KeyPairDSA: byte[] getPublicKeyBlob()
com.jcraft.jsch.Session: void initDeflater(java.lang.String)
io.flutter.app.FlutterPluginRegistry: boolean onViewDestroy(io.flutter.view.FlutterNativeView)
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized()
io.flutter.app.FlutterApplication: void onCreate()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity,io.flutter.plugins.urllauncher.WebViewActivity$1)
androidx.fragment.app.Fragment: void postponeEnterTransition()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com.jcraft.jsch.ChannelSubsystem: void init()
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetLeft
io.flutter.embedding.android.FlutterFragment: void onLowMemory()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowFastForwardButton(boolean)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_small_icon_size_as_large
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
com.jcraft.jsch.jcraft.Compression: com.jcraft.jzlib.ZStream stream
io.flutter.app.FlutterActivityDelegate: void onPause()
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.jcraft.jsch.Channel: void getData(com.jcraft.jsch.Buffer)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_LIBRARY
com.jcraft.jsch.UserInfo: boolean promptPassword(java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getN()
io.flutter.app.FlutterApplication: android.app.Activity getCurrentActivity()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
com.dexterous.flutterlocalnotifications.utils.StringUtils
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder initialRoute(java.lang.String)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: android.content.Context activeContext()
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_centerY
io.flutter.view.AccessibilityBridge: int previousRouteId
androidx.appcompat.widget.FitWindowsLinearLayout
io.flutter.embedding.engine.renderer.RenderSurface: void detachFromRenderer()
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void detachFromContentProvider()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
io.flutter.embedding.engine.systemchannels.PlatformChannel
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
com.jcraft.jsch.Channel: void connect()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
com.jcraft.jsch.SftpATTRS: int S_IFSOCK
com.jcraft.jsch.DHGEX: boolean next(com.jcraft.jsch.Buffer)
com.jcraft.jsch.ECDH: void init(int)
com.jcraft.jsch.DHEC256
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
com.jcraft.jsch.Session: int SSH_MSG_REQUEST_SUCCESS
com.jcraft.jsch.jce.HMACSHA512: void init(byte[])
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.android.exoplayer2.ui.PlayerView: void setShowShuffleButton(boolean)
com.jcraft.jsch.jce.KeyPairGenECDSA: java.security.interfaces.ECPublicKey getPublicKey()
io.flutter.embedding.engine.dart.DartExecutor$DartCallback
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
io.flutter.plugins.urllauncher.R$styleable: int[] GradientColor
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: java.lang.String CHANNEL_NAME
com.jcraft.jsch.ChannelSftp: void sendREMOVE(byte[])
com.jcraft.jsch.KeyExchange: java.lang.String getFingerPrint()
io.flutter.plugins.pathprovider.PathProviderPlugin: android.content.Context context
com.jcraft.jsch.Buffer: long getLong()
com.jcraft.jsch.UserAuthGSSAPIWithMIC: boolean start(com.jcraft.jsch.Session)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
io.flutter.FlutterInjector
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
androidx.activity.ComponentActivity: void onBackPressed()
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: boolean released
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
com.jcraft.jsch.Session: void setPortForwardingR(int,java.lang.String)
org.threeten.bp.Duration: java.lang.Object readResolve()
com.google.android.exoplayer2.ui.PlayerControlView: void setFastForwardIncrementMs(int)
com.jcraft.jsch.jce.SHA256: void update(byte[],int,int)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin
androidx.fragment.app.Fragment: android.content.Context requireContext()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
com.jcraft.jsch.ChannelShell
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
com.jcraft.jsch.ChannelForwardedTCPIP: java.net.Socket socket
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.jcraft.jsch.IdentityFile: boolean isEncrypted()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
io.flutter.plugin.common.PluginRegistry$ActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)
com.jcraft.jsch.KeyPair: int VENDOR_OPENSSH
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.jcraft.jsch.Session: int timeout
androidx.work.ArrayCreatingInputMerger
androidx.appcompat.view.menu.ExpandedMenuView
com.jcraft.jsch.KeyPairPKCS8: byte[] pbes2
io.flutter.plugins.pathprovider.R$id: int accessibility_action_clickable_span
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
io.flutter.view.VsyncWaiter$1$1: long val$cookie
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.BinaryMessenger messenger()
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterNativeView createFlutterNativeView()
com.jcraft.jsch.ConfigRepository$Config: java.lang.String getValue(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_0
com.jcraft.jsch.KnownHosts: com.jcraft.jsch.JSch jsch
com.jcraft.jsch.IO: java.io.OutputStream out
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.chrono.Ser: java.lang.Object readResolve()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToModuleNames
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
io.flutter.view.FlutterView: void disableTransparentBackground()
io.flutter.embedding.android.FlutterView$2: void onFlutterUiDisplayed()
io.flutter.view.FlutterView$3: io.flutter.view.FlutterView this$0
com.jcraft.jsch.PBKDF
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver broadcastReceiver
io.flutter.plugins.pathprovider.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
io.flutter.view.FlutterMain: void startInitialization(android.content.Context)
io.flutter.plugins.urllauncher.WebViewActivity: android.content.Intent createIntent(android.content.Context,java.lang.String,boolean,boolean,android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsController: void initializePlatformViewIfNeeded(int)
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
com.jcraft.jsch.ChannelSftp$RequestQueue: com.jcraft.jsch.ChannelSftp this$0
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
io.flutter.Log
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
androidx.work.impl.WorkDatabase_Impl
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
com.jcraft.jsch.SftpATTRS: int S_IWOTH
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
org.threeten.bp.chrono.HijrahEra: java.lang.Object writeReplace()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
com.jcraft.jsch.SftpATTRS: boolean isSock()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String access$000(java.io.File,android.content.pm.PackageManager,java.lang.String)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_2
com.jcraft.jsch.Buffer: byte[] buffer
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
com.jcraft.jsch.ChannelDirectTCPIP: ChannelDirectTCPIP()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.jcraft.jsch.KnownHosts: com.jcraft.jsch.MAC hmacsha1
io.flutter.view.VsyncWaiter: android.view.WindowManager access$000(io.flutter.view.VsyncWaiter)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.jcraft.jsch.ConfigRepository$1: java.lang.String getHostname()
com.jcraft.jsch.Session: void applyConfig()
io.flutter.embedding.android.FlutterSplashView: android.view.View access$300(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_14
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] c
com.google.android.exoplayer2.ui.PlayerView: void setResizeMode(int)
com.jcraft.jsch.SftpATTRS: int S_ISUID
com.jcraft.jsch.KeyPair$ASN1: byte[] getContent()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
com.jcraft.jsch.KeyExchange: boolean verify(java.lang.String,byte[],int,byte[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.app.FlutterActivity: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.android.exoplayer2.ui.StyledPlayerView: void setDefaultArtwork(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterView$RenderMode: io.flutter.embedding.android.FlutterView$RenderMode[] $VALUES
com.jcraft.jsch.Session: byte[] getSessionId()
com.jcraft.jsch.JSchAuthCancelException: JSchAuthCancelException()
io.flutter.plugins.urllauncher.WebViewActivity: void onDestroy()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.Log: void println(int,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object requireHost()
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.jcraft.jsch.JSch: void addIdentity(java.lang.String,byte[],byte[],byte[])
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
com.jcraft.jsch.ChannelSftp: void setBulkRequests(int)
com.jcraft.jsch.SftpATTRS: boolean isFifo()
io.flutter.plugins.urllauncher.R$id: int notification_main_column
com.jcraft.jsch.KeyPairDSA
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.flutter.view.FlutterNativeView: void destroy()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder flutterShellArgs(io.flutter.embedding.engine.FlutterShellArgs)
com.jcraft.jsch.ChannelSftp: int getServerVersion()
com.jcraft.jsch.ChannelSftp$RequestQueue: long getOffset()
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(java.lang.Integer)
com.jcraft.jsch.Channel: boolean isClosed()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.jcraft.jsch.DHG14
com.jcraft.jsch.Buffer: void getByte(byte[],int,int)
com.jcraft.jsch.jce.ARCFOUR128: int bsize
com.jcraft.jsch.jce.SignatureECDSA: SignatureECDSA()
com.jcraft.jsch.ProxySOCKS4: java.io.OutputStream getOutputStream()
com.jcraft.jsch.KeyPair: boolean isEncrypted()
com.jcraft.jsch.Session$Forwarding: int port
io.flutter.app.FlutterActivity: void onResume()
io.flutter.embedding.android.FlutterFragment: void onCreate(android.os.Bundle)
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin)
com.jcraft.jsch.KeyPair: com.jcraft.jsch.HASH genHash()
com.jcraft.jsch.Session: void setConfig(java.util.Properties)
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
com.jcraft.jsch.jce.AES128CBC: int getBlockSize()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AOT_SHARED_LIBRARY_NAME
com.jcraft.jsch.jcraft.HMACMD5: int getBlockSize()
io.flutter.plugins.pathprovider.R$layout: int notification_template_part_time
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENTC_REQUEST_IDENTITIES
io.flutter.view.FlutterMain$Settings: FlutterMain$Settings()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_13
com.jcraft.jsch.jce.TripleDESCTR: int bsize
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
com.jcraft.jsch.IdentityFile
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
io.flutter.view.FlutterMain: java.lang.String findAppBundlePath()
org.threeten.bp.Duration: java.lang.Object writeReplace()
io.flutter.embedding.android.FlutterFragmentActivity: int FRAGMENT_CONTAINER_ID
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
io.flutter.app.FlutterFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$AccessibilityFeature
io.flutter.embedding.android.FlutterFragment: void onAttach(android.content.Context)
io.flutter.plugins.urllauncher.R$dimen: int notification_large_icon_width
androidx.appcompat.widget.Toolbar
io.flutter.app.FlutterPlayStoreSplitApplication: FlutterPlayStoreSplitApplication()
org.threeten.bp.MonthDay
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String SNAPSHOT_ASSET_PATH_KEY
com.jcraft.jsch.HostKeyRepository: void remove(java.lang.String,java.lang.String,byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
io.flutter.plugin.common.MethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_startColor
com.jcraft.jsch.KeyPairRSA: byte[] c_array
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
io.flutter.plugins.sharedpreferences.R$string: int status_bar_notification_info_overflow
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
com.jcraft.jsch.IdentityRepository$Wrapper: void add(com.jcraft.jsch.Identity)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCloseWebView(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.jcraft.jsch.Session: com.jcraft.jsch.HostKeyRepository hostkeyRepository
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.sharedpreferences.R$attr: int font
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_font
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification
com.jcraft.jsch.jce.KeyPairGenECDSA
com.jcraft.jsch.Proxy: java.net.Socket getSocket()
io.flutter.plugins.sharedpreferences.R$id: int action_text
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry
org.threeten.bp.chrono.JapaneseEra
com.jcraft.jsch.IdentityRepository: int RUNNING
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.SoundSource)
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
com.jcraft.jsch.KeyPairDSA: byte[] prv_array
com.jcraft.jsch.Session: void setPortForwardingR(int,java.lang.String,int,com.jcraft.jsch.SocketFactory)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
io.flutter.plugin.editing.TextInputPlugin: boolean isRestartAlwaysRequired()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager delegate
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_OPEN
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.embedding.android.FlutterImageView$1
com.jcraft.jsch.ProxySOCKS5: java.io.OutputStream getOutputStream()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder withNewEngine()
com.jcraft.jsch.ChannelSftp$RequestQueue: int count
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToForeground()
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.camera.CameraSettings getCameraSettings()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
androidx.fragment.app.Fragment: int mState
com.jcraft.jsch.ChannelDirectTCPIP: void setInputStream(java.io.InputStream)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
com.jcraft.jsch.SftpException: java.lang.Throwable getCause()
com.jcraft.jsch.Util: byte[] str2byte(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterView$TransparencyMode
io.flutter.embedding.android.FlutterFragment: void onBackPressed()
com.jcraft.jsch.jce.ECDH384: void init()
io.flutter.embedding.android.AndroidKeyProcessor: boolean onKeyEvent(android.view.KeyEvent)
io.flutter.view.FlutterView: java.lang.String getLookupKeyForAsset(java.lang.String)
io.flutter.view.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
com.jcraft.jsch.KeyPairECDSA: byte[] toPoint(byte[],byte[])
com.jcraft.jsch.ChannelSftp: boolean fEncoding_is_utf8
com.jcraft.jsch.SftpATTRS: int getUId()
com.jcraft.jsch.SftpStatVFS: long getMaximumFilenameLength()
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineDetachedFromFlutterView()
io.flutter.plugin.editing.TextInputPlugin$InputTarget
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: android.app.Activity activity()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
com.jcraft.jsch.JSch: com.jcraft.jsch.HostKeyRepository getHostKeyRepository()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.jcraft.jsch.ChannelAgentForwarding: int LOCAL_MAXIMUM_PACKET_SIZE
com.jcraft.jsch.Channel: int rmpsize
com.jcraft.jsch.ChannelForwardedTCPIP: java.lang.String[] getPortForwarding(com.jcraft.jsch.Session)
io.flutter.plugin.platform.VirtualDisplayController$1: io.flutter.plugin.platform.VirtualDisplayController this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
com.jcraft.jsch.jce.KeyPairGenDSA: KeyPairGenDSA()
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColorItem_android_offset
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Time
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
io.flutter.FlutterInjector$Builder: void fillDefaults()
com.jcraft.jsch.ChannelSftp$LsEntrySelector
io.flutter.app.FlutterActivityDelegate: android.view.View launchView
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_5
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger
androidx.fragment.app.Fragment: java.lang.String getTag()
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
com.jcraft.jsch.CipherNone: void init(int,byte[],byte[])
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.jcraft.jsch.KeyPairECDSA: byte[] s_array
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.jcraft.jsch.PortWatcher: com.jcraft.jsch.PortWatcher addPort(com.jcraft.jsch.Session,java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory)
com.jcraft.jsch.Channel$PassiveInputStream
com.jcraft.jsch.Session: byte[] I_C
androidx.fragment.app.Fragment: void initLifecycle()
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener
com.jcraft.jsch.Session: boolean x11_forwarding
com.jcraft.jsch.Session: int SSH_MSG_REQUEST_FAILURE
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_FSETSTAT
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.jcraft.jsch.Channel: com.jcraft.jsch.Session getSession()
com.jcraft.jsch.ChannelSftp: void mkdir(java.lang.String)
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.ChannelSftp$RequestQueue rq
com.jcraft.jsch.jce.AES256CTR: javax.crypto.Cipher cipher
com.jcraft.jsch.HostKeyRepository: int OK
com.jcraft.jsch.Request: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.jcraft.jsch.KeyPair: byte b2a(byte)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.jcraft.jsch.jce.HMAC: java.lang.String algorithm
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
com.jcraft.jsch.Channel: int exitstatus
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
io.flutter.view.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
com.jcraft.jsch.jce.HMACMD5: java.lang.String getName()
com.jcraft.jsch.ChannelSftp: void ls(java.lang.String,com.jcraft.jsch.ChannelSftp$LsEntrySelector)
com.jcraft.jsch.KeyPair: com.jcraft.jsch.Random random
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
io.flutter.view.FlutterMain
io.flutter.app.FlutterActivity: void onPause()
io.flutter.embedding.engine.loader.FlutterLoader$Settings: void setLogTag(java.lang.String)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
io.flutter.app.FlutterFragmentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.plugins.FlutterPlugin
com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderAuthority
com.journeyapps.barcodescanner.DecoratedBarcodeView: DecoratedBarcodeView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.urllauncher.R$dimen: int notification_small_icon_background_padding
io.flutter.view.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
com.google.android.exoplayer2.ui.PlayerView: void setUseController(boolean)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
io.flutter.plugins.sharedpreferences.R$layout
com.jcraft.jsch.Channel: void sendChannelOpen()
com.jcraft.jsch.jcraft.Compression: Compression()
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.Buffer access$700(com.jcraft.jsch.ChannelSftp)
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
com.jcraft.jsch.Session$Forwarding: Session$Forwarding(com.jcraft.jsch.Session,com.jcraft.jsch.Session$1)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.jcraft.jsch.KeyExchange: java.lang.String enc_s2c
androidx.savedstate.SavedStateRegistry$1
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_INITIAL_ROUTE
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
com.jcraft.jsch.JSch: com.jcraft.jsch.Session getSession(java.lang.String,java.lang.String,int)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getEQ()
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.String,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
com.jcraft.jsch.ChannelSession: byte[] terminal_mode
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
com.jcraft.jsch.JSch: void addIdentity(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
com.jcraft.jsch.Session: byte[] Es2c
com.jcraft.jsch.DHGEX: void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[])
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.jcraft.jsch.DHG1: byte[] V_C
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.plugins.pathprovider.R
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel
com.jcraft.jsch.jce.SignatureRSA: void setPubKey(byte[],byte[])
com.jcraft.jsch.Session$Forwarding: int hostport
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
com.jcraft.jsch.Channel: com.jcraft.jsch.Channel getChannel(int,com.jcraft.jsch.Session)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.plugin.editing.TextInputPlugin: void setKeyEventProcessor(io.flutter.embedding.android.AndroidKeyProcessor)
com.jcraft.jsch.KeyPair$ASN1: int getType()
com.jcraft.jsch.IdentityRepository: boolean add(byte[])
org.threeten.bp.chrono.ThaiBuddhistDate
io.flutter.plugins.urllauncher.R$dimen: int notification_action_text_size
com.jcraft.jsch.SftpProgressMonitor: void end()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.fragment.app.Fragment: boolean isInBackStack()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.jcraft.jsch.KnownHosts: java.lang.String getKnownHostsRepositoryID()
io.flutter.app.FlutterActivityDelegate: boolean loadIntent(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.plugin.common.BasicMessageChannel$1
com.jcraft.jsch.RequestEnv
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.jcraft.jsch.Session: int setPortForwardingL(int,java.lang.String,int)
androidx.fragment.app.FragmentActivity: int mNextCandidateRequestIndex
io.flutter.plugins.urllauncher.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_3
com.jcraft.jsch.jcraft.Compression: void init(int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler: void activateSystemCursor(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_2
com.jcraft.jsch.UserAuthGSSAPIWithMIC: java.lang.String[] supported_method
com.jcraft.jsch.RequestPtyReq: int twp
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowShuffleButton(boolean)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
com.jcraft.jsch.jce.AES128CBC: int bsize
com.jcraft.jsch.JSch: void addSession(com.jcraft.jsch.Session)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.android.AndroidKeyProcessor getKeyEventProcessor()
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.jcraft.jsch.jce.HMACMD596: HMACMD596()
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
com.jcraft.jsch.Logger: int FATAL
io.flutter.embedding.android.FlutterFragment: android.app.Activity getActivity()
com.jcraft.jsch.DHGEX: byte[] I_C
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.jcraft.jsch.KeyPairDSA: byte[] getKeyTypeName()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path path
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
io.flutter.view.FlutterView: void removeFirstFrameListener(io.flutter.view.FlutterView$FirstFrameListener)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
com.jcraft.jsch.DHG1: void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[])
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowNextButton(boolean)
com.jcraft.jsch.SftpStatVFS: int mtime
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColorItem_android_color
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
io.flutter.plugins.urllauncher.R$id: int normal
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_endColor
io.flutter.plugins.sharedpreferences.R$drawable: R$drawable()
io.flutter.plugin.common.StandardMessageCodec: byte LONG
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
com.jcraft.jsch.ChannelSftp: java.io.OutputStream put(java.lang.String,int)
com.jcraft.jsch.KeyPair: java.lang.String getFingerPrint()
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
com.jcraft.jsch.Session: void setPortForwardingR(int,java.lang.String,int)
com.jcraft.jsch.PortWatcher: com.jcraft.jsch.PortWatcher getPort(com.jcraft.jsch.Session,java.lang.String,int)
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.plugin.mouse.MouseCursorPlugin$2: long serialVersionUID
com.jcraft.jsch.Session$GlobalRequestReply: com.jcraft.jsch.Session this$0
io.flutter.plugin.editing.ListenableEditingState$1
org.threeten.bp.chrono.JapaneseChronology
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_clickable_spans
com.google.android.exoplayer2.ui.PlayerView: void setRepeatToggleModes(int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$6100(io.flutter.view.AccessibilityBridge,int)
io.flutter.Log: void w(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
com.jcraft.jsch.ChannelSubsystem
androidx.appcompat.widget.ScrollingTabContainerView
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getControllerAutoShow()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
com.jcraft.jsch.LocalIdentityRepository: boolean remove(byte[])
io.flutter.embedding.android.DrawableSplashScreen: long crossfadeDurationInMillis
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
com.jcraft.jsch.jce.SHA512
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets getFlutterAssets()
com.jcraft.jsch.jce.AES128CBC: void update(byte[],int,int,byte[],int)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.ViewfinderView getViewFinder()
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values()
org.threeten.bp.LocalDateTime
com.jcraft.jsch.KeyPair$ASN1: com.jcraft.jsch.KeyPair this$0
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
com.jcraft.jsch.Channel: int SSH_MSG_CHANNEL_WINDOW_ADJUST
io.flutter.view.AccessibilityViewEmbedder
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
com.jcraft.jsch.ChannelSftp: java.io.OutputStream put(java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.jcraft.jsch.Session: byte[] session_id
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource)
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
com.jcraft.jsch.Session: java.lang.String hostKeyAlias
org.threeten.bp.chrono.Ser
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
com.jcraft.jsch.jce.DH: void checkRange(java.math.BigInteger)
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidKeyProcessor androidKeyProcessor
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENT_FAILURE
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
io.flutter.embedding.android.FlutterActivity: void onDestroy()
io.flutter.plugins.urllauncher.WebViewActivity: android.content.IntentFilter closeIntentFilter
com.jcraft.jsch.Channel: long rwsize
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpATTRS _stat(java.lang.String)
io.flutter.embedding.android.SplashScreenProvider
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.List decodeList(java.lang.String)
com.jcraft.jsch.Channel: void setOutputStream(java.io.OutputStream)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set userLeaveHintListeners
io.flutter.app.FlutterActivity: void onStop()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
com.jcraft.jsch.Buffer: int getOffSet()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidAndroidVersion(int)
androidx.work.impl.diagnostics.DiagnosticsReceiver
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: io.flutter.view.FlutterNativeView this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
com.jcraft.jsch.ChannelSftp$1: void close()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask mExtractTask
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_17
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
com.jcraft.jsch.KnownHosts$HashedHostKey: KnownHosts$HashedHostKey(com.jcraft.jsch.KnownHosts,java.lang.String,byte[])
io.flutter.view.FlutterView: boolean didRenderFirstFrame
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetRight
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
com.jcraft.jsch.KeyPairRSA: byte[] getKeyTypeName()
com.jcraft.jsch.jce.ECDH384
com.google.android.exoplayer2.ui.StyledPlayerView: android.view.ViewGroup getAdViewGroup()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SKIA
com.jcraft.jsch.KeyPairRSA: byte[] eq_array
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
com.jcraft.jsch.RequestX11: void setCookie(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onPreEngineRestart()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
io.flutter.plugins.pathprovider.R$attr: int fontProviderFetchStrategy
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetTop
com.jcraft.jsch.Channel: void setLocalWindowSizeMax(int)
io.flutter.embedding.engine.systemchannels.NavigationChannel: java.lang.String TAG
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge: int ROOT_NODE_ID
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterView$RenderMode)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
com.jcraft.jsch.Session: void encode(com.jcraft.jsch.Packet)
com.jcraft.jsch.Util$1: java.net.Socket[] val$sockp
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
io.flutter.plugin.editing.TextInputPlugin
com.google.android.exoplayer2.ui.PlayerControlView: void setTimeBarMinUpdateInterval(int)
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_11
androidx.fragment.app.Fragment: int getId()
com.jcraft.jsch.RequestSignal
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
io.flutter.view.FlutterView: void onStart()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_STATUS
androidx.lifecycle.ViewModel: ViewModel()
com.jcraft.jsch.KeyExchange: byte[] getH()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
com.jcraft.jsch.ConfigRepository: com.jcraft.jsch.ConfigRepository$Config getConfig(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
com.jcraft.jsch.KeyExchange: java.lang.String[] guess(byte[],byte[])
com.jcraft.jsch.jce.HMACSHA512: void doFinal(byte[],int)
io.flutter.view.FlutterView$2: io.flutter.view.FlutterView this$0
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path getPath()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_EOF
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.IconSource)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets
com.jcraft.jsch.Util: java.lang.String byte2str(byte[],java.lang.String)
com.jcraft.jsch.DHECN: void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[])
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
com.jcraft.jsch.Request
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
com.jcraft.jsch.RequestWindowChange: void setSize(int,int,int,int)
com.jcraft.jsch.ChannelSession: boolean xforwading
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiNoLongerDisplayed()
com.jcraft.jsch.KeyPairECDSA: KeyPairECDSA(com.jcraft.jsch.JSch,byte[],byte[],byte[],byte[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setPlatformViewClient(int)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
com.jcraft.jsch.RequestExec: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
io.flutter.embedding.android.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_centerColor
com.jcraft.jsch.HostKey: int UNKNOWN
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_26
io.flutter.plugins.urllauncher.R$dimen: int notification_small_icon_size_as_large
com.jcraft.jsch.IdentityRepository
io.flutter.plugins.GeneratedPluginRegistrant
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
com.jcraft.jsch.RequestSubsystem: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
io.flutter.embedding.engine.plugins.FlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.pathprovider.R$id: int tag_unhandled_key_event_manager
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
com.jcraft.jsch.Session: int SSH_MSG_DISCONNECT
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: FlutterPluginRegistry$FlutterRegistrar(io.flutter.app.FlutterPluginRegistry,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToForeground()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
io.flutter.app.FlutterActivityDelegate: void addLaunchView()
com.jcraft.jsch.jce.KeyPairGenECDSA: java.security.interfaces.ECPublicKey pubKey
com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)
com.google.android.exoplayer2.ui.PlayerView: java.util.List getAdOverlayInfos()
com.jcraft.jsch.KeyPairGenRSA: byte[] getD()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
androidx.appcompat.widget.SearchView: int getImeOptions()
io.flutter.plugins.pathprovider.R$dimen: int notification_subtext_size
com.jcraft.jsch.RequestEnv: byte[] value
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
io.flutter.view.FlutterNativeView$1: void onFlutterUiDisplayed()
io.flutter.plugin.common.PluginRegistry$ActivityResultListener
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
com.jcraft.jsch.Channel: int lwsize_max
com.jcraft.jsch.JSch: void setConfig(java.util.Hashtable)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_15
io.flutter.view.AccessibilityBridge$3
io.flutter.view.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
com.jcraft.jsch.KeyPairDSA: void generate(int)
com.jcraft.jsch.KeyExchange: int type
com.jcraft.jsch.Session: byte[] V_C
com.jcraft.jsch.KeyPairECDSA: KeyPairECDSA(com.jcraft.jsch.JSch)
io.flutter.embedding.android.FlutterSplashView: void access$200(io.flutter.embedding.android.FlutterSplashView)
io.flutter.app.FlutterActivityDelegate: void onStart()
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterView createFlutterView(android.content.Context)
com.jcraft.jsch.RequestAgentForwarding: RequestAgentForwarding()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge$Flag: int value
com.jcraft.jsch.SftpStatVFS: int getCapacity()
io.flutter.plugins.urllauncher.R$styleable
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType[] values()
org.threeten.bp.LocalTime: java.lang.Object readResolve()
com.jcraft.jsch.RequestSignal: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
androidx.appcompat.widget.ActionBarContainer
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager
com.jcraft.jsch.ChannelSftp: void sendOPENW(byte[])
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
com.jcraft.jsch.Session: int setPortForwardingL(java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory)
io.flutter.view.FlutterRunArguments
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
com.jcraft.jsch.jce.MD5: java.security.MessageDigest md
io.flutter.embedding.engine.FlutterEngineGroup$1: void onPreEngineRestart()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_DOM_EXTRA
com.jcraft.jsch.IdentityRepository: java.lang.String getName()
androidx.fragment.app.Fragment: boolean mHasMenu
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: MethodCallHandlerImpl(io.flutter.plugins.urllauncher.UrlLauncher)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void teardown()
com.jcraft.jsch.ChannelAgentForwarding: void run()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.jcraft.jsch.KeyExchange: java.lang.String mac_c2s
androidx.appcompat.widget.ViewStubCompat
com.jcraft.jsch.jce.ECDHN: void bzero(byte[])
com.jcraft.jsch.Channel: void setLocalPacketSize(int)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
com.jcraft.jsch.KeyPair: com.jcraft.jsch.JSch jsch
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_19
io.flutter.embedding.android.FlutterFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
io.flutter.view.FlutterView: void setInitialRoute(java.lang.String)
io.flutter.plugins.sharedpreferences.R$id
com.jcraft.jsch.ChannelSftp: int SSH_FXF_CREAT
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.flutter.plugin.common.EventChannel$StreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.embedding.android.SplashScreen
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
com.jcraft.jsch.ChannelExec: java.io.InputStream getErrStream()
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
com.jcraft.jsch.RequestWindowChange
io.flutter.embedding.engine.loader.FlutterLoader$1$1: io.flutter.embedding.engine.loader.FlutterLoader$1 this$1
com.jcraft.jsch.ChannelSession: ChannelSession()
com.jcraft.jsch.Channel: com.jcraft.jsch.Packet genChannelOpenPacket()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
io.flutter.app.FlutterActivityDelegate: io.flutter.view.FlutterView access$100(io.flutter.app.FlutterActivityDelegate)
com.jcraft.jsch.KeyPair: int getKeySize()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.jcraft.jsch.ChannelSftp$LsEntry: void setLongname(java.lang.String)
com.jcraft.jsch.jce.ARCFOUR: ARCFOUR()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.Request: void setReply(boolean)
io.flutter.view.FlutterView: void access$000(io.flutter.view.FlutterView,boolean,boolean)
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl
io.flutter.plugins.urllauncher.R$style: R$style()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
com.jcraft.jsch.KnownHosts$HashedHostKey: void hash()
com.jcraft.jsch.ChannelForwardedTCPIP: int TIMEOUT
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.Log: void d(java.lang.String,java.lang.String)
io.flutter.view.FlutterView$3: void onPostResume()
com.jcraft.jsch.GSSContext: void create(java.lang.String,java.lang.String)
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
io.flutter.embedding.android.FlutterSplashView: void transitionToFlutter()
io.flutter.plugins.sharedpreferences.R$style: int Widget_Compat_NotificationActionText
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: java.util.concurrent.atomic.AtomicBoolean hasEnded
io.flutter.plugin.platform.VirtualDisplayController$1$1: VirtualDisplayController$1$1(io.flutter.plugin.platform.VirtualDisplayController$1)
io.flutter.embedding.android.FlutterFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SYSTRACE
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
androidx.core.app.RemoteActionCompatParcelizer
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
com.jcraft.jsch.KeyPairRSA: byte[] forSSHAgent()
com.jcraft.jsch.ECDH: boolean validate(byte[],byte[])
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.jcraft.jsch.jce.HMACSHA256
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCROLL
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(com.google.android.play.core.splitinstall.SplitInstallSessionState)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToBackground()
io.flutter.embedding.android.FlutterFragment: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.ChannelSubsystem: ChannelSubsystem()
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy getPreviewScalingStrategy()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set viewDestroyListeners
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_3
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void show()
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec codec
com.jcraft.jsch.Proxy
com.jcraft.jsch.jce.SHA384: int getBlockSize()
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController$RecycleListView
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_9
com.jcraft.jsch.jcraft.Compression: int BUF_SIZE
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
com.jcraft.jsch.ChannelX11: int LOCAL_WINDOW_SIZE_MAX
org.threeten.bp.Instant: java.lang.Object writeReplace()
com.jcraft.jsch.SftpATTRS: int getMTime()
io.flutter.view.FlutterView: void addFirstFrameListener(io.flutter.view.FlutterView$FirstFrameListener)
io.flutter.view.VsyncWaiter$1
com.jcraft.jsch.ChannelExec: void setEnv(java.util.Hashtable)
io.flutter.embedding.android.FlutterFragment: void onPause()
io.flutter.view.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.KeyPair: byte[] genKey(byte[],byte[])
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
org.threeten.bp.OffsetDateTime: java.lang.Object readResolve()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ISOLATE_SNAPSHOT_DATA_KEY
io.flutter.view.FlutterView$FirstFrameListener: void onFirstFrame()
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.jcraft.jsch.HostKey: java.lang.String getHost()
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
io.flutter.plugins.urllauncher.R$dimen: int notification_top_pad_large_text
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
io.flutter.plugins.pathprovider.R$attr: int alpha
com.jcraft.jsch.KnownHosts$HashedHostKey: KnownHosts$HashedHostKey(com.jcraft.jsch.KnownHosts,java.lang.String,int,byte[])
org.threeten.bp.zone.ZoneOffsetTransition: java.lang.Object writeReplace()
org.threeten.bp.Duration
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_fontStyle
com.jcraft.jsch.jce.AES256CBC: boolean isCBC()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void success(java.lang.Object)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: int getResizeMode()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
io.flutter.plugins.pathprovider.R$string: int status_bar_notification_info_overflow
com.jcraft.jsch.ChannelSftp: java.util.Vector glob_local(java.lang.String)
io.flutter.view.FlutterView: boolean checkInputConnectionProxy(android.view.View)
io.flutter.plugins.sharedpreferences.R$id: int notification_main_column
com.jcraft.jsch.SftpATTRS: com.jcraft.jsch.SftpATTRS getATTR(com.jcraft.jsch.Buffer)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,android.view.inputmethod.EditorInfo)
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
io.flutter.view.FlutterView: java.util.List mActivityLifecycleListeners
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: FlutterNativeView$EngineLifecycleListenerImpl(io.flutter.view.FlutterNativeView,io.flutter.view.FlutterNativeView$1)
com.jcraft.jsch.Channel: int notifyme
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
com.google.android.exoplayer2.ui.PlayerControlView: void setRepeatToggleModes(int)
io.flutter.app.FlutterPluginRegistry: java.util.List mViewDestroyListeners
com.jcraft.jsch.KeyPair: int writeLength(byte[],int,int)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: android.app.Activity activity()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
com.jcraft.jsch.RequestPtyReq: void setTSize(int,int,int,int)
com.jcraft.jsch.jcraft.HMACMD596: java.lang.String name
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
com.jcraft.jsch.ChannelSftp: int LOCAL_WINDOW_SIZE_MAX
com.jcraft.jsch.Channel: int recipient
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.jcraft.jsch.Cipher: void update(byte[],int,int,byte[],int)
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.jcraft.jsch.ProxySOCKS5: int getDefaultPort()
com.jcraft.jsch.SocketFactory: java.io.OutputStream getOutputStream(java.net.Socket)
com.jcraft.jsch.PortWatcher: void setConnectTimeout(int)
com.jcraft.jsch.RequestWindowChange: RequestWindowChange()
io.flutter.view.FlutterView: void onSizeChanged(int,int,int,int)
io.flutter.plugins.pathprovider.R$id: int tag_transition_group
com.google.android.exoplayer2.ui.TrackSelectionView: void setAllowAdaptiveSelections(boolean)
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
io.flutter.embedding.android.FlutterView$TransparencyMode: io.flutter.embedding.android.FlutterView$TransparencyMode opaque
com.jcraft.jsch.jce.KeyPairGenECDSA: java.security.interfaces.ECPrivateKey prvKey
com.jcraft.jsch.Channel$1: com.jcraft.jsch.Packet packet
com.jcraft.jsch.ChannelForwardedTCPIP$Config
com.google.android.exoplayer2.ui.StyledPlayerView: void setKeepContentOnPlayerReset(boolean)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl
com.jcraft.jsch.DHGEX: int SSH_MSG_KEX_DH_GEX_INIT
com.jcraft.jsch.KeyPair: com.jcraft.jsch.Cipher cipher
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
io.flutter.plugin.editing.TextInputPlugin: void access$500(io.flutter.plugin.editing.TextInputPlugin,int)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader getInstance()
com.jcraft.jsch.ChannelSftp: int server_version
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setTimeBarMinUpdateInterval(int)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterView$RenderMode,io.flutter.embedding.android.FlutterView$TransparencyMode)
com.jcraft.jsch.Channel: void init()
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(java.lang.Integer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: FlutterFragmentActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
com.jcraft.jsch.RequestWindowChange: int height_rows
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
com.jcraft.jsch.RequestExec: RequestExec(byte[])
com.jcraft.jsch.jce.SHA256: void init()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
io.flutter.view.AccessibilityBridge: void sendWindowChangeEvent(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.jcraft.jsch.jcraft.HMAC: int B
com.jcraft.jsch.jce.SignatureDSA
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3300(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.jcraft.jsch.jce.AES256CBC
com.jcraft.jsch.ChannelDirectTCPIP: int port
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
io.flutter.view.FlutterMain$Settings
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
io.flutter.plugin.common.StandardMessageCodec: java.lang.String TAG
com.jcraft.jsch.jce.SignatureRSA: byte[] sign()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel access$300(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
io.flutter.embedding.android.DrawableSplashScreen: android.widget.ImageView$ScaleType scaleType
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.ui.TrackSelectionView: java.util.List getOverrides()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setRepeatToggleModes(int)
io.flutter.plugin.common.ErrorLogResult: void success(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.pathprovider.R$styleable
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_type
io.flutter.plugins.urllauncher.UrlLauncher: boolean canLaunch(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
com.jcraft.jsch.KeyPairDSA: byte[] Q_array
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: java.lang.String TAG
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.jcraft.jsch.jcraft.HMAC: void doFinal(byte[],int)
androidx.work.WorkerParameters
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.platform.PlatformViewsController access$400(io.flutter.app.FlutterPluginRegistry)
io.flutter.util.Preconditions
io.flutter.plugins.sharedpreferences.R$color: int notification_action_color_filter
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 this$1
io.flutter.plugins.sharedpreferences.R$string: R$string()
com.jcraft.jsch.PortWatcher: PortWatcher(com.jcraft.jsch.Session,java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[])
com.jcraft.jsch.KeyPairECDSA: byte[] prv_array
io.flutter.app.FlutterActivity: io.flutter.view.FlutterNativeView createFlutterNativeView()
io.flutter.app.FlutterActivityDelegate: io.flutter.app.FlutterActivityDelegate$ViewFactory viewFactory
io.flutter.plugins.pathprovider.R$id: int blocking
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
com.jcraft.jsch.ChannelSftp: int SSH_FXF_TRUNC
com.jcraft.jsch.Util$1: Util$1(java.net.Socket[],java.lang.String,int,java.lang.Exception[])
com.jcraft.jsch.DHECN: byte[] I_S
com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])
com.jcraft.jsch.Session: int SSH_MSG_SERVICE_ACCEPT
com.jcraft.jsch.IdentityFile: byte[] getSignature(byte[])
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray mAutofillConfigurations
com.jcraft.jsch.UserAuthGSSAPIWithMIC: int SSH_MSG_USERAUTH_GSSAPI_ERRTOK
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
com.jcraft.jsch.Session: int SSH_MSG_KEX_DH_GEX_REPLY
com.jcraft.jsch.KeyPairPKCS8: void generate(int)
com.jcraft.jsch.ChannelSubsystem: java.io.InputStream getErrStream()
com.google.android.exoplayer2.ui.PlayerView: int getControllerShowTimeoutMs()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
io.flutter.plugins.pathprovider.R$drawable: int notification_template_icon_low_bg
com.jcraft.jsch.KnownHosts: void sync()
com.jcraft.jsch.jce.AES128CTR: int getBlockSize()
io.flutter.embedding.android.FlutterFragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.jcraft.jsch.RequestSubsystem: RequestSubsystem()
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.jcraft.jsch.jcraft.HMACSHA196: HMACSHA196()
io.flutter.app.FlutterActivity: void onBackPressed()
com.jcraft.jsch.ChannelSftp: int SSH_FX_NO_CONNECTION
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
org.threeten.bp.chrono.MinguoDate: java.lang.Object writeReplace()
org.threeten.bp.chrono.MinguoChronology
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onActivityResult(int,int,android.content.Intent)
com.jcraft.jsch.SftpATTRS: int SSH_FILEXFER_ATTR_SIZE
com.jcraft.jsch.ChannelSftp$Header: int type
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String)
com.jcraft.jsch.jce.AES192CBC
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.jcraft.jsch.jce.SignatureECDSA: void update(byte[])
com.jcraft.jsch.KeyPair: byte[] iv
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.common.MessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.jcraft.jsch.jce.HMACMD5: void init(byte[])
io.flutter.plugins.pathprovider.R$dimen: int notification_large_icon_height
com.jcraft.jsch.Session: void requestPortForwarding()
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
com.jcraft.jsch.IdentityRepository: int getStatus()
androidx.fragment.app.FragmentActivity: void onPostResume()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
io.flutter.plugins.pathprovider.R$attr: int fontProviderQuery
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void detachFromService()
com.jcraft.jsch.ChannelSftp$LsEntry: java.lang.String getFilename()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
io.flutter.view.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.jcraft.jsch.DHGEX: byte[] V_S
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.plugins.pathprovider.R$dimen: R$dimen()
io.flutter.view.FlutterView: void onPostResume()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String HANDLE_DEEPLINKING_META_DATA_KEY
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_clickable_spans
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
com.jcraft.jsch.DHG14: int getState()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
io.flutter.plugins.pathprovider.R$styleable: int ColorStateListItem_alpha
com.jcraft.jsch.jce.MD5: byte[] digest()
io.flutter.embedding.android.FlutterSplashView: void onRestoreInstanceState(android.os.Parcelable)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.exoplayer2.ui.SubtitleView: com.google.android.exoplayer2.text.CaptionStyleCompat getUserCaptionStyle()
com.jcraft.jsch.ChannelSession: void run()
com.jcraft.jsch.KeyPairPKCS8: byte[] rsaEncryption
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.jcraft.jsch.ChannelForwardedTCPIP: void delPort(com.jcraft.jsch.Session,java.lang.String,int)
io.flutter.app.FlutterPluginRegistry: android.app.Activity mActivity
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_low_pressed
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
io.flutter.view.FlutterNativeView: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
com.jcraft.jsch.UserAuthGSSAPIWithMIC: int SSH_MSG_USERAUTH_GSSAPI_RESPONSE
com.jcraft.jsch.DHECN: java.lang.String sha_name
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
io.flutter.embedding.engine.FlutterEngine: java.lang.String TAG
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.platform.PlatformViewsController mPlatformViewsController
com.jcraft.jsch.ProxyHTTP: java.lang.String proxy_host
io.flutter.app.FlutterActivityEvents: void onStart()
io.flutter.app.FlutterFragmentActivity: void onLowMemory()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_12
org.threeten.bp.ZonedDateTime: java.lang.Object readResolve()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
io.flutter.plugins.urllauncher.R$id: int forever
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean destroyEngineWithFragment
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
io.flutter.app.FlutterActivity: void onPostResume()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
com.google.android.exoplayer2.ui.TrackSelectionView: void setShowDisableOption(boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.jcraft.jsch.ConfigRepository$1: java.lang.String getValue(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
io.flutter.embedding.engine.dart.DartMessenger: java.lang.String TAG
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FIELD_COUNT
io.flutter.plugins.pathprovider.R$id: int time
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getE()
com.jcraft.jsch.KeyPairPKCS8: byte[] begin
io.flutter.plugins.urllauncher.R$color
com.jcraft.jsch.KnownHosts$HashedHostKey: java.lang.String HASH_MAGIC
com.jcraft.jsch.JSchPartialAuthException: JSchPartialAuthException(java.lang.String)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.flutter.plugins.urllauncher.R$dimen: int compat_button_padding_vertical_material
io.flutter.plugin.mouse.MouseCursorPlugin$1
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
io.flutter.plugins.urllauncher.R$styleable: int[] FontFamilyFont
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.flutter.view.FlutterView: void sendUserPlatformSettingsToDart()
com.jcraft.jsch.Channel$PassiveOutputStream: void write(int)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_centerColor
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
com.jcraft.jsch.OpenSSHConfig
io.flutter.view.FlutterMain: java.lang.String findAppBundlePath(android.content.Context)
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENT_IDENTITIES_ANSWER
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
io.flutter.view.FlutterView: io.flutter.view.AccessibilityBridge mAccessibilityNodeProvider
com.jcraft.jsch.KeyPairPKCS8: com.jcraft.jsch.Signature getVerifier()
io.flutter.plugins.pathprovider.R$id: int italic
io.flutter.app.FlutterPluginRegistry: java.util.List access$1000(io.flutter.app.FlutterPluginRegistry)
com.jcraft.jsch.Channel: void run()
io.flutter.plugins.pathprovider.R$dimen: int compat_button_padding_vertical_material
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.flutter.view.FlutterNativeView: io.flutter.app.FlutterPluginRegistry getPluginRegistry()
io.flutter.view.FlutterView: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Info
com.jcraft.jsch.jcraft.HMACSHA196: int BSIZE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
io.flutter.plugin.editing.FlutterTextUtils: int COMBINING_ENCLOSING_KEYCAP
com.jcraft.jsch.KeyPairRSA: com.jcraft.jsch.KeyPair fromSSHAgent(com.jcraft.jsch.JSch,com.jcraft.jsch.Buffer)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SKIA
com.jcraft.jsch.DHG1: com.jcraft.jsch.DH dh
io.flutter.plugins.pathprovider.R$styleable: int ColorStateListItem_android_color
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] n
com.jcraft.jsch.KeyPair$ASN1: boolean isINTEGER()
com.jcraft.jsch.ChannelDirectTCPIP: int originator_port
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.jcraft.jsch.jce.KeyPairGenECDSA: void init(int)
com.google.android.exoplayer2.ui.StyledPlayerView: android.widget.FrameLayout getOverlayFrameLayout()
com.jcraft.jsch.KeyPair: void writeSECSHPublicKey(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String FRAMEWORK_RESTORATION_BUNDLE_KEY
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
com.jcraft.jsch.UserAuth: com.jcraft.jsch.Packet packet
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
com.jcraft.jsch.DH: void setP(byte[])
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
com.jcraft.jsch.Channel$PassiveOutputStream
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_7
com.google.android.exoplayer2.ui.SubtitleView: java.util.List getCuesWithStylingPreferencesApplied()
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] r
org.threeten.bp.OffsetTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_type
org.threeten.bp.ZoneRegion: java.lang.Object readResolve()
org.threeten.bp.chrono.HijrahChronology
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.lang.String host
io.flutter.view.FlutterView: void onStop()
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
com.jcraft.jsch.KeyPairPKCS8: byte[] getPrivateKey()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String NETWORK_POLICY_METADATA_KEY
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
com.jcraft.jsch.jcraft.HMACMD596: void doFinal(byte[],int)
com.jcraft.jsch.KeyPair: com.jcraft.jsch.Cipher genCipher()
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
io.flutter.app.FlutterActivity: FlutterActivity()
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_padding_vertical_material
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
com.jcraft.jsch.ChannelSftp: void hardlink(java.lang.String,java.lang.String)
com.jcraft.jsch.KeyPair: KeyPair(com.jcraft.jsch.JSch)
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle valueOf(java.lang.String)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
io.flutter.view.FlutterMain: void startInitialization(android.content.Context,io.flutter.view.FlutterMain$Settings)
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int UNKNOWN
com.jcraft.jsch.jce.ECDHN: java.math.BigInteger two
com.jcraft.jsch.jce.AES192CTR
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setVideoComponent(com.google.android.exoplayer2.Player$VideoComponent)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String largeIcon
io.flutter.plugin.platform.AccessibilityEventsDelegate
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
com.jcraft.jsch.KeyPairECDSA: com.jcraft.jsch.Signature getVerifier()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
io.flutter.plugins.urllauncher.R$attr: R$attr()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set newIntentListeners
com.jcraft.jsch.SftpATTRS: int S_IEXEC
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_NAME
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebViewClient webViewClient
com.jcraft.jsch.Session: com.jcraft.jsch.IdentityRepository identityRepository
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_endColor
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
com.jcraft.jsch.Channel: void write_ext(byte[],int,int)
com.jcraft.jsch.Channel: void eof()
com.jcraft.jsch.jcraft.Compression
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_DATA
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
com.jcraft.jsch.SftpStatVFS: long getAvailForNonRoot()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
io.flutter.embedding.android.DrawableSplashScreen: void transitionToFlutter(java.lang.Runnable)
com.jcraft.jsch.Channel$MyPipedInputStream: Channel$MyPipedInputStream(com.jcraft.jsch.Channel,int,int)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
com.jcraft.jsch.jce.BlowfishCBC: int getIVSize()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
com.google.android.exoplayer2.ui.PlayerView: void setShowBuffering(int)
com.jcraft.jsch.Session: void setSocketFactory(com.jcraft.jsch.SocketFactory)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: java.lang.Object getLifecycle()
androidx.work.impl.WorkDatabase
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.jcraft.jsch.Channel: int getExitStatus()
io.flutter.view.AccessibilityBridge: void reset()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1
com.jcraft.jsch.ChannelForwardedTCPIP$Config: int rport
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTooltip(java.lang.String)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.plugin.platform.PlatformView
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setAccessibilityFeatures(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.jcraft.jsch.JSchException: java.lang.Throwable getCause()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowMultiWindowTimeBar(boolean)
io.flutter.plugins.urllauncher.BuildConfig
com.google.android.exoplayer2.ui.SubtitleView: void setFractionalTextSize(float)
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationSupportDirectory()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization
com.jcraft.jsch.jce.SHA384: SHA384()
com.jcraft.jsch.KeyPairPKCS8: byte[] getKeyTypeName()
org.threeten.bp.LocalTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.common.BasicMessageChannel
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_12
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_centerX
com.jcraft.jsch.ConfigRepository$Config: java.lang.String[] getValues(java.lang.String)
com.jcraft.jsch.jcraft.HMACMD5: void doFinal(byte[],int)
com.jcraft.jsch.DHGEX: int max
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.ChannelSftp$Header access$500(com.jcraft.jsch.ChannelSftp,com.jcraft.jsch.Buffer,com.jcraft.jsch.ChannelSftp$Header)
com.jcraft.jsch.jce.HMACSHA256: void doFinal(byte[],int)
com.jcraft.jsch.KnownHosts: java.lang.String known_hosts
com.jcraft.jsch.ChannelExec: void setPtyType(java.lang.String)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_RENDER_MODE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
io.flutter.plugins.pathprovider.R$attr: int fontStyle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
io.flutter.app.FlutterFragmentActivity: void onStart()
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_low_pressed
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
io.flutter.Log: void v(java.lang.String,java.lang.String,java.lang.Throwable)
com.jcraft.jsch.KeyExchange: byte[] getK()
com.jcraft.jsch.ChannelExec: void setEnv(java.lang.String,java.lang.String)
com.jcraft.jsch.ECDH
com.jcraft.jsch.DHGEX: byte[] I_S
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
com.jcraft.jsch.ChannelSftp$RequestQueue: int head
com.jcraft.jsch.KeyPairDSA: boolean parse(byte[])
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
io.flutter.embedding.android.FlutterFragment
io.flutter.plugins.urllauncher.R$drawable: int notification_icon_background
com.jcraft.jsch.JSch: void setKnownHosts(java.lang.String)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] getExistingTimestamps(java.io.File)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
org.threeten.bp.ZoneRegion: java.lang.Object writeReplace()
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String CHANNEL_NAME
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getC()
com.jcraft.jsch.ChannelSession: void setEnv(byte[],byte[])
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,byte[],int)
io.flutter.embedding.engine.FlutterEngine: void destroy()
io.flutter.view.FlutterView: void pushRoute(java.lang.String)
io.flutter.plugins.pathprovider.R$dimen: int notification_main_column_padding_top
com.jcraft.jsch.jce.SignatureDSA: void init()
com.jcraft.jsch.KeyPairRSA: byte[] getEPArray()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
io.flutter.app.FlutterActivityDelegate: boolean isDebuggable()
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToBackground()
io.flutter.plugins.sharedpreferences.R$id: int dialog_button
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
io.flutter.plugin.platform.PlatformViewsController$1: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides[] $VALUES
io.flutter.embedding.android.FlutterSplashView: java.lang.String transitioningIsolateId
com.jcraft.jsch.jce.HMACMD596: void doFinal(byte[],int)
io.flutter.plugin.common.EventChannel$EventSink: void endOfStream()
com.jcraft.jsch.ProxySOCKS5: java.io.InputStream getInputStream()
com.jcraft.jsch.Util: java.lang.String checkTilde(java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivityForConfigChanges()
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
com.jcraft.jsch.SftpATTRS: java.lang.String getMtimeString()
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
com.jcraft.jsch.jce.AES192CBC: int bsize
com.jcraft.jsch.KeyPair: void writePrivateKey(java.lang.String,byte[])
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
io.flutter.view.AccessibilityBridge: boolean isReleased
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
io.flutter.plugins.pathprovider.PathProviderPlugin$1: void onSuccess(java.lang.Object)
com.jcraft.jsch.Buffer: void getByte(byte[])
com.jcraft.jsch.jce.AES192CBC: javax.crypto.Cipher cipher
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
io.flutter.plugins.urllauncher.R$integer: R$integer()
com.jcraft.jsch.SftpATTRS: int pmask
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_24
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
com.google.android.exoplayer2.offline.StreamKey: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiNoLongerDisplayed()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.room.RoomDatabase: RoomDatabase()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
com.jcraft.jsch.OpenSSHConfig: java.util.Vector access$100(com.jcraft.jsch.OpenSSHConfig)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1 this$1
com.jcraft.jsch.KeyPairDSA: byte[] forSSHAgent()
com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)
com.jcraft.jsch.SftpATTRS: void setPERMISSIONS(int)
io.flutter.app.FlutterActivityDelegate: void runBundle(java.lang.String)
com.jcraft.jsch.KeyExchange: int PROPOSAL_ENC_ALGS_STOC
io.flutter.plugins.pathprovider.R$id: R$id()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
com.jcraft.jsch.KeyPair
com.jcraft.jsch.Channel$MyPipedInputStream
io.flutter.plugin.common.MethodChannel: java.lang.String TAG
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_0
com.jcraft.jsch.Buffer: void putPad(int)
io.flutter.embedding.engine.FlutterJNI: boolean setRefreshRateFPSCalled
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_23
com.jcraft.jsch.jce.ARCFOUR: void init(int,byte[],byte[])
com.jcraft.jsch.ChannelSubsystem: void setPty(boolean)
com.jcraft.jsch.ChannelX11: java.util.Hashtable faked_cookie_pool
com.jcraft.jsch.ChannelSftp: void sendINIT()
com.jcraft.jsch.jce.SHA512: int getBlockSize()
org.threeten.bp.chrono.JapaneseDate
com.jcraft.jsch.ChannelSftp: int SSH_FX_OK
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_23
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition valueOf(java.lang.String)
com.jcraft.jsch.Session: com.jcraft.jsch.IO io
com.jcraft.jsch.jce.SignatureECDSA: byte[] insert0(byte[])
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.embedding.android.FlutterFragment: void onStop()
com.jcraft.jsch.jce.AES128CTR: int ivsize
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String toString()
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_29
androidx.fragment.app.Fragment: void onDetach()
com.jcraft.jsch.jce.AES256CTR: AES256CTR()
io.flutter.plugins.pathprovider.R$style: int Widget_Compat_NotificationActionText
com.jcraft.jsch.ChannelSftp: java.lang.String file_separator
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
org.threeten.bp.Year
io.flutter.view.VsyncWaiter$1$1: VsyncWaiter$1$1(io.flutter.view.VsyncWaiter$1,long)
com.jcraft.jsch.Channel: void disconnect(com.jcraft.jsch.Session)
org.threeten.bp.ZoneOffset
com.jcraft.jsch.HostKey: HostKey(java.lang.String,int,byte[],java.lang.String)
com.google.android.exoplayer2.ui.PlayerControlView: void setShowPreviousButton(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void showSystemOverlays(java.util.List)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.jcraft.jsch.ChannelSftp$LsEntry: java.lang.String toString()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
com.jcraft.jsch.Session: java.lang.String getHostKeyAlias()
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.jcraft.jsch.DHG14: com.jcraft.jsch.Buffer buf
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
com.jcraft.jsch.SftpATTRS: int gid
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
io.flutter.view.FlutterView: java.util.List mFirstFrameListeners
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
io.flutter.app.FlutterPluginRegistry: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.jcraft.jsch.jce.ECDHN: ECDHN()
com.jcraft.jsch.ChannelForwardedTCPIP: void addPort(com.jcraft.jsch.Session,java.lang.String,int,int,java.lang.String,java.lang.Object[])
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.loader.ResourceExtractor
io.flutter.view.FlutterView: void onPause()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.Map getAllPrefs()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: io.flutter.plugins.urllauncher.WebViewActivity this$0
com.jcraft.jsch.ChannelForwardedTCPIP$Config: com.jcraft.jsch.Session session
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.jcraft.jsch.Channel$MyPipedInputStream: void updateReadSide()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderFactory getDecoderFactory()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
com.jcraft.jsch.jce.HMACSHA256: HMACSHA256()
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: SingleViewPresentation$FakeWindowViewGroup(android.content.Context)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
com.jcraft.jsch.jcraft.HMACSHA1: void update(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugin.common.MethodChannel$Result: void notImplemented()
com.jcraft.jsch.SftpATTRS: int getGId()
com.jcraft.jsch.KeyPair: int getKeyType()
com.jcraft.jsch.SftpATTRS: int mtime
com.jcraft.jsch.JSch$1: JSch$1()
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String bigPicture
io.flutter.view.FlutterView: boolean isAttached()
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
io.flutter.embedding.engine.loader.ResourceExtractor$1: boolean accept(java.io.File,java.lang.String)
com.jcraft.jsch.ChannelSftp: java.io.InputStream access$200(com.jcraft.jsch.ChannelSftp)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DESTROY_ENGINE_WITH_ACTIVITY
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
io.flutter.plugins.urllauncher.R$color: int secondary_text_default_material_light
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String PLATFORM_BRIGHTNESS
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
io.flutter.plugins.urllauncher.R$id: int tag_unhandled_key_event_manager
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.pathprovider.PathProviderPlugin
com.jcraft.jsch.KeyPairPKCS8: boolean parse(byte[])
com.jcraft.jsch.SftpATTRS: void dump(com.jcraft.jsch.Buffer)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String SHARED_PREFERENCES_NAME
com.jcraft.jsch.KeyPairRSA: int key_size
com.jcraft.jsch.HostKey: int ECDSA256
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_15
com.jcraft.jsch.KeyExchange: int PROPOSAL_MAC_ALGS_STOC
io.flutter.embedding.android.FlutterFragment: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.android.AndroidKeyProcessor keyProcessor
com.jcraft.jsch.jgss.GSSContextKrb5: void create(java.lang.String,java.lang.String)
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingRight
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetBottom
androidx.appcompat.widget.SearchView: int getInputType()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$1
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.view.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
com.jcraft.jsch.ChannelSftp$RequestQueue$OutOfOrderException: ChannelSftp$RequestQueue$OutOfOrderException(com.jcraft.jsch.ChannelSftp$RequestQueue,long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
com.jcraft.jsch.jce.BlowfishCBC: int ivsize
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
io.flutter.embedding.engine.FlutterShellArgs: void remove(java.lang.String)
io.flutter.view.AccessibilityBridge$TextDirection
io.flutter.plugins.sharedpreferences.R$id: int tag_screen_reader_focusable
com.jcraft.jsch.DHGEX: int preferred
io.flutter.plugins.urllauncher.R$layout: int notification_template_icon_group
com.jcraft.jsch.jcraft.HMACSHA1: java.lang.String getName()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.jcraft.jsch.jce.AES256CTR: void init(int,byte[],byte[])
io.flutter.view.FlutterView: io.flutter.view.FlutterView$ViewportMetrics mMetrics
com.jcraft.jsch.jce.TripleDESCTR: TripleDESCTR()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: java.lang.Object getLifecycle()
com.jcraft.jsch.ChannelSftp: void setEnv(byte[],byte[])
io.flutter.embedding.android.FlutterSplashView: android.os.Parcelable onSaveInstanceState()
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
io.flutter.app.FlutterPluginRegistry: java.util.List access$900(io.flutter.app.FlutterPluginRegistry)
com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
io.flutter.embedding.android.FlutterView: java.lang.String TAG
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.plugin.platform.PlatformViewsController$1$1
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
com.google.android.exoplayer2.ui.PlayerControlView: void setProgressUpdateListener(com.google.android.exoplayer2.ui.PlayerControlView$ProgressUpdateListener)
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
io.flutter.plugins.pathprovider.R$id: int notification_background
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
androidx.fragment.app.Fragment: android.view.View getView()
com.jcraft.jsch.ProxySOCKS5
com.jcraft.jsch.jce.AES256CBC: void update(byte[],int,int,byte[],int)
com.jcraft.jsch.jcraft.HMAC: byte[] tmp
com.jcraft.jsch.CipherNone: int getIVSize()
androidx.appcompat.widget.AppCompatTextView
io.flutter.app.FlutterFragmentActivity: void onNewIntent(android.content.Intent)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
com.jcraft.jsch.DHEC384
com.jcraft.jsch.jce.ECDHN
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_OPEN
com.jcraft.jsch.jce.HMACSHA1: int getBlockSize()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.plugins.pathprovider.R$layout: int notification_template_part_chronometer
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.view.AccessibilityBridge$Action: int value
io.flutter.plugin.editing.FlutterTextUtils
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewDetachedFromWindow(android.view.View)
com.jcraft.jsch.OpenSSHConfig: java.util.Hashtable access$000(com.jcraft.jsch.OpenSSHConfig)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.FlutterView$ZeroSides
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterEngine: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
com.jcraft.jsch.SftpATTRS
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int MOUSE
org.threeten.bp.OffsetTime: java.lang.Object readResolve()
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
com.jcraft.jsch.jce.HMACSHA256: void init(byte[])
com.jcraft.jsch.PortWatcher: java.util.Vector pool
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.jcraft.jsch.jce.SHA512: byte[] digest()
org.threeten.bp.chrono.IsoChronology: java.lang.Object readResolve()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToState
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.jcraft.jsch.ChannelSftp: void skip(long)
io.flutter.embedding.android.FlutterImageView: int pendingImages
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
io.flutter.app.FlutterActivityDelegate: java.lang.Object valuePublishedByPlugin(java.lang.String)
com.jcraft.jsch.ChannelSftp: void putHEAD(com.jcraft.jsch.Buffer,byte,int)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
io.flutter.plugins.pathprovider.PathProviderPlugin$1: void onFailure(java.lang.Throwable)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
com.jcraft.jsch.SftpStatVFS: long bsize
io.flutter.plugin.common.MethodCall: boolean hasArgument(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiNoLongerDisplayed()
org.threeten.bp.chrono.ThaiBuddhistDate: java.lang.Object writeReplace()
com.jcraft.jsch.KeyExchange: int PROPOSAL_ENC_ALGS_CTOS
io.flutter.plugin.common.MethodChannel$MethodCallHandler
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
com.jcraft.jsch.KeyPairGenECDSA: byte[] getS()
io.flutter.plugins.urllauncher.R$dimen
com.jcraft.jsch.Channel$MyPipedInputStream: Channel$MyPipedInputStream(com.jcraft.jsch.Channel)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
com.dexterous.flutterlocalnotifications.models.Time
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader$1$1: FlutterLoader$1$1(io.flutter.embedding.engine.loader.FlutterLoader$1)
io.flutter.plugins.urllauncher.R$id: int right_icon
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.jcraft.jsch.LocalIdentityRepository: java.lang.String getName()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
com.jcraft.jsch.jce.HMACSHA256: java.lang.String getName()
com.jcraft.jsch.KeyPairRSA: byte[] getPrivateKey()
com.jcraft.jsch.Session: void setClientVersion(java.lang.String)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.sharedpreferences.R$style: R$style()
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_ISOLATE_SNAPSHOT_DATA
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.jcraft.jsch.ChannelSftp: void sendPacketPath(byte,byte[],byte[],java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.jcraft.jsch.Logger: void log(int,java.lang.String)
io.flutter.embedding.android.ExclusiveAppComponent
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
com.jcraft.jsch.jce.ARCFOUR: int getIVSize()
io.flutter.embedding.android.FlutterSurfaceView$1
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
com.jcraft.jsch.ConfigRepository$1: ConfigRepository$1()
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_low_normal
io.flutter.plugins.sharedpreferences.R$id: int italic
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource RawResource
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.jcraft.jsch.ChannelSftp: void sendMKDIR(byte[],com.jcraft.jsch.SftpATTRS)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_31
com.jcraft.jsch.ProxyHTTP: ProxyHTTP(java.lang.String,int)
com.google.android.exoplayer2.ui.TrackSelectionView: void setTrackNameProvider(com.google.android.exoplayer2.ui.TrackNameProvider)
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToBackground()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
com.jcraft.jsch.JSch: void setKnownHosts(java.io.InputStream)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_27
com.jcraft.jsch.Compression
android.support.v4.media.RatingCompat
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect childRect
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mDataDirPath
com.jcraft.jsch.Session: void setX11Port(int)
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel)
io.flutter.plugins.pathprovider.R$dimen: int notification_action_icon_size
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: boolean usesVirtualDisplay(java.lang.Integer)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
com.jcraft.jsch.KeyPairECDSA: byte[] getPrivateKey()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_21
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: ResourceExtractor$ExtractTask(java.lang.String,java.util.HashSet,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
com.jcraft.jsch.ChannelShell: void setAgentForwarding(boolean)
com.jcraft.jsch.KeyPairPKCS8: byte[] end
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_CACHED_ENGINE_ID
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
io.flutter.plugins.urllauncher.R$dimen: int compat_button_inset_horizontal_material
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetRight
com.jcraft.jsch.RequestSubsystem: java.lang.String subsystem
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.util.PathUtils: PathUtils()
io.flutter.plugins.sharedpreferences.R$id: int tag_unhandled_key_event_manager
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowRewindButton(boolean)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String pluginId
com.google.android.exoplayer2.ui.StyledPlayerView: android.view.View getVideoSurfaceView()
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
io.flutter.view.FlutterView: android.app.Activity getActivity(android.content.Context)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_30
com.jcraft.jsch.KeyPairGenDSA: byte[] getG()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void disposeVirtualDisplayForPlatformView(int)
com.jcraft.jsch.Session: void receive_newkeys(com.jcraft.jsch.Buffer,com.jcraft.jsch.KeyExchange)
com.jcraft.jsch.ChannelSftp: int RESUME
io.flutter.view.FlutterView: boolean mIsSoftwareRenderingEnabled
com.jcraft.jsch.Channel: boolean open_confirmation
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.android.AndroidKeyProcessor keyProcessor
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
com.jcraft.jsch.Session: Session(com.jcraft.jsch.JSch,java.lang.String,java.lang.String,int)
com.jcraft.jsch.Session: void checkHost(java.lang.String,int,com.jcraft.jsch.KeyExchange)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
com.jcraft.jsch.IO: void setOutputStream(java.io.OutputStream,boolean)
com.jcraft.jsch.ChannelAgentForwarding: com.jcraft.jsch.Packet packet
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
com.jcraft.jsch.KeyPair: int countLength(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.jcraft.jsch.DHG1: byte[] I_C
io.flutter.plugin.editing.TextInputPlugin$1
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
io.flutter.embedding.android.FlutterView$RenderMode: io.flutter.embedding.android.FlutterView$RenderMode texture
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.Class,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
androidx.fragment.app.Fragment: boolean isStateSaved()
com.jcraft.jsch.ChannelSftp: void rename(java.lang.String,java.lang.String)
com.jcraft.jsch.KnownHosts$HashedHostKey: boolean isHashed()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
com.jcraft.jsch.ChannelSftp$1: byte[] val$handle
io.flutter.Log: void e(java.lang.String,java.lang.String)
com.google.android.exoplayer2.source.TrackGroup: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.ChannelSftp: boolean extension_statvfs
com.jcraft.jsch.IO: void getByte(byte[],int,int)
io.flutter.embedding.android.FlutterTextureView
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.LocalIdentityRepository: void removeDupulicates()
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$400(io.flutter.plugin.editing.TextInputPlugin)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
com.jcraft.jsch.GSSContext
io.flutter.embedding.engine.loader.FlutterLoader$2$1: void run()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.jcraft.jsch.Cipher: int getIVSize()
com.jcraft.jsch.Channel$1: boolean closed
io.flutter.Log: int DEBUG
io.flutter.plugins.pathprovider.R$id: int icon_group
io.flutter.plugins.urllauncher.WebViewActivity$1: void onReceive(android.content.Context,android.content.Intent)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.jcraft.jsch.Session: boolean daemon_thread
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_REMOVE
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener listener
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
com.jcraft.jsch.CipherNone: CipherNone()
com.jcraft.jsch.Session: byte[] IVs2c
com.jcraft.jsch.KeyPairECDSA: byte[] end
com.jcraft.jsch.Channel: void start()
com.jcraft.jsch.Channel$PassiveInputStream: com.jcraft.jsch.Channel this$0
com.jcraft.jsch.ChannelAgentForwarding: boolean init
com.jcraft.jsch.jce.ARCFOUR256: int bsize
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mPackageName
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
io.flutter.plugin.common.MethodChannel$Result: void error(java.lang.String,java.lang.String,java.lang.Object)
com.jcraft.jsch.DHG14: boolean next(com.jcraft.jsch.Buffer)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.jcraft.jsch.SftpATTRS: int S_IFDIR
com.jcraft.jsch.SftpATTRS: long getSize()
com.jcraft.jsch.RequestSftp: RequestSftp()
com.jcraft.jsch.jce.TripleDESCTR
com.jcraft.jsch.jce.TripleDESCTR: void init(int,byte[],byte[])
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek[] values()
com.jcraft.jsch.ConfigRepository$2: com.jcraft.jsch.ConfigRepository$Config getConfig(java.lang.String)
com.jcraft.jsch.Packet
com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterFragmentActivity: android.widget.FrameLayout provideRootLayout(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
com.jcraft.jsch.jce.HMACSHA512
io.flutter.plugin.common.EventChannel$EventSink: void success(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_21
androidx.fragment.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadAssets(int,java.lang.String)
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
com.jcraft.jsch.CipherNone: boolean isCBC()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
com.journeyapps.barcodescanner.CameraPreview
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$700(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugins.pathprovider.R$id: int right_side
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_CODE
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
io.flutter.embedding.android.FlutterFragment: boolean popSystemNavigator()
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)
com.jcraft.jsch.Util: boolean glob(byte[],int,byte[],int)
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENT_SUCCESS
io.flutter.embedding.android.FlutterView$ZeroSides
io.flutter.plugins.pathprovider.R$attr: int ttcIndex
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.MethodCallHandlerImpl methodCallHandler
androidx.activity.ComponentActivity: ComponentActivity()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
com.jcraft.jsch.Buffer: void putByte(byte[],int,int)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_low
io.flutter.plugin.common.PluginRegistry$Registrar: android.content.Context context()
com.jcraft.jsch.Channel: int getId()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_21
com.jcraft.jsch.Session: void setX11Cookie(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.dexterous.flutterlocalnotifications.NotificationStyle
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.journeyapps.barcodescanner.CameraPreview: CameraPreview(android.content.Context,android.util.AttributeSet)
io.flutter.view.FlutterCallbackInformation
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.service.ServiceControlSurface getServiceControlSurface()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: java.lang.String TAG
com.jcraft.jsch.DHG14: byte[] e
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.jcraft.jsch.KeyExchange: int PROPOSAL_LANG_CTOS
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] getSupportedAbis()
com.jcraft.jsch.SftpATTRS: int S_IXOTH
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.jcraft.jsch.KnownHosts: java.util.Vector pool
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.jcraft.jsch.IdentityRepository$Wrapper: void check()
io.flutter.embedding.engine.FlutterEngine
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: boolean access$200(io.flutter.view.FlutterView$SurfaceTextureRegistryEntry)
io.flutter.plugins.sharedpreferences.R$drawable: int notify_panel_notification_icon_bg
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: java.lang.Object writeReplace()
com.jcraft.jsch.Util: java.lang.String[] split(java.lang.String,java.lang.String)
io.flutter.embedding.android.MotionEventTracker
com.jcraft.jsch.SignatureRSA: void setPubKey(byte[],byte[])
com.jcraft.jsch.Session: int SSH_MSG_KEXDH_INIT
com.jcraft.jsch.jcraft.HMAC: java.security.MessageDigest md
com.jcraft.jsch.ConfigRepository$Config: java.lang.String getUser()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.jcraft.jsch.KeyPairECDSA: byte[] getPublicKeyBlob()
com.jcraft.jsch.ChannelDirectTCPIP: void setOrgPort(int)
com.jcraft.jsch.ProxyHTTP: int getDefaultPort()
com.google.android.exoplayer2.ui.PlayerView: void setShowRewindButton(boolean)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderQuery
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderFetchTimeout
com.jcraft.jsch.ChannelSftp$1: void write(int)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
com.jcraft.jsch.Session: java.lang.String[] checkCiphers(java.lang.String)
com.jcraft.jsch.SocketFactory: java.io.InputStream getInputStream(java.net.Socket)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int MOVE
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
androidx.fragment.app.FragmentManagerViewModel
io.flutter.plugin.common.PluginRegistry$ViewDestroyListener
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: ShimPluginRegistry(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.dart.DartExecutor$1
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_low
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_CACHE_SKSL
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra[] values()
com.jcraft.jsch.jce.ARCFOUR128: javax.crypto.Cipher cipher
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.fragment.app.Fragment: boolean mInLayout
io.flutter.plugin.platform.VirtualDisplayController$1: java.lang.Runnable val$onNewSizeFrameAvailable
com.jcraft.jsch.Session: int PACKET_MAX_SIZE
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.jcraft.jsch.ChannelSftp: java.lang.String version
io.flutter.app.FlutterActivityDelegate: android.view.View access$002(io.flutter.app.FlutterActivityDelegate,android.view.View)
com.jcraft.jsch.jce.ARCFOUR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.jcraft.jsch.ChannelSftp$2: int read(byte[],int,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
com.jcraft.jsch.ChannelSftp: void sendREALPATH(byte[])
io.flutter.view.FlutterView: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
com.jcraft.jsch.JSchAuthCancelException: JSchAuthCancelException(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader$2: FlutterLoader$2(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getInitialRoute()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.journeyapps.barcodescanner.CaptureActivity
com.jcraft.jsch.jce.AES128CTR: void init(int,byte[],byte[])
io.flutter.plugins.sharedpreferences.R$dimen: int notification_large_icon_width
com.jcraft.jsch.SignatureECDSA: void setPubKey(byte[],byte[])
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] values()
io.flutter.embedding.android.FlutterFragmentActivity: FlutterFragmentActivity()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
io.flutter.plugins.pathprovider.PathProviderPlugin$1: PathProviderPlugin$1(io.flutter.plugins.pathprovider.PathProviderPlugin,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
io.flutter.view.FlutterMain$Settings: java.lang.String logTag
com.jcraft.jsch.jce.HMACSHA196
com.jcraft.jsch.ChannelSftp$3
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.jcraft.jsch.jce.AES192CBC: void update(byte[],int,int,byte[],int)
com.jcraft.jsch.Channel$MyPipedInputStream: int BUFFER_SIZE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.jcraft.jsch.ChannelForwardedTCPIP: com.jcraft.jsch.ForwardedTCPIPDaemon daemon
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
com.jcraft.jsch.DHGEX: byte[] V_C
io.flutter.plugin.common.FlutterException: java.lang.Object details
io.flutter.embedding.android.FlutterFragment: boolean shouldAttachEngineToActivity()
io.flutter.app.FlutterActivityEvents: void onStop()
com.jcraft.jsch.ProxySOCKS4: java.io.InputStream getInputStream()
com.jcraft.jsch.jce.AES256CBC: int ivsize
com.jcraft.jsch.SftpATTRS: java.lang.String getPermissionsString()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
io.flutter.embedding.android.FlutterImageView: java.util.Queue imageQueue
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
com.jcraft.jsch.jce.SignatureRSA: void init()
io.flutter.embedding.engine.FlutterShellArgs
io.flutter.embedding.android.FlutterView$RenderMode: FlutterView$RenderMode(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)
com.jcraft.jsch.Session: int setPortForwardingL(java.lang.String)
io.flutter.view.FlutterView$2: void surfaceDestroyed(android.view.SurfaceHolder)
com.jcraft.jsch.ChannelSftp: java.lang.String version()
com.jcraft.jsch.Session: int SSH_MSG_UNIMPLEMENTED
com.jcraft.jsch.KeyPair: void writePrivateKey(java.io.OutputStream,byte[])
com.jcraft.jsch.KeyExchange: java.lang.String mac_s2c
com.jcraft.jsch.ChannelSftp$1: com.jcraft.jsch.ChannelSftp this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
com.jcraft.jsch.ChannelSftp: int SSH_FXF_EXCL
io.flutter.embedding.android.FlutterView
com.jcraft.jsch.jce.PBKDF: byte[] getKey(byte[],byte[],int,int)
io.flutter.plugins.urllauncher.R$id: int notification_main_column_container
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
io.flutter.FlutterInjector: void setInstance(io.flutter.FlutterInjector)
com.jcraft.jsch.Util: java.lang.String unquote(java.lang.String)
com.jcraft.jsch.ChannelSftp$RequestQueue: void add(int,long,int)
com.jcraft.jsch.jce.TripleDESCBC
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] getR()
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: FlutterActivity$NewEngineIntentBuilder(java.lang.Class)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
io.flutter.plugins.pathprovider.R$id: int action_divider
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
io.flutter.plugins.urllauncher.R$color: R$color()
com.jcraft.jsch.Session: int SSH_MSG_KEX_DH_GEX_REQUEST
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiDisplayed()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String TAG
io.flutter.plugin.common.ActivityLifecycleListener: void onPostResume()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.plugin.editing.TextInputPlugin$MinMax: void inspect(double,double)
androidx.fragment.app.Fragment: int getNextTransitionStyle()
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_centerY
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
org.threeten.bp.LocalDate: java.lang.Object readResolve()
org.threeten.bp.Ser
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
io.flutter.app.FlutterPluginRegistry: java.util.List access$800(io.flutter.app.FlutterPluginRegistry)
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
io.flutter.app.FlutterActivityDelegate: java.lang.String TAG
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
io.flutter.plugin.platform.PlatformPlugin$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
io.flutter.embedding.engine.systemchannels.LocalizationChannel
com.jcraft.jsch.jce.SHA1: void init()
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView)
io.flutter.view.FlutterView: void autofill(android.util.SparseArray)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
com.jcraft.jsch.RequestPtyReq: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
com.jcraft.jsch.JSch: void addIdentity(com.jcraft.jsch.Identity,byte[])
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_ttcIndex
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENTC_REQUEST_RSA_IDENTITIES
androidx.fragment.app.Fragment: boolean mDetached
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
com.jcraft.jsch.jce.AES192CTR: int ivsize
io.flutter.plugins.urllauncher.R$color: int ripple_material_light
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
com.jcraft.jsch.jce.ECDHN: java.math.BigInteger three
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
io.flutter.plugins.pathprovider.R$drawable: int notification_template_icon_bg
com.jcraft.jsch.Identity: byte[] getPublicKeyBlob()
com.jcraft.jsch.jce.DH: void init()
io.flutter.plugins.urllauncher.R$attr: int fontVariationSettings
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
io.flutter.view.FlutterView$ViewportMetrics: FlutterView$ViewportMetrics()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_KERNEL_BLOB
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
com.jcraft.jsch.HostKey: HostKey(java.lang.String,byte[])
androidx.fragment.app.Fragment: int RESUMED
com.jcraft.jsch.jce.HMACMD596: int getBlockSize()
com.jcraft.jsch.jce.HMAC: HMAC()
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_CLOSE
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.jcraft.jsch.ChannelSftp: void setAgentForwarding(boolean)
com.jcraft.jsch.Session: int setPortForwardingL(java.lang.String,int,java.lang.String,int)
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
io.flutter.plugins.sharedpreferences.R$dimen: int notification_action_icon_size
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: boolean isMenuVisible()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
com.jcraft.jsch.Session$GlobalRequestReply: int getPort()
io.flutter.plugins.pathprovider.R$styleable: R$styleable()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
com.jcraft.jsch.SftpATTRS: int S_ISVTX
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.jcraft.jsch.jce.ARCFOUR256
io.flutter.embedding.engine.loader.FlutterLoader$2$1: io.flutter.embedding.engine.loader.FlutterLoader$2 this$1
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void access$000(android.content.SharedPreferences$Editor,int)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
io.flutter.embedding.engine.dart.DartMessenger
com.jcraft.jsch.KeyExchange: byte[] normalize(byte[])
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
androidx.fragment.app.FragmentActivity: java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
io.flutter.plugins.urllauncher.R$id: int async
com.jcraft.jsch.HASH: void update(byte[],int,int)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
io.flutter.plugins.sharedpreferences.R$dimen: int notification_top_pad
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngineGroup this$0
com.jcraft.jsch.ChannelSftp: void throwStatusError(com.jcraft.jsch.Buffer,int)
com.jcraft.jsch.RequestSignal: java.lang.String signal
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromActivityForConfigChanges()
com.jcraft.jsch.ChannelAgentForwarding: void eof_remote()
io.flutter.embedding.android.FlutterFragmentActivity: void onUserLeaveHint()
com.jcraft.jsch.ProxySOCKS5: java.io.OutputStream out
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.jcraft.jsch.IdentityRepository$Wrapper: void removeAll()
com.jcraft.jsch.RequestShell: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.RenderMode getRenderMode()
io.flutter.plugins.urllauncher.R$integer
com.jcraft.jsch.ChannelSftp: java.io.OutputStream put(java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int,long)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
io.flutter.embedding.android.FlutterFragmentActivity
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
io.flutter.plugins.pathprovider.R$attr: int font
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
io.flutter.embedding.android.FlutterFragment: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DESTROY_ENGINE_WITH_FRAGMENT
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.FlutterView: java.lang.String TAG
com.jcraft.jsch.jce.HMACSHA1: void update(byte[],int,int)
com.jcraft.jsch.RequestExec
com.jcraft.jsch.SftpProgressMonitor: void init(int,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill
com.jcraft.jsch.KeyPairPKCS8: byte[] aes256cbc
com.google.android.exoplayer2.ui.PlayerView: void setShowNextButton(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
io.flutter.embedding.android.FlutterSplashView$SavedState
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.JSch$1: boolean isEnabled(int)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
com.jcraft.jsch.ChannelShell: void setPtySize(int,int,int,int)
com.jcraft.jsch.Channel: java.lang.Thread thread
com.jcraft.jsch.Session: int SSH_MSG_NEWKEYS
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
io.flutter.view.TextureRegistry$SurfaceTextureEntry
com.jcraft.jsch.Packet: void setRandom(com.jcraft.jsch.Random)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
io.flutter.embedding.android.FlutterView$2
com.jcraft.jsch.DHG14: com.jcraft.jsch.Packet packet
io.flutter.embedding.android.DrawableSplashScreen$1: io.flutter.embedding.android.DrawableSplashScreen this$0
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
com.jcraft.jsch.Channel: int reply
com.jcraft.jsch.Util: java.lang.String toHex(byte[])
com.jcraft.jsch.jce.AES256CBC: javax.crypto.Cipher cipher
com.jcraft.jsch.Session: com.jcraft.jsch.MAC c2smac
org.threeten.bp.chrono.JapaneseDate: java.lang.Object writeReplace()
com.jcraft.jsch.Channel: void setXForwarding(boolean)
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getQ()
com.jcraft.jsch.jce.SHA512: void init()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
com.jcraft.jsch.SftpATTRS: void setUIDGID(int,int)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult
com.jcraft.jsch.jce.HMAC: java.lang.String getName()
com.jcraft.jsch.KeyPairGenDSA: void init(int)
com.jcraft.jsch.KeyPair: byte[] cr
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler access$000(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl)
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
com.jcraft.jsch.ChannelForwardedTCPIP: int getRemotePort()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: android.app.Activity getActivity()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int)
io.flutter.plugins.pathprovider.R$layout
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
com.jcraft.jsch.jce.SignatureDSA: java.security.KeyFactory keyFactory
com.jcraft.jsch.KeyPairPKCS8: int getKeySize()
com.jcraft.jsch.SftpATTRS: int S_IRUSR
org.threeten.bp.chrono.MinguoChronology: java.lang.Object readResolve()
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
io.flutter.plugin.common.JSONUtil
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1)
com.jcraft.jsch.HostKey: java.lang.String getFingerPrint(com.jcraft.jsch.JSch)
io.flutter.embedding.engine.loader.ResourceExtractor: void waitForCompletion()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalStorageDirectories(java.lang.String)
com.jcraft.jsch.jce.BlowfishCBC
io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback: void registerWith(io.flutter.plugin.common.PluginRegistry)
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser valueOf(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
io.flutter.app.FlutterFragmentActivity: void onUserLeaveHint()
io.flutter.plugins.sharedpreferences.R$styleable: int ColorStateListItem_android_alpha
com.jcraft.jsch.ChannelForwardedTCPIP$Config: java.lang.String address_to_bind
io.flutter.view.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerHideOnTouch(boolean)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.view.FlutterView: void onMemoryPressure()
com.jcraft.jsch.HASH
androidx.media.AudioAttributesImplApi26Parcelizer
io.flutter.plugin.editing.TextInputPlugin: void access$100(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
androidx.fragment.app.Fragment: boolean isDetached()
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
com.jcraft.jsch.ChannelSubsystem: boolean xforwading
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_centerX
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_13
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.plugin.platform.PlatformViewsController: void access$600(io.flutter.plugin.platform.PlatformViewsController,int,int)
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.Util: boolean glob(byte[],byte[])
io.flutter.app.FlutterActivityDelegate$ViewFactory: boolean retainFlutterNativeView()
com.jcraft.jsch.DH: void setF(byte[])
io.flutter.view.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context)
com.jcraft.jsch.jcraft.HMACMD5: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
io.flutter.plugins.urllauncher.R$id: int text
com.jcraft.jsch.SocketFactory
com.jcraft.jsch.Session: java.lang.String org_host
com.jcraft.jsch.UserAuthNone: UserAuthNone()
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
io.flutter.embedding.android.FlutterSplashView: android.view.View splashScreenView
com.jcraft.jsch.jce.SignatureRSA: void update(byte[])
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
com.jcraft.jsch.KeyPairRSA: byte[] getCArray()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.jcraft.jsch.Channel$PassiveInputStream: void close()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout
androidx.fragment.app.Fragment: boolean mCalled
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] getS()
io.flutter.plugins.pathprovider.R$dimen: int notification_right_side_padding_top
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity activity
com.jcraft.jsch.JSch: void setLogger(com.jcraft.jsch.Logger)
io.flutter.plugins.urllauncher.R$attr: int fontProviderQuery
com.jcraft.jsch.Session: int port
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
com.jcraft.jsch.IdentityFile: com.jcraft.jsch.KeyPair getKeyPair()
com.jcraft.jsch.UserAuthNone: int SSH_MSG_SERVICE_ACCEPT
com.jcraft.jsch.SftpStatVFS: java.lang.String[] extended
io.flutter.view.FlutterNativeView: boolean isAttached()
io.flutter.plugins.urllauncher.R$id: int line1
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
io.flutter.FlutterInjector: boolean accessed
com.jcraft.jsch.DHG1: com.jcraft.jsch.Buffer buf
com.google.android.exoplayer2.ui.StyledPlayerView: int getControllerShowTimeoutMs()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: android.content.Context context()
com.jcraft.jsch.jce.BlowfishCBC: boolean isCBC()
com.jcraft.jsch.KeyPair$ASN1: KeyPair$ASN1(com.jcraft.jsch.KeyPair,byte[])
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
com.jcraft.jsch.KnownHosts: KnownHosts(com.jcraft.jsch.JSch)
com.jcraft.jsch.ConfigRepository$2
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray sessionIdToLoadingUnitId
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set activityResultListeners
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_fontWeight
io.flutter.plugins.urllauncher.R$id: int dialog_button
com.google.android.exoplayer2.ui.PlayerView: boolean getControllerHideOnTouch()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_PURGE_PERSISTENT_CACHE
io.flutter.plugins.urllauncher.UrlLauncher: void closeWebView()
com.jcraft.jsch.UserAuthPublicKey: UserAuthPublicKey()
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.Session: void setHost(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
com.jcraft.jsch.ChannelSftp: void sendPacketPath(byte,byte[])
com.jcraft.jsch.jce.HMACMD5
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_27
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
com.google.android.exoplayer2.ui.PlayerControlView
com.jcraft.jsch.ChannelSftp: char file_separatorc
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.IO: java.io.InputStream in
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
com.jcraft.jsch.ChannelX11: void run()
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_OPENDIR
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.jcraft.jsch.ChannelSftp: void setXForwarding(boolean)
com.jcraft.jsch.Buffer: void skip(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldAttachEngineToActivity()
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
com.jcraft.jsch.ProxySOCKS4: java.net.Socket getSocket()
com.journeyapps.barcodescanner.CameraPreview: double getMarginFraction()
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_APP_BUNDLE_PATH
com.jcraft.jsch.Session$GlobalRequestReply: void setThread(java.lang.Thread)
androidx.appcompat.widget.AppCompatAutoCompleteTextView
io.flutter.app.FlutterFragmentActivity: boolean retainFlutterNativeView()
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.ui.PlayerControlView: void setShowFastForwardButton(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldAttachEngineToActivity()
com.jcraft.jsch.jce.SHA384
com.jcraft.jsch.Compression: byte[] uncompress(byte[],int,int[])
androidx.recyclerview.widget.GridLayoutManager
com.jcraft.jsch.SftpStatVFS: long frsize
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
io.flutter.app.FlutterActivityEvents: void onResume()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
io.flutter.view.FlutterRunArguments: FlutterRunArguments()
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle[] values()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.Class activityClass
com.jcraft.jsch.jce.SignatureECDSA: boolean verify(byte[])
com.jcraft.jsch.jcraft.HMAC: void update(byte[],int,int)
com.jcraft.jsch.Channel$PassiveOutputStream: com.jcraft.jsch.Channel$MyPipedInputStream _sink
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
io.flutter.view.AccessibilityBridge: float SCROLL_POSITION_CAP_FOR_INFINITY
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI valueOf(java.lang.String)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugin.common.MethodChannel$Result val$result
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadDartLibrary(int,java.lang.String)
org.threeten.bp.chrono.IsoChronology
org.threeten.bp.Year: java.lang.Object readResolve()
io.flutter.app.FlutterActivityDelegate$1$1
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
com.jcraft.jsch.jce.ARCFOUR: int ivsize
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
io.flutter.view.AccessibilityBridge: float SCROLL_EXTENT_FOR_INFINITY
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_heading
com.jcraft.jsch.jce.ECDH521
com.jcraft.jsch.Request: com.jcraft.jsch.Channel channel
com.jcraft.jsch.KeyPairECDSA: byte[][] fromPoint(byte[])
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
org.threeten.bp.Period
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
io.flutter.plugins.sharedpreferences.R$layout: R$layout()
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar
com.jcraft.jsch.ChannelSftp$1: int writecount
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
io.flutter.plugins.urllauncher.R$id: int tag_unhandled_key_listeners
com.google.android.exoplayer2.ui.StyledPlayerView: void setErrorMessageProvider(com.google.android.exoplayer2.util.ErrorMessageProvider)
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.fragment.app.Fragment: boolean isRemoving()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: AspectRatioFrameLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterEngine$1
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource Uri
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.concurrent.Executor executor
io.flutter.plugins.urllauncher.BuildConfig: BuildConfig()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
io.flutter.plugins.urllauncher.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.plugin.common.EventChannel$EventSink: void error(java.lang.String,java.lang.String,java.lang.Object)
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpATTRS stat(java.lang.String)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_VERSION
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_READLINK
org.threeten.bp.ZonedDateTime
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
com.jcraft.jsch.HostKey: java.lang.String getType()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
com.jcraft.jsch.Session: void setHostKeyAlias(java.lang.String)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding(android.content.BroadcastReceiver)
com.jcraft.jsch.Session: java.util.Hashtable config
io.flutter.plugin.platform.PlatformPlugin$2
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
com.jcraft.jsch.KeyPairGenRSA: byte[] getP()
com.jcraft.jsch.UserAuth: int SSH_MSG_USERAUTH_FAILURE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowRewindButton(boolean)
com.jcraft.jsch.jcraft.HMACSHA1: void init(byte[])
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void redispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.FragmentActivity: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.Class activityClass
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
com.jcraft.jsch.jce.ARCFOUR128: int getBlockSize()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void setupChannel(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode valueOf(java.lang.String)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
com.jcraft.jsch.ChannelSftp: void fill(com.jcraft.jsch.Buffer,int)
io.flutter.plugin.common.MessageCodec
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource FilePath
org.threeten.bp.Year: java.lang.Object writeReplace()
io.flutter.plugin.common.StandardMessageCodec: byte TRUE
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
androidx.fragment.app.Fragment: boolean mMenuVisible
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_low_normal
com.jcraft.jsch.KeyPairRSA: byte[] pub_array
com.jcraft.jsch.ChannelForwardedTCPIP
com.jcraft.jsch.ChannelForwardedTCPIP: ChannelForwardedTCPIP()
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
com.jcraft.jsch.Session: com.jcraft.jsch.HostKey hostkey
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
com.jcraft.jsch.KeyPairPKCS8: byte[] getSignature(byte[])
io.flutter.plugins.pathprovider.R$attr: R$attr()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.util.Map nameToSessionId
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: WebViewActivity$FlutterWebChromeClient$1(io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.activity.ComponentActivity$3
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_18
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterNativeView mNativeView
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
com.jcraft.jsch.SftpStatVFS: long getSize()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.util.Predicate
com.jcraft.jsch.Packet: void unshift(byte,int,int,int)
io.flutter.app.FlutterActivity: void onUserLeaveHint()
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
org.threeten.bp.ZoneOffset: java.lang.Object writeReplace()
androidx.annotation.Keep
com.jcraft.jsch.DHG1: byte[] p
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_EXTENDED_DATA
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
com.jcraft.jsch.ChannelSftp: java.lang.String getCwd()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
com.jcraft.jsch.ChannelSession: int tcol
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
org.threeten.bp.LocalDateTime: java.lang.Object readResolve()
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.HostKeyRepository: void add(com.jcraft.jsch.HostKey,com.jcraft.jsch.UserInfo)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void onKeyEventHandled(android.view.KeyEvent)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
io.flutter.plugins.sharedpreferences.R$id: int notification_main_column_container
com.jcraft.jsch.jce.SHA512: SHA512()
io.flutter.plugins.urllauncher.R$id: int italic
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
androidx.work.impl.WorkDatabase: WorkDatabase()
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides RIGHT
io.flutter.view.FlutterView: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
com.jcraft.jsch.UserInfo: boolean promptPassphrase(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
androidx.appcompat.widget.AlertDialogLayout
androidx.fragment.app.Fragment: void setNextAnim(int)
androidx.fragment.app.Fragment: android.view.View mInnerView
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.plugin.common.PluginRegistry$NewIntentListener: boolean onNewIntent(android.content.Intent)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
io.flutter.app.FlutterPluginRegistry: java.util.List access$700(io.flutter.app.FlutterPluginRegistry)
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: java.util.Map pluginMap
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel getLocalizationChannel()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
com.jcraft.jsch.Channel: void connect(int)
com.jcraft.jsch.Session: int s2ccipher_size
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.FlutterJNI getFlutterJNI()
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
io.flutter.embedding.android.FlutterFragment: void onFlutterUiNoLongerDisplayed()
com.jcraft.jsch.DHEC384: DHEC384()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_ATTRS
com.jcraft.jsch.SftpATTRS: int length()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.Class fragmentClass
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
io.flutter.view.FlutterNativeView$1
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.jcraft.jsch.IdentityRepository: boolean remove(byte[])
com.jcraft.jsch.Session$GlobalRequestReply: void setPort(int)
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
com.google.android.exoplayer2.video.VideoDecoderGLSurfaceView
io.flutter.view.FlutterNativeView: void attach(io.flutter.view.FlutterNativeView,boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.google.android.exoplayer2.ui.PlayerControlView: void setShowMultiWindowTimeBar(boolean)
com.jcraft.jsch.KeyPairECDSA: com.jcraft.jsch.KeyPair fromSSHAgent(com.jcraft.jsch.JSch,com.jcraft.jsch.Buffer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
com.google.android.exoplayer2.ui.PlayerView: void setRewindIncrementMs(int)
io.flutter.view.FlutterView: android.view.SurfaceHolder$Callback mSurfaceCallback
com.jcraft.jsch.KeyExchange: int PROPOSAL_LANG_STOC
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener
io.flutter.plugin.platform.PlatformPlugin$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
com.jcraft.jsch.ChannelForwardedTCPIP: void delPort(com.jcraft.jsch.ChannelForwardedTCPIP)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
com.jcraft.jsch.KeyPair: byte[] decrypt(byte[],byte[],byte[])
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.jcraft.jsch.IdentityRepository$Wrapper: java.lang.String getName()
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.jcraft.jsch.SftpStatVFS: long getFileSystemID()
com.google.android.exoplayer2.ui.StyledPlayerView: void setPlayer(com.google.android.exoplayer2.Player)
com.jcraft.jsch.SftpStatVFS: long flag
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
com.jcraft.jsch.Session: void setConfig(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
io.flutter.plugin.editing.FlutterTextUtils: int LINE_FEED
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
com.jcraft.jsch.Session: int c2scipher_size
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
io.flutter.plugins.urllauncher.R$id: int text2
com.jcraft.jsch.Util: java.lang.String byte2str(byte[],int,int,java.lang.String)
io.flutter.plugins.pathprovider.R$layout: int notification_action
com.jcraft.jsch.SignatureDSA
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.jcraft.jsch.ChannelSftp$2: long val$skip
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler
com.jcraft.jsch.jce.ARCFOUR: javax.crypto.Cipher cipher
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_27
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
androidx.core.app.RemoteActionCompat
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.jcraft.jsch.JSch: JSch()
com.jcraft.jsch.SftpATTRS: java.lang.String[] extended
com.jcraft.jsch.jcraft.HMAC: byte[] k_opad
io.flutter.app.FlutterFragmentActivity: void onPostResume()
io.flutter.plugin.common.StandardMessageCodec: byte INT
com.jcraft.jsch.KeyPair: int ERROR
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setTorchListener(com.journeyapps.barcodescanner.DecoratedBarcodeView$TorchListener)
io.flutter.plugins.sharedpreferences.R$id: R$id()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
com.jcraft.jsch.KeyPairECDSA: byte[] getEnd()
com.jcraft.jsch.ChannelSftp: int access$1200(com.jcraft.jsch.ChannelSftp,byte[],int,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
io.flutter.Log: void i(java.lang.String,java.lang.String,java.lang.Throwable)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_SYMLINK
io.flutter.plugins.pathprovider.BuildConfig
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerShowTimeoutMs(int)
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
io.flutter.app.FlutterActivityDelegate: android.view.WindowManager$LayoutParams matchParent
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: java.lang.String TAG
com.jcraft.jsch.SftpStatVFS: long size
io.flutter.embedding.android.FlutterView$2: void onFlutterUiNoLongerDisplayed()
com.jcraft.jsch.ChannelSession: void setPtySize(int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
io.flutter.plugins.urllauncher.WebViewActivity
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.fragment.app.Fragment: void noteStateNotSaved()
androidx.fragment.app.Fragment: int mTargetRequestCode
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.jcraft.jsch.DHEC521: DHEC521()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader instance
io.flutter.embedding.engine.loader.FlutterLoader$1$1: void run()
io.flutter.plugins.urllauncher.R$drawable: R$drawable()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
io.flutter.plugins.sharedpreferences.R$id: int blocking
com.jcraft.jsch.ChannelX11: boolean init
com.jcraft.jsch.KeyPairECDSA: byte[] begin
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
io.flutter.view.FlutterView$ViewportMetrics
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.jcraft.jsch.SftpException: int id
androidx.activity.ImmLeaksCleaner
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.jcraft.jsch.ChannelSftp: void sendREADLINK(byte[])
com.jcraft.jsch.KeyPair$ASN1: boolean isOCTETSTRING()
com.jcraft.jsch.ProxySOCKS4: java.lang.String passwd
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
com.jcraft.jsch.jce.SHA384: void init()
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] insert0(byte[])
com.jcraft.jsch.jce.ECDH256: ECDH256()
com.jcraft.jsch.Session: int auth_failures
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.jcraft.jsch.ChannelAgentForwarding
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: void setPointerIcon(android.view.PointerIcon)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_SKIA_DETERMINISTIC_RENDERING
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
com.jcraft.jsch.Session: com.jcraft.jsch.UserInfo userinfo
io.flutter.plugin.common.ErrorLogResult: void error(java.lang.String,java.lang.String,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
io.flutter.plugins.sharedpreferences.R$id: int actions
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENTC_REMOVE_ALL_RSA_IDENTITIES
com.jcraft.jsch.ProxySOCKS5: java.io.InputStream in
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.jcraft.jsch.Session
io.flutter.plugins.sharedpreferences.R$dimen: R$dimen()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
com.jcraft.jsch.SocketFactory: java.net.Socket createSocket(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
com.jcraft.jsch.ProxyHTTP: java.io.InputStream getInputStream()
com.jcraft.jsch.KeyPair: boolean parse(byte[])
io.flutter.plugins.pathprovider.PathProviderPlugin$1: io.flutter.plugins.pathprovider.PathProviderPlugin this$0
io.flutter.embedding.android.FlutterActivity: void setDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.jcraft.jsch.Session: int SSH_MSG_IGNORE
com.google.android.exoplayer2.ui.PlayerControlView: void setPlayer(com.google.android.exoplayer2.Player)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onDetachedFromContentProvider()
io.flutter.app.FlutterActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_15
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$200(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
io.flutter.view.AccessibilityBridge$Flag
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
io.flutter.embedding.android.FlutterView$TransparencyMode: FlutterView$TransparencyMode(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.jcraft.jsch.CipherNone: int bsize
com.jcraft.jsch.KeyPairDSA: int getKeyType()
io.flutter.view.FlutterView: void onDetachedFromWindow()
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_16
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.jcraft.jsch.KeyPair: void dispose()
com.jcraft.jsch.Request: boolean waitForReply()
com.jcraft.jsch.Session: int getServerAliveCountMax()
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowVrButton(boolean)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.jcraft.jsch.jce.KeyPairGenDSA
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.dart.DartExecutor: void setIsolateServiceIdListener(io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener)
androidx.activity.ComponentActivity$2
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: boolean isPostponed()
com.jcraft.jsch.ChannelSftp$2: boolean closed
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource[] values()
io.flutter.view.VsyncWaiter: void init()
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Time
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_clickable_spans
com.jcraft.jsch.ChannelSftp: boolean fs_is_bs
com.google.android.exoplayer2.ui.PlayerView: boolean getControllerAutoShow()
com.jcraft.jsch.jce.TripleDESCTR: boolean isCBC()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.jcraft.jsch.JSch: com.jcraft.jsch.ConfigRepository configRepository
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
io.flutter.plugins.pathprovider.R$id: int actions
com.jcraft.jsch.KeyPair: byte[] getKeyTypeName()
com.jcraft.jsch.DHG14: int SSH_MSG_KEXDH_INIT
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
androidx.work.NetworkType: androidx.work.NetworkType[] values()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_16
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
com.jcraft.jsch.SignatureRSA: void setPrvKey(byte[],byte[])
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.jcraft.jsch.ChannelSession: int trow
io.flutter.embedding.android.ExclusiveAppComponent: java.lang.Object getAppComponent()
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderFetchStrategy
com.jcraft.jsch.KnownHosts$HashedHostKey: com.jcraft.jsch.KnownHosts this$0
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.SplashScreen provideSplashScreen()
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String dartEntrypoint
com.jcraft.jsch.jce.AES192CBC: int ivsize
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.jcraft.jsch.Channel$PassiveInputStream: java.io.PipedOutputStream out
io.flutter.embedding.engine.plugins.service.ServiceAware: void onDetachedFromService()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
com.jcraft.jsch.Logger: int INFO
androidx.fragment.app.FragmentActivity: void onResume()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.fragment.app.Fragment: void onStop()
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENTC_SIGN_REQUEST
com.jcraft.jsch.MAC: int getBlockSize()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.jcraft.jsch.KeyPair$ASN1: int start
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
com.jcraft.jsch.SftpProgressMonitor: int PUT
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel getDeferredComponentChannel()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
com.jcraft.jsch.KeyPair: boolean encrypted
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_EXTENDED
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
io.flutter.plugin.platform.PlatformViewsController$1: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
androidx.recyclerview.widget.RecyclerView
io.flutter.plugins.sharedpreferences.R$id: int time
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_22
com.jcraft.jsch.KeyPair$ASN1: KeyPair$ASN1(com.jcraft.jsch.KeyPair,byte[],int,int)
com.jcraft.jsch.ChannelSubsystem: void start()
com.jcraft.jsch.SftpStatVFS: long getAvailINodes()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivityForConfigChanges()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_10
io.flutter.plugin.common.FlutterException
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String INITIAL_ROUTE_META_DATA_KEY
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
com.jcraft.jsch.ChannelSftp$LsEntry: java.lang.String longname
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.jcraft.jsch.ChannelSftp$2
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
io.flutter.plugin.editing.InputConnectionAdaptor: int clampIndexToEditable(int,android.text.Editable)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$400(io.flutter.plugin.platform.PlatformViewsController)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_REALPATH
com.jcraft.jsch.Session: java.lang.String[] checkSignatures(java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
io.flutter.plugins.sharedpreferences.R$color
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] getQ()
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_fontStyle
com.jcraft.jsch.KnownHosts$HashedHostKey: KnownHosts$HashedHostKey(com.jcraft.jsch.KnownHosts,java.lang.String,java.lang.String,int,byte[],java.lang.String)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
com.jcraft.jsch.ChannelSubsystem: boolean pty
com.jcraft.jsch.ChannelSftp: void sendLSTAT(byte[])
io.flutter.view.FlutterView: android.view.inputmethod.InputMethodManager mImm
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.lang.String TAG
io.flutter.embedding.android.AndroidKeyProcessor: boolean isPendingEvent(android.view.KeyEvent)
com.jcraft.jsch.jce.AES256CTR: int getIVSize()
com.journeyapps.barcodescanner.ViewfinderView: void setCameraPreview(com.journeyapps.barcodescanner.CameraPreview)
io.flutter.view.AccessibilityBridge: int access$1102(io.flutter.view.AccessibilityBridge,int)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.jcraft.jsch.KeyExchange: java.lang.String enc_c2s
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.jcraft.jsch.JSchAuthCancelException: java.lang.String method
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.lang.String[] getValues(java.lang.String)
com.jcraft.jsch.Session$GlobalRequestReply: void setReply(int)
io.flutter.embedding.engine.plugins.activity.ActivityAware
io.flutter.app.FlutterActivityDelegate$ViewFactory
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder
io.flutter.plugins.pathprovider.R$attr
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
io.flutter.plugins.urllauncher.R$dimen: int compat_notification_large_icon_max_height
org.threeten.bp.chrono.HijrahDate: java.lang.Object writeReplace()
io.flutter.view.FlutterView$1
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
androidx.fragment.app.Fragment: boolean mRemoving
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle[] values()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
com.jcraft.jsch.UserInfo: java.lang.String getPassword()
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.app.FlutterActivityDelegate$ViewFactory: io.flutter.view.FlutterNativeView createFlutterNativeView()
com.jcraft.jsch.Buffer: void putByte(byte)
com.jcraft.jsch.ChannelX11
com.jcraft.jsch.LocalIdentityRepository: int getStatus()
com.jcraft.jsch.SftpATTRS: long size
com.google.android.exoplayer2.ui.PlayerView: void setShutterBackgroundColor(int)
io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.jcraft.jsch.DHECN: int state
io.flutter.embedding.android.FlutterFragmentActivity: void ensureFlutterFragmentCreated()
com.jcraft.jsch.Util: boolean array_equals(byte[],byte[])
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int ADD
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
com.jcraft.jsch.Identity: boolean decrypt()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,byte[])
io.flutter.plugins.pathprovider.R$id: int action_container
androidx.fragment.app.Fragment: boolean mDeferStart
com.jcraft.jsch.Buffer: Buffer(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder destroyEngineWithFragment(boolean)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_STAT
org.threeten.bp.zone.StandardZoneRules
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mDataDirPath
org.threeten.bp.Ser: java.lang.Object readResolve()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface getBroadcastReceiverControlSurface()
androidx.core.graphics.drawable.IconCompatParcelizer
com.jcraft.jsch.jce.KeyPairGenECDSA: void bzero(byte[])
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_25
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
io.flutter.embedding.android.FlutterTextureView: java.lang.String TAG
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderPackage
com.jcraft.jsch.KeyPairGenDSA: byte[] getY()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getInitialRoute()
io.flutter.app.FlutterActivity: void onLowMemory()
io.flutter.BuildConfig
androidx.appcompat.widget.AppCompatEditText
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_JS_EXTRA
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
com.jcraft.jsch.Channel: boolean isConnected()
io.flutter.embedding.android.SplashScreen: android.os.Bundle saveSplashScreenState()
io.flutter.plugins.urllauncher.R$drawable
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,int)
com.jcraft.jsch.KeyExchange: java.lang.String getKeyType()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
com.jcraft.jsch.UserAuthKeyboardInteractive: UserAuthKeyboardInteractive()
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
com.jcraft.jsch.ChannelSftp: void sendFSTAT(byte[])
com.jcraft.jsch.jce.Random: void fill(byte[],int,int)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus OK
com.jcraft.jsch.OpenSSHConfig: OpenSSHConfig(java.io.Reader)
com.jcraft.jsch.KeyPairDSA: byte[] P_array
com.jcraft.jsch.KeyExchange: int STATE_END
com.google.android.exoplayer2.ui.PlayerView: void setCustomErrorMessage(java.lang.CharSequence)
androidx.fragment.app.FragmentActivity: boolean mStopped
com.jcraft.jsch.ProxySOCKS4: java.net.Socket socket
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry getTextureRegistry()
com.jcraft.jsch.ChannelExec: void setPty(boolean)
com.jcraft.jsch.KeyPair: void writePrivateKey(java.io.OutputStream)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_content_margin_start
androidx.fragment.app.Fragment: boolean mRestored
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.ui.PlayerView: void setControllerAutoShow(boolean)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.plugin.common.BinaryCodec: io.flutter.plugin.common.BinaryCodec INSTANCE
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
androidx.appcompat.widget.Toolbar: void setTitle(int)
io.flutter.embedding.android.FlutterSplashView$2: FlutterSplashView$2(io.flutter.embedding.android.FlutterSplashView)
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
io.flutter.plugins.pathprovider.R$layout: int notification_template_icon_group
com.jcraft.jsch.jce.SignatureDSA: SignatureDSA()
io.flutter.plugins.pathprovider.R$styleable: int GradientColorItem_android_offset
com.jcraft.jsch.ProxySOCKS4: ProxySOCKS4(java.lang.String,int)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowPreviousButton(boolean)
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1
io.flutter.plugin.platform.VirtualDisplayController$1$1: io.flutter.plugin.platform.VirtualDisplayController$1 this$1
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,java.util.Map)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
com.jcraft.jsch.ChannelX11: byte[] cache
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation
io.flutter.plugins.urllauncher.R$style
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.util.Set onModeChangeListeners
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_font
io.flutter.embedding.android.FlutterFragment: void onActivityResult(int,int,android.content.Intent)
com.jcraft.jsch.ChannelSftp: void chgrp(int,java.lang.String)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
com.jcraft.jsch.Packet: byte[] ba4
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.jcraft.jsch.ChannelSftp: java.lang.String getExtension(java.lang.String)
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
com.jcraft.jsch.ChannelSession: boolean pty
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugins.pathprovider.PathProviderPlugin$1: io.flutter.plugin.common.MethodChannel$Result val$result
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
com.jcraft.jsch.Channel$1: com.jcraft.jsch.Buffer buffer
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
com.jcraft.jsch.Channel$1: com.jcraft.jsch.Channel this$0
com.jcraft.jsch.Buffer: void putString(byte[])
io.flutter.plugins.urllauncher.R$styleable: int ColorStateListItem_android_alpha
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.view.FlutterView view()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
com.jcraft.jsch.Session: void setServerAliveCountMax(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.jcraft.jsch.ConfigRepository$1: java.lang.String getUser()
io.flutter.plugin.platform.PlatformViewsController: void validateVirtualDisplayDimensions(int,int)
com.jcraft.jsch.jgss.GSSContextKrb5: void setSystemProperty(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
androidx.work.impl.workers.CombineContinuationsWorker
com.jcraft.jsch.HostKeyRepository: com.jcraft.jsch.HostKey[] getHostKey(java.lang.String,java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setProgressUpdateListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$ProgressUpdateListener)
org.threeten.bp.chrono.MinguoEra: java.lang.Object writeReplace()
com.google.android.exoplayer2.upstream.RawResourceDataSource
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.jcraft.HMAC: void init(byte[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
io.flutter.embedding.android.FlutterEngineConfigurator: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.jce.ARCFOUR128: ARCFOUR128()
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
com.jcraft.jsch.DHG1: byte[] I_S
com.jcraft.jsch.Channel: void write(byte[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.app.FlutterActivity: io.flutter.view.FlutterView$Provider viewProvider
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResource(java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String initialRoute
com.jcraft.jsch.jgss.GSSContextKrb5: byte[] getMIC(byte[],int,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
androidx.core.graphics.drawable.IconCompat
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
androidx.lifecycle.SingleGeneratedAdapterObserver
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
androidx.lifecycle.LifecycleService: LifecycleService()
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
com.jcraft.jsch.IdentityFile: IdentityFile(com.jcraft.jsch.JSch,java.lang.String,com.jcraft.jsch.KeyPair)
com.jcraft.jsch.JSch: void setConfigRepository(com.jcraft.jsch.ConfigRepository)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource[] values()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.view.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
io.flutter.app.FlutterActivity: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1
androidx.fragment.app.Fragment: android.view.View mView
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getAppBundlePath()
com.jcraft.jsch.Session: void connect()
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_OPEN_CONFIRMATION
com.jcraft.jsch.JSch: java.util.Vector sessionPool
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
com.jcraft.jsch.Session: void setPortForwardingR(java.lang.String,int,java.lang.String,int)
io.flutter.plugins.urllauncher.WebViewActivity: void onCreate(android.os.Bundle)
com.jcraft.jsch.OpenSSHConfig$MyConfig: int getPort()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void attachToNative(boolean)
io.flutter.plugin.common.MethodChannel$Result: void success(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: void init()
com.jcraft.jsch.JSch: void setHostKeyRepository(com.jcraft.jsch.HostKeyRepository)
io.flutter.plugins.urllauncher.R$id: int actions
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.jcraft.jsch.Signature
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
io.flutter.embedding.android.FlutterView$1
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra[] values()
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_actions
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
com.jcraft.jsch.Session: int serverAliveCountMax
com.jcraft.jsch.ChannelSftp: void sendHARDLINK(byte[],byte[])
com.jcraft.jsch.PortWatcher: void delPort(com.jcraft.jsch.Session)
android.support.v4.media.AudioAttributesImplApi21Parcelizer
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface
io.flutter.app.FlutterActivityDelegate: java.lang.String SPLASH_SCREEN_META_DATA_KEY
com.jcraft.jsch.Channel: java.io.InputStream getExtInputStream()
com.jcraft.jsch.Cipher: int ENCRYPT_MODE
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldHandleDeeplinking()
com.jcraft.jsch.RequestX11
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
io.flutter.plugins.pathprovider.R$dimen: int compat_notification_large_icon_max_width
com.jcraft.jsch.SftpATTRS: boolean isLink()
com.jcraft.jsch.ChannelX11: int revtable(byte)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterView$3: void onFlutterUiDisplayed()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_endX
com.jcraft.jsch.SftpStatVFS: int permissions
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromActivity()
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: io.flutter.view.FlutterView this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugins.sharedpreferences.R$id: int action_divider
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_endX
com.jcraft.jsch.ChannelSftp: void get(java.lang.String,java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
com.jcraft.jsch.ChannelSession: java.util.Hashtable getEnv()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.flutter.view.FlutterView: io.flutter.app.FlutterPluginRegistry getPluginRegistry()
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
io.flutter.plugins.urllauncher.UrlLauncher: UrlLauncher(android.content.Context,android.app.Activity)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.lang.Object getLifecycle()
com.jcraft.jsch.KeyExchange: java.lang.String lang_c2s
com.jcraft.jsch.UserAuthGSSAPIWithMIC: int SSH_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPLETE
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: android.os.Bundle createArgs()
io.flutter.plugins.pathprovider.R$color: int notification_action_color_filter
com.jcraft.jsch.Session: byte[] s2cmac_result2
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.jcraft.jsch.IdentityRepository$Wrapper: int getStatus()
com.jcraft.jsch.jce.ECDHN: boolean validate(byte[],byte[])
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String TAG
com.jcraft.jsch.ChannelSftp
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode[] values()
com.jcraft.jsch.Session: int SSH_MSG_DEBUG
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
com.jcraft.jsch.Session: int seqi
com.jcraft.jsch.Buffer: int getLength()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void synthesizeMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.AndroidKeyProcessor,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int UNKNOWN
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: java.lang.String TAG
com.jcraft.jsch.IO: void getByte(byte[])
io.flutter.plugin.common.EventChannel: java.lang.String TAG
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.jcraft.jsch.Util: byte[] fromFile(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
io.flutter.view.FlutterView$2
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.jcraft.jsch.Buffer: byte[] getMPIntBits()
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.view.AccessibilityBridge: void access$200(io.flutter.view.AccessibilityBridge,int,int)
org.threeten.bp.chrono.HijrahChronology: java.lang.Object readResolve()
com.jcraft.jsch.jce.SHA512: java.security.MessageDigest md
io.flutter.plugins.sharedpreferences.R$dimen: int notification_small_icon_background_padding
com.jcraft.jsch.ChannelSession: boolean agent_forwarding
com.jcraft.jsch.ChannelSubsystem: void setAgentForwarding(boolean)
com.jcraft.jsch.HostKey: java.lang.String getComment()
com.jcraft.jsch.jcraft.HMACSHA196: byte[] _buf16
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: android.view.PointerIcon getSystemPointerIcon(int)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
com.jcraft.jsch.Channel$PassiveInputStream: Channel$PassiveInputStream(com.jcraft.jsch.Channel,java.io.PipedOutputStream,int)
io.flutter.embedding.android.FlutterSplashView: java.lang.Runnable onTransitionComplete
com.jcraft.jsch.ChannelSftp$LsEntry: int compareTo(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,int,java.nio.ByteBuffer)
com.jcraft.jsch.ChannelX11: void setHost(java.lang.String)
com.jcraft.jsch.ChannelSftp$2: com.jcraft.jsch.ChannelSftp this$0
com.jcraft.jsch.ChannelForwardedTCPIP: int LOCAL_WINDOW_SIZE_MAX
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.jcraft.jsch.ChannelExec: byte[] command
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.activity.ComponentActivity: int mContentLayoutId
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
io.flutter.BuildConfig: boolean PROFILE
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView)
com.jcraft.jsch.jce.AES128CTR
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_0
com.jcraft.jsch.jce.HMACSHA512: int getBlockSize()
com.jcraft.jsch.HostKey: boolean isIncluded(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
com.jcraft.jsch.KeyPairECDSA: void generate(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
com.jcraft.jsch.ChannelSubsystem: void setWantReply(boolean)
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.android.FlutterEngineProvider: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
com.jcraft.jsch.Buffer: void putString(byte[],int,int)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int INVERTED_STYLUS
com.jcraft.jsch.ChannelForwardedTCPIP: void addPort(com.jcraft.jsch.Session,java.lang.String,int,int,java.lang.String,int,com.jcraft.jsch.SocketFactory)
com.jcraft.jsch.IO: java.io.OutputStream out_ext
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowSubtitleButton(boolean)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.plugin.platform.PlatformViewRegistryImpl
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
com.jcraft.jsch.jce.ECDHN: void init(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TAG
com.jcraft.jsch.Channel: void setRecipient(int)
com.jcraft.jsch.ChannelSubsystem: void setTerminalMode(byte[])
com.jcraft.jsch.ChannelSftp: void access$1000(com.jcraft.jsch.ChannelSftp,byte[],long,int,com.jcraft.jsch.ChannelSftp$RequestQueue)
com.jcraft.jsch.LocalIdentityRepository: void remove(com.jcraft.jsch.Identity)
com.jcraft.jsch.DHG14: DHG14()
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_10
io.flutter.app.FlutterActivityDelegate: io.flutter.view.FlutterView getFlutterView()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra[] values()
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener: void onAccessibilityChanged(boolean,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_pane_title
com.jcraft.jsch.KeyPairDSA: byte[] getBegin()
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.common.StandardMessageCodec: byte STRING
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
io.flutter.plugin.common.EventChannel$1
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
com.jcraft.jsch.SftpProgressMonitor: int GET
io.flutter.plugin.common.PluginRegistry: java.lang.Object valuePublishedByPlugin(java.lang.String)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
com.jcraft.jsch.UserAuth: boolean start(com.jcraft.jsch.Session)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
com.jcraft.jsch.UserAuth: com.jcraft.jsch.UserInfo userinfo
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.jcraft.jsch.KeyPairGenDSA: byte[] getX()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
com.jcraft.jsch.jce.KeyPairGenECDSA: java.security.interfaces.ECPrivateKey getPrivateKey()
com.jcraft.jsch.Channel: void setRemotePacketSize(int)
io.flutter.view.FlutterView: void popRoute()
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.lang.String find(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.jcraft.jsch.ChannelSftp: int sendWRITE(byte[],long,byte[],int,int)
com.jcraft.jsch.ChannelShell: void setEnv(java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_low_normal
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void popSystemNavigator()
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
androidx.appcompat.widget.FitWindowsFrameLayout
com.jcraft.jsch.jce.AES128CTR: boolean isCBC()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
com.jcraft.jsch.ChannelSftp: void lcd(java.lang.String)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.RenderMode getRenderMode()
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
com.jcraft.jsch.jce.DH: void setG(byte[])
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra valueOf(java.lang.String)
io.flutter.plugins.urllauncher.R$dimen: int notification_top_pad
androidx.fragment.app.Fragment: void onDestroyView()
io.flutter.embedding.engine.plugins.service.ServicePluginBinding
com.google.android.exoplayer2.ui.PlayerView: void setDefaultArtwork(android.graphics.drawable.Drawable)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_top_pad_large_text
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides[] values()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
io.flutter.plugin.editing.FlutterTextUtils: int CANCEL_TAG
io.flutter.embedding.android.FlutterView$3: java.lang.Runnable val$onDone
io.flutter.plugins.sharedpreferences.R$id: int title
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_icon_group
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_SKPARAGRAPH_META_DATA_KEY
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: UrlLauncher$LaunchStatus(java.lang.String,int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.google.android.exoplayer2.ui.StyledPlayerControlView: boolean getShowSubtitleButton()
io.flutter.plugins.sharedpreferences.R$id: int forever
io.flutter.Log: int VERBOSE
com.jcraft.jsch.DHECN: byte[] e
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
com.jcraft.jsch.KeyPairRSA: byte[] begin
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
com.jcraft.jsch.Session: boolean in_prompt
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_HANDLE
androidx.fragment.app.FragmentActivity: boolean mRequestedPermissionsFromFragment
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.jcraft.jsch.UserAuth: com.jcraft.jsch.Buffer buf
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.plugins.sharedpreferences.R$styleable: int ColorStateListItem_android_color
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
com.jcraft.jsch.UIKeyboardInteractive: java.lang.String[] promptKeyboardInteractive(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],boolean[])
io.flutter.plugin.localization.LocalizationPlugin
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_17
com.jcraft.jsch.HostKey: java.lang.String marker
com.jcraft.jsch.jce.SHA384: void update(byte[],int,int)
com.jcraft.jsch.ChannelAgentForwarding: void send(byte[])
com.jcraft.jsch.IdentityFile: java.lang.String identity
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
com.jcraft.jsch.jce.HMAC: int getBlockSize()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(android.app.Activity,androidx.lifecycle.Lifecycle)
com.jcraft.jsch.RequestX11: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
com.jcraft.jsch.ChannelSftp: int SSH_FILEXFER_ATTR_EXTENDED
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.lifecycle.Lifecycling$1
com.jcraft.jsch.Session: void noMoreSessionChannels()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
io.flutter.plugins.pathprovider.R$attr: int fontVariationSettings
com.jcraft.jsch.Channel: int SSH_OPEN_RESOURCE_SHORTAGE
com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)
com.jcraft.jsch.jce.AES128CTR: int getIVSize()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setPlayer(com.google.android.exoplayer2.Player)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void addEvent(android.view.KeyEvent)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
com.jcraft.jsch.jgss.GSSContextKrb5: GSSContextKrb5()
io.flutter.embedding.android.FlutterFragment: boolean stillAttachedForEvent(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_29
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_font
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel this$0
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowPreviousButton(boolean)
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
io.flutter.plugins.pathprovider.R$layout: int notification_template_custom_big
io.flutter.plugin.common.BasicMessageChannel: java.lang.String CHANNEL_BUFFERS_CHANNEL
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_font
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
com.jcraft.jsch.Session: java.io.OutputStream out
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.jcraft.jsch.jce.AES256CTR: int ivsize
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: ShimRegistrar(java.lang.String,java.util.Map)
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
android.support.v4.media.session.PlaybackStateCompat
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
org.threeten.bp.Instant
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.jcraft.jsch.RequestEnv: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
io.flutter.plugins.sharedpreferences.R$drawable
io.flutter.plugins.sharedpreferences.R$string
com.jcraft.jsch.KnownHosts: void remove(java.lang.String,java.lang.String,byte[])
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
io.flutter.view.FlutterView$ViewportMetrics: int systemGestureInsetTop
com.jcraft.jsch.ChannelSftp: int SSH_FX_BAD_MESSAGE
io.flutter.plugins.pathprovider.StorageDirectoryMapper: java.lang.String androidType(java.lang.Integer)
io.flutter.embedding.android.FlutterFragment$ActivityCallThrough
com.jcraft.jsch.KeyPair: int RSA
androidx.versionedparcelable.CustomVersionedParcelable
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.app.FlutterPluginRegistry this$0
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
com.jcraft.jsch.ChannelShell: void setEnv(java.util.Hashtable)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.loader.FlutterLoader$2
androidx.fragment.app.Fragment: int mContentLayoutId
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowMultiWindowTimeBar(boolean)
com.jcraft.jsch.ChannelSftp$1: void write(byte[])
com.jcraft.jsch.jce.AES128CBC: javax.crypto.Cipher cipher
io.flutter.plugin.platform.PlatformPlugin: void destroy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.flutter.plugins.pathprovider.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.android.FlutterEngineConfigurator: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.IdentityRepository: void removeAll()
com.jcraft.jsch.ChannelSftp: int SSH_FX_NO_SUCH_FILE
com.jcraft.jsch.SftpException: java.lang.String toString()
com.jcraft.jsch.jce.TripleDESCBC: boolean isCBC()
com.jcraft.jsch.DH: void checkRange()
com.jcraft.jsch.jce.HMACSHA196: byte[] _buf20
com.google.android.exoplayer2.ui.StyledPlayerView: com.google.android.exoplayer2.ui.SubtitleView getSubtitleView()
io.flutter.embedding.engine.FlutterEngine: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.jcraft.jsch.KeyExchange: byte[] K
com.jcraft.jsch.KeyPairGenRSA: void init(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.google.android.exoplayer2.ui.StyledPlayerControlView: boolean getShowVrButton()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
com.jcraft.jsch.ProxySOCKS5: java.net.Socket getSocket()
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpStatVFS _statVFS(byte[])
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENTC_REMOVE_IDENTITY
com.google.android.exoplayer2.ui.PlayerControlView: boolean getShowShuffleButton()
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getDartEntrypointFunctionName()
io.flutter.plugins.sharedpreferences.R$attr: int alpha
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.jcraft.jsch.Buffer: void putInt(int)
io.flutter.embedding.android.FlutterView$3
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
com.jcraft.jsch.SftpStatVFS: long bavail
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_inset_horizontal_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.jcraft.jsch.ChannelSftp$3: int select(com.jcraft.jsch.ChannelSftp$LsEntry)
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterView access$300(io.flutter.app.FlutterPluginRegistry)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
com.jcraft.jsch.Util: byte[] str2byte(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.jcraft.jsch.ChannelSftp: java.io.InputStream get(java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)
com.jcraft.jsch.UserAuthPassword: int SSH_MSG_USERAUTH_PASSWD_CHANGEREQ
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
io.flutter.view.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.view.FlutterNativeView)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription
io.flutter.embedding.android.FlutterFragmentActivity: void switchLaunchThemeForNormalTheme()
com.jcraft.jsch.CipherNone: int getBlockSize()
io.flutter.view.FlutterView$2: void surfaceCreated(android.view.SurfaceHolder)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler: void onKeyEventHandled(android.view.KeyEvent)
com.jcraft.jsch.jce.DH: java.math.BigInteger g
io.flutter.plugins.pathprovider.R$id: int action_text
androidx.fragment.app.Fragment: boolean mHidden
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_STARTUP
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.content.Context getContext()
com.jcraft.jsch.ChannelX11: void removeFakedCookie(com.jcraft.jsch.Session)
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder withNewEngine()
io.flutter.embedding.android.FlutterFragment: void onUserLeaveHint()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.view.FlutterView: boolean hasRenderedFirstFrame()
com.jcraft.jsch.jce.ECDHN: byte[] getQ()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.jcraft.jsch.Util: int skipUTF8Char(byte)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
io.flutter.plugin.common.PluginRegistry$Registrar: java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.plugin.common.EventChannel$StreamHandler: void onCancel(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
com.jcraft.jsch.ChannelSftp: void run()
org.threeten.bp.chrono.Chronology: java.lang.Object writeReplace()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.ui.StyledPlayerView: void setUseSensorRotation(boolean)
com.jcraft.jsch.Buffer: byte[] getMPInt()
io.flutter.embedding.engine.plugins.service.ServiceControlSurface
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: java.lang.Object valuePublishedByPlugin(java.lang.String)
io.flutter.view.FlutterNativeView: FlutterNativeView(android.content.Context,boolean)
com.jcraft.jsch.jce.AES192CTR: int getBlockSize()
com.jcraft.jsch.jce.AES192CBC: void init(int,byte[],byte[])
io.flutter.plugins.pathprovider.R$layout: int custom_dialog
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_startY
com.jcraft.jsch.Session: void delPortForwardingL(java.lang.String,int)
com.jcraft.jsch.ChannelSftp: java.lang.String realpath(java.lang.String)
io.flutter.plugins.pathprovider.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.embedding.android.FlutterSplashView: java.lang.String previousCompletedSplashIsolate
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.jcraft.jsch.ChannelSftp$LsEntry: com.jcraft.jsch.SftpATTRS getAttrs()
androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_STARTUP
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Path)
io.flutter.plugin.common.BasicMessageChannel$Reply
com.jcraft.jsch.SftpATTRS: int getPermissions()
androidx.media.AudioAttributesCompatParcelizer
io.flutter.embedding.android.FlutterSurfaceView: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
io.flutter.plugin.mouse.MouseCursorPlugin$2
com.jcraft.jsch.UserAuthGSSAPIWithMIC: int SSH_MSG_USERAUTH_GSSAPI_ERROR
com.jcraft.jsch.ChannelSftp: void get(java.lang.String,java.io.OutputStream,com.jcraft.jsch.SftpProgressMonitor,int,long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
io.flutter.plugin.platform.PlatformViewRegistry
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.pm.PackageManager mPackageManager
io.flutter.app.FlutterActivity: void onCreate(android.os.Bundle)
com.jcraft.jsch.jce.HMAC: byte[] tmp
com.jcraft.jsch.SftpATTRS: int S_ISGID
io.flutter.plugins.urllauncher.WebViewActivity$2: WebViewActivity$2(io.flutter.plugins.urllauncher.WebViewActivity)
io.flutter.plugins.sharedpreferences.R$styleable: R$styleable()
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
com.jcraft.jsch.ChannelSession: void setPtyType(java.lang.String)
com.jcraft.jsch.ChannelDirectTCPIP: void run()
io.flutter.app.FlutterActivityDelegate: void onStop()
io.flutter.plugins.pathprovider.R$id: int text
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.SftpProgressMonitor: boolean count(long)
com.jcraft.jsch.KeyPairGenDSA: byte[] getQ()
io.flutter.plugin.common.BinaryCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener
io.flutter.util.Predicate: boolean test(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.jcraft.jsch.ChannelSftp$1: int startid
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener
com.jcraft.jsch.DHG1: int state
com.jcraft.jsch.DHECN
com.jcraft.jsch.JSch: com.jcraft.jsch.IdentityRepository getIdentityRepository()
io.flutter.plugin.platform.PlatformView: android.view.View getView()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
io.flutter.view.FlutterView$ViewportMetrics: int physicalHeight
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
io.flutter.app.FlutterActivityDelegate: void onUserLeaveHint()
com.jcraft.jsch.ChannelSftp$Header: int length
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
io.flutter.embedding.android.FlutterFragmentActivity: android.content.Intent createDefaultIntent(android.content.Context)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
com.jcraft.jsch.ChannelSftp: int access$100(com.jcraft.jsch.ChannelSftp,byte[],long,byte[],int,int)
com.jcraft.jsch.jce.AES128CBC: void init(int,byte[],byte[])
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.jcraft.jsch.JSch: void removeIdentity(com.jcraft.jsch.Identity)
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
com.jcraft.jsch.jce.ECDHN: javax.crypto.KeyAgreement myKeyAgree
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setVrButtonListener(android.view.View$OnClickListener)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.jcraft.jsch.ChannelSftp$LsEntry: com.jcraft.jsch.SftpATTRS attrs
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
com.jcraft.jsch.Logger
com.jcraft.jsch.Channel$1: void close()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
com.jcraft.jsch.KeyExchange: com.jcraft.jsch.HASH getHash()
io.flutter.view.FlutterView$1: FlutterView$1(io.flutter.view.FlutterView)
com.jcraft.jsch.KeyExchange: int PROPOSAL_COMP_ALGS_STOC
com.jcraft.jsch.ChannelForwardedTCPIP: java.util.Vector pool
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
io.flutter.plugins.urllauncher.R$layout
com.jcraft.jsch.ChannelX11: java.net.Socket socket
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.app.FlutterApplication: void setCurrentActivity(android.app.Activity)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
com.jcraft.jsch.jce.BlowfishCBC: javax.crypto.Cipher cipher
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_centerX
com.jcraft.jsch.Channel: int lmpsize
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_endX
com.jcraft.jsch.KeyExchange: boolean next(com.jcraft.jsch.Buffer)
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
com.google.android.exoplayer2.ui.StyledPlayerControlView: int getRepeatToggleModes()
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.jcraft.jsch.ChannelSftp: int seq
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowVrButton(boolean)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
com.jcraft.jsch.Session: int[] compress_len
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_OBSERVATORY_PORT
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
io.flutter.embedding.engine.renderer.FlutterRenderer
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: PathProviderPlugin$UiThreadExecutor()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.String engineId
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
com.jcraft.jsch.ChannelSftp: int SSH_FX_OP_UNSUPPORTED
io.flutter.view.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallError(java.lang.String,java.lang.String)
io.flutter.app.FlutterFragmentActivity
androidx.fragment.app.Fragment: boolean mAdded
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_30
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: java.lang.String TAG
io.flutter.plugin.common.BasicMessageChannel$Reply: void reply(java.lang.Object)
com.jcraft.jsch.jcraft.HMACSHA1: void update(byte[],int,int)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
io.flutter.plugins.sharedpreferences.R$id: int async
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
io.flutter.plugin.editing.TextInputPlugin: android.text.Editable getEditable()
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
com.jcraft.jsch.HostKey: boolean isMatched(java.lang.String)
com.jcraft.jsch.Session: java.lang.String getUserName()
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
com.google.android.exoplayer2.ui.PlayerControlView: void setShowShuffleButton(boolean)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
com.jcraft.jsch.DHG1: int SSH_MSG_KEXDH_REPLY
io.flutter.embedding.android.SplashScreenProvider: io.flutter.embedding.android.SplashScreen provideSplashScreen()
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
com.jcraft.jsch.Proxy: java.io.InputStream getInputStream()
com.jcraft.jsch.Session: int serverAliveInterval
com.jcraft.jsch.DHECN: byte[] I_C
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_READ
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field valueOf(java.lang.String)
com.jcraft.jsch.RequestSignal: void setSignal(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
com.google.android.exoplayer2.ui.StyledPlayerView: int getResizeMode()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String ALWAYS_USE_24_HOUR_FORMAT
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterImageView)
io.flutter.embedding.engine.loader.ResourceExtractor: java.util.HashSet mResources
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: java.util.Set shimRegistrars
com.jcraft.jsch.Session: com.jcraft.jsch.Random random
io.flutter.plugins.sharedpreferences.R$id: int icon
com.jcraft.jsch.RequestPtyReq: int tcol
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_normal
org.threeten.bp.OffsetTime: java.lang.Object writeReplace()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)
com.jcraft.jsch.ChannelSession: byte[] toByteArray(java.lang.Object)
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides NONE
com.jcraft.jsch.ChannelSftp: boolean isRemoteDir(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
io.flutter.view.AccessibilityBridge$1: void onTap(int)
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_DATA
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG_FLUTTER_FRAGMENT
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingTop
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.RenderMode getRenderMode()
io.flutter.plugins.sharedpreferences.R$id: int tag_transition_group
com.google.android.exoplayer2.ui.PlayerView: void setControllerShowTimeoutMs(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.jcraft.jsch.KeyPairGenRSA: byte[] getEQ()
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.Log: int ASSERT
io.flutter.plugin.common.MethodChannel$IncomingResultHandler
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
io.flutter.plugins.sharedpreferences.R$drawable: int notification_template_icon_low_bg
io.flutter.embedding.android.FlutterFragment: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
com.jcraft.jsch.JSch: com.jcraft.jsch.HostKeyRepository known_hosts
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_SKIA_DETERMINISTIC_RENDERING
io.flutter.app.FlutterApplication
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTap(int)
io.flutter.app.FlutterActivity: io.flutter.app.FlutterActivityDelegate delegate
com.jcraft.jsch.DHGEX: int state
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
com.jcraft.jsch.jce.AES192CTR: boolean isCBC()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.Channel: int index
com.jcraft.jsch.PortWatcher: java.net.InetAddress boundaddress
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context)
io.flutter.view.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
io.flutter.app.FlutterFragmentActivity: void onPause()
com.jcraft.jsch.Channel: boolean eof_remote
com.jcraft.jsch.Session: com.jcraft.jsch.Proxy proxy
com.jcraft.jsch.Identity
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_custom_big
com.google.android.exoplayer2.ui.PlayerControlView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
com.dexterous.flutterlocalnotifications.BitmapSource
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
com.jcraft.jsch.jce.TripleDESCTR: void update(byte[],int,int,byte[],int)
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpATTRS _lstat(java.lang.String)
io.flutter.embedding.android.FlutterView: void convertToImageView()
com.jcraft.jsch.KnownHosts$HashedHostKey
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.Channel$MyPipedInputStream: int freeSpace()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.jcraft.jsch.IdentityFile: boolean decrypt()
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
com.jcraft.jsch.Channel: boolean close
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
io.flutter.plugins.sharedpreferences.R$color: int secondary_text_default_material_light
com.jcraft.jsch.Session: byte[] Ec2s
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.embedding.android.FlutterFragment: void onFlutterUiDisplayed()
com.jcraft.jsch.ChannelSession: void setPtyType(java.lang.String,int,int,int,int)
com.jcraft.jsch.ProxyHTTP: java.net.Socket getSocket()
com.jcraft.jsch.KeyPair$ASN1
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_3
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
com.jcraft.jsch.Compression: int DEFLATER
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.jcraft.jsch.jce.AES256CTR: int bsize
com.jcraft.jsch.ProxySOCKS4
com.jcraft.jsch.Session$GlobalRequestReply: Session$GlobalRequestReply(com.jcraft.jsch.Session,com.jcraft.jsch.Session$1)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.app.FlutterActivity: java.lang.Object valuePublishedByPlugin(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
io.flutter.plugins.sharedpreferences.R$dimen: int notification_right_side_padding_top
com.jcraft.jsch.ChannelSftp: void sendOPEN(byte[],int)
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
androidx.work.impl.background.systemalarm.SystemAlarmService
io.flutter.view.FlutterView: void resetAccessibilityTree()
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
com.jcraft.jsch.KeyExchange: java.lang.String kex
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeView(java.lang.Object[])
io.flutter.embedding.android.DrawableSplashScreen$1: java.lang.Runnable val$onTransitionComplete
com.journeyapps.barcodescanner.ViewfinderView
io.flutter.embedding.android.FlutterFragment: void onDestroyView()
com.jcraft.jsch.ChannelForwardedTCPIP: com.jcraft.jsch.ChannelForwardedTCPIP$Config config
io.flutter.embedding.engine.dart.DartExecutor: void executeDartCallback(io.flutter.embedding.engine.dart.DartExecutor$DartCallback)
io.flutter.view.AccessibilityBridge: java.lang.String TAG
com.jcraft.jsch.JSch: com.jcraft.jsch.Session getSession(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.jcraft.jsch.Channel: int connectTimeout
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor start()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
io.flutter.plugins.urllauncher.WebViewActivity$1: io.flutter.plugins.urllauncher.WebViewActivity this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
com.jcraft.jsch.ChannelSession: void setAgentForwarding(boolean)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String FLUTTER_ASSETS_DIR_KEY
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.jcraft.jsch.Channel$PassiveOutputStream: Channel$PassiveOutputStream(com.jcraft.jsch.Channel,java.io.PipedInputStream,boolean)
com.jcraft.jsch.jce.MD5: void init()
com.jcraft.jsch.RequestPtyReq: RequestPtyReq()
androidx.appcompat.widget.DialogTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
io.flutter.plugins.urllauncher.R$drawable: int notification_template_icon_bg
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
com.jcraft.jsch.Request: com.jcraft.jsch.Session session
io.flutter.plugins.pathprovider.R$integer: R$integer()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service getService()
com.jcraft.jsch.Util$1: java.lang.String val$_host
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
com.jcraft.jsch.jce.HMACMD5: int getBlockSize()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: void run()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_22
io.flutter.plugin.common.PluginRegistry$Registrar: android.app.Activity activity()
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenTransitionNeededNow()
io.flutter.view.FlutterView: void releaseAccessibilityNodeProvider()
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController$1$1: PlatformViewsController$1$1(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,java.lang.Runnable)
com.jcraft.jsch.Session: java.lang.String host
com.google.android.exoplayer2.ui.StyledPlayerView: android.graphics.drawable.Drawable getDefaultArtwork()
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerView: void setUseController(boolean)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] p
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.concurrent.ExecutorService executor
org.threeten.bp.LocalDate: java.lang.Object writeReplace()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
com.jcraft.jsch.jce.DH: byte[] getE()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
com.jcraft.jsch.ChannelSftp: int access$800(com.jcraft.jsch.ChannelSftp)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
com.jcraft.jsch.SftpATTRS: boolean isChr()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.jcraft.jsch.ChannelSftp: void get(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)
com.google.android.exoplayer2.ui.PlayerView: void setControllerVisibilityListener(com.google.android.exoplayer2.ui.PlayerControlView$VisibilityListener)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationStart(android.animation.Animator)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.jcraft.jsch.JSchPartialAuthException: JSchPartialAuthException()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_13
io.flutter.plugins.sharedpreferences.R$attr: int fontVariationSettings
io.flutter.plugins.urllauncher.R$id: int time
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[])
com.jcraft.jsch.DHECN: byte[] V_S
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetLeft
com.jcraft.jsch.ChannelSftp: int APPEND
com.jcraft.jsch.DHGEX: int SSH_MSG_KEX_DH_GEX_REPLY
com.jcraft.jsch.ChannelForwardedTCPIP$ConfigDaemon: java.lang.Object[] arg
com.jcraft.jsch.Session: com.jcraft.jsch.Buffer buf
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerHideDuringAds(boolean)
io.flutter.embedding.engine.systemchannels.LifecycleChannel
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
com.jcraft.jsch.Session: void setX11Host(java.lang.String)
io.flutter.app.FlutterActivityDelegate: boolean onBackPressed()
com.journeyapps.barcodescanner.BarcodeView
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
io.flutter.embedding.android.FlutterSplashView$1: io.flutter.embedding.android.FlutterSplashView this$0
com.jcraft.jsch.UserAuth
io.flutter.view.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mMouseCursorPlugin
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
io.flutter.embedding.android.FlutterTextureView: void pause()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
com.jcraft.jsch.KeyExchange: byte[] getHostKey()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides LEFT
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
io.flutter.plugins.sharedpreferences.R$id: int right_icon
com.jcraft.jsch.ChannelSftp: void cd(java.lang.String)
com.jcraft.jsch.DHG1: boolean next(com.jcraft.jsch.Buffer)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
com.jcraft.jsch.DH: byte[] getK()
io.flutter.view.FlutterView$3: FlutterView$3(io.flutter.view.FlutterView,io.flutter.plugin.platform.PlatformPlugin)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
io.flutter.plugins.pathprovider.R$dimen: int notification_media_narrow_margin
io.flutter.plugin.platform.PlatformViewsController: void access$1200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.plugins.urllauncher.R$id: int accessibility_action_clickable_span
io.flutter.embedding.engine.plugins.PluginRegistry: void add(java.util.Set)
com.jcraft.jsch.SftpStatVFS: long getINodes()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] d
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
com.jcraft.jsch.HostKey: int ECDSA521
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
io.flutter.embedding.android.AndroidKeyProcessor: io.flutter.embedding.android.AndroidKeyProcessor$EventResponder eventResponder
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
com.jcraft.jsch.KnownHosts$HashedHostKey: boolean hashed
com.jcraft.jsch.KeyPairRSA: byte[] end
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
io.flutter.view.VsyncWaiter: android.view.WindowManager windowManager
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
io.flutter.plugins.urllauncher.WebViewActivity: java.util.Map extractHeaders(android.os.Bundle)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_action_text_size
androidx.fragment.app.Fragment: void onLowMemory()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.jcraft.jsch.KnownHosts$HashedHostKey: byte[] salt
com.jcraft.jsch.KeyPairECDSA: void dispose()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.FlutterView$1: io.flutter.view.FlutterView this$0
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
io.flutter.app.FlutterActivityDelegate: java.lang.Boolean showSplashScreenUntilFirstFrame()
androidx.fragment.app.FragmentActivity: java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
io.flutter.embedding.engine.FlutterEngineGroup$1: FlutterEngineGroup$1(io.flutter.embedding.engine.FlutterEngineGroup,io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.ChannelSftp: void setStat(java.lang.String,com.jcraft.jsch.SftpATTRS)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.flutter.plugins.sharedpreferences.R$drawable: int notification_action_background
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
com.jcraft.jsch.KeyPairRSA: byte[] ep_array
com.google.android.exoplayer2.ui.StyledPlayerView: void setVisibility(int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
com.jcraft.jsch.SftpStatVFS: long getAvail()
com.jcraft.jsch.jce.ECDH256: void init()
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser[] values()
com.google.android.exoplayer2.ui.PlayerControlView: int getRepeatToggleModes()
com.jcraft.jsch.DHG1: int SSH_MSG_KEXDH_INIT
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
com.jcraft.jsch.Channel: void sendOpenFailure(int)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
com.google.android.exoplayer2.ui.PlayerView: void setUseSensorRotation(boolean)
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
com.jcraft.jsch.KeyPair: byte[] getPublicKeyBlob()
com.jcraft.jsch.KeyPairRSA: int getKeyType()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
com.jcraft.jsch.KnownHosts$HashedHostKey: byte[] hash
com.jcraft.jsch.ProxySOCKS5: int DEFAULTPORT
com.jcraft.jsch.jcraft.HMACMD596
android.support.v4.graphics.drawable.IconCompatParcelizer
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugins.sharedpreferences.R$layout: int notification_action
com.jcraft.jsch.Session: void run()
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.view.TextureRegistry textures()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
com.jcraft.jsch.Session: void setIdentityRepository(com.jcraft.jsch.IdentityRepository)
com.jcraft.jsch.ChannelSftp: int SSH_FX_CONNECTION_LOST
com.jcraft.jsch.ProxySOCKS4: int proxy_port
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface
com.jcraft.jsch.ChannelSftp: java.util.Vector ls(java.lang.String)
com.jcraft.jsch.GSSContext: void dispose()
io.flutter.embedding.android.FlutterFragmentActivity: void onNewIntent(android.content.Intent)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
io.flutter.plugins.urllauncher.R$id: int info
io.flutter.plugins.sharedpreferences.R$id: int text2
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivity()
com.jcraft.jsch.ChannelShell: void setPty(boolean)
androidx.activity.ComponentActivity: ComponentActivity(int)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder appBundlePath(java.lang.String)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.fragment.app.Fragment: boolean mPerformedCreateView
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
com.jcraft.jsch.jce.SignatureECDSA: void setPrvKey(byte[])
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiNoLongerDisplayed()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
org.threeten.bp.LocalTime: java.lang.Object writeReplace()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
io.flutter.plugins.urllauncher.WebViewActivity$1: WebViewActivity$1(io.flutter.plugins.urllauncher.WebViewActivity)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getDartEntrypointFunctionName()
com.jcraft.jsch.Session: void _write(com.jcraft.jsch.Packet)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
io.flutter.view.FlutterView: android.graphics.Bitmap getBitmap()
com.jcraft.jsch.ChannelSftp: int LOCAL_MAXIMUM_PACKET_SIZE
com.jcraft.jsch.UserInfo: boolean promptYesNo(java.lang.String)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
io.flutter.plugins.sharedpreferences.R$id: int notification_background
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
io.flutter.plugin.editing.ListenableEditingState: java.lang.String TAG
com.jcraft.jsch.ProxyHTTP: ProxyHTTP(java.lang.String)
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)
com.jcraft.jsch.ChannelSftp: java.lang.String remoteAbsolutePath(java.lang.String)
io.flutter.plugins.urllauncher.R$dimen: int compat_button_inset_vertical_material
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
com.jcraft.jsch.ChannelSftp: void setCwd(java.lang.String)
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_SUCCESS
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object getHost()
com.jcraft.jsch.Buffer: int s
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
com.jcraft.jsch.DHG14: byte[] V_C
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.jcraft.jsch.DHG14: void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[])
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
com.jcraft.jsch.DHGEX: int SSH_MSG_KEX_DH_GEX_GROUP
io.flutter.plugins.urllauncher.R$dimen: int notification_main_column_padding_top
com.jcraft.jsch.jce.DH: java.math.BigInteger K
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.pathprovider.R$id: int tag_unhandled_key_listeners
com.google.android.exoplayer2.ui.PlayerView: void setVisibility(int)
io.flutter.app.FlutterPluginRegistry: void onUserLeaveHint()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
com.jcraft.jsch.jcraft.HMACMD596: int BSIZE
com.jcraft.jsch.Session: void addChannel(com.jcraft.jsch.Channel)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.jcraft.jsch.KeyExchange: int PROPOSAL_SERVER_HOST_KEY_ALGS
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
io.flutter.plugins.sharedpreferences.R$dimen
com.jcraft.jsch.Channel: void setInputStream(java.io.InputStream,boolean)
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
com.jcraft.jsch.KeyExchange: int PROPOSAL_COMP_ALGS_CTOS
com.jcraft.jsch.ChannelSftp$LsEntry: void setAttrs(com.jcraft.jsch.SftpATTRS)
io.flutter.view.FlutterView: float getDevicePixelRatio()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.jcraft.jsch.jce.SignatureRSA: java.security.KeyFactory keyFactory
io.flutter.embedding.android.FlutterFragment: boolean shouldDestroyEngineWithHost()
io.flutter.embedding.android.FlutterView$RenderMode: io.flutter.embedding.android.FlutterView$RenderMode image
io.flutter.embedding.android.FlutterFragment: java.lang.String getDartEntrypointFunctionName()
org.threeten.bp.chrono.HijrahDate
com.jcraft.jsch.ChannelShell: void setPtyType(java.lang.String)
com.jcraft.jsch.jcraft.HMACMD5: HMACMD5()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
com.jcraft.jsch.OpenSSHConfig: com.jcraft.jsch.ConfigRepository$Config getConfig(java.lang.String)
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
com.jcraft.jsch.LocalIdentityRepository: com.jcraft.jsch.JSch jsch
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup
io.flutter.view.FlutterView$ViewportMetrics: float devicePixelRatio
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
io.flutter.plugins.sharedpreferences.R$attr
io.flutter.embedding.android.FlutterSplashView$3
com.jcraft.jsch.ChannelSftp: void sendSTAT(byte[])
com.jcraft.jsch.ChannelSftp: int fill(byte[],int,int)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
com.jcraft.jsch.KnownHosts: com.jcraft.jsch.HostKey[] getHostKey(java.lang.String,java.lang.String)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.jcraft.jsch.KeyPairGenECDSA: byte[] getR()
io.flutter.app.FlutterActivity: io.flutter.plugin.common.PluginRegistry pluginRegistry
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.jcraft.jsch.KeyPairRSA: void generate(int)
com.jcraft.jsch.ChannelExec: void setCommand(byte[])
io.flutter.app.FlutterPluginRegistry: java.util.Map access$500(io.flutter.app.FlutterPluginRegistry)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
io.flutter.BuildConfig: boolean DEBUG
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TEXT_SCALE_FACTOR
com.jcraft.jsch.SftpATTRS: void setSIZE(long)
androidx.fragment.app.Fragment: void initState()
io.flutter.plugin.common.MethodCodec
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
com.jcraft.jsch.ProxyHTTP: int DEFAULTPORT
com.jcraft.jsch.Channel$MyPipedInputStream: com.jcraft.jsch.Channel this$0
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
io.flutter.app.FlutterActivityDelegate$1$1: FlutterActivityDelegate$1$1(io.flutter.app.FlutterActivityDelegate$1)
io.flutter.view.FlutterNativeView: FlutterNativeView(android.content.Context)
com.jcraft.jsch.jce.KeyPairGenDSA: void init(int)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
org.threeten.bp.chrono.JapaneseEra: java.lang.Object readResolve()
com.jcraft.jsch.SftpStatVFS: int gid
com.jcraft.jsch.ChannelSftp$2: com.jcraft.jsch.ChannelSftp$Header header
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: java.lang.String lookupKeyForAsset(java.lang.String,java.lang.String)
com.jcraft.jsch.SftpATTRS: int S_IFIFO
io.flutter.app.FlutterFragmentActivity: FlutterFragmentActivity()
io.flutter.embedding.engine.dart.DartMessenger: int getPendingChannelResponseCount()
com.jcraft.jsch.ChannelSftp: java.io.InputStream io_in
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
com.jcraft.jsch.Signature: void update(byte[])
com.jcraft.jsch.Random: void fill(byte[],int,int)
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.jcraft.jsch.KeyPairGenECDSA
com.jcraft.jsch.jce.ECDHN: byte[] toPoint(byte[],byte[])
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
com.jcraft.jsch.SftpATTRS: int S_IWRITE
com.jcraft.jsch.ChannelSftp: boolean isPattern(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int[] GradientColor
com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,int)
io.flutter.plugin.editing.InputConnectionAdaptor
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Object doInBackground(java.lang.Object[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
io.flutter.plugins.pathprovider.R$id: int notification_main_column_container
com.jcraft.jsch.KeyPairPKCS8: int getKeyType()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
io.flutter.embedding.android.FlutterFragmentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.pathprovider.R$dimen: int notification_content_margin_start
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
io.flutter.view.VsyncWaiter: VsyncWaiter(android.view.WindowManager)
com.jcraft.jsch.ChannelSftp: void sendREAD(byte[],long,int,com.jcraft.jsch.ChannelSftp$RequestQueue)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
io.flutter.plugin.common.MethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.flutter.plugin.common.StandardMessageCodec: byte MAP
com.jcraft.jsch.KnownHosts: com.jcraft.jsch.MAC getHMACSHA1()
io.flutter.embedding.engine.FlutterEngine: void registerPlugins()
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType valueOf(java.lang.String)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void stopListening()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.jcraft.jsch.jce.HMACMD5: void update(byte[],int,int)
com.jcraft.jsch.Channel: void del(com.jcraft.jsch.Channel)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
org.threeten.bp.zone.ZoneOffsetTransitionRule
com.google.android.exoplayer2.ui.PlayerView: boolean getUseArtwork()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
io.flutter.embedding.android.FlutterView$TransparencyMode: io.flutter.embedding.android.FlutterView$TransparencyMode[] values()
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_TRANSPARENCY_MODE
io.flutter.plugins.pathprovider.R$dimen: int notification_top_pad_large_text
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
io.flutter.app.FlutterPluginRegistry: boolean hasPlugin(java.lang.String)
io.flutter.view.FlutterRunArguments: java.lang.String bundlePath
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.google.android.exoplayer2.ui.SubtitleView: float getUserCaptionFontScale()
io.flutter.plugin.platform.VirtualDisplayController: android.view.Surface surface
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.engine.FlutterShellArgs shellArgs
io.flutter.plugins.sharedpreferences.R: R()
com.jcraft.jsch.Channel$1
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] chop0(byte[])
io.flutter.plugins.sharedpreferences.R$id: int line1
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String TAG
io.flutter.view.FlutterMain$Settings: void setLogTag(java.lang.String)
io.flutter.embedding.android.FlutterFragment: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
com.jcraft.jsch.Session: int SSH_MSG_KEXINIT
io.flutter.plugins.urllauncher.R$styleable: int[] GradientColorItem
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
com.jcraft.jsch.ChannelX11: int port
io.flutter.plugin.platform.PlatformPlugin: java.lang.String TAG
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
io.flutter.embedding.engine.dart.DartMessenger$Reply
com.jcraft.jsch.jcraft.HMACMD5: void init(byte[])
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.plugins.pathprovider.R$color: int ripple_material_light
io.flutter.app.FlutterPluginRegistry: java.util.List access$600(io.flutter.app.FlutterPluginRegistry)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_VM_SNAPSHOT_DATA
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.loader.FlutterLoader$2: java.lang.String[] val$args
io.flutter.plugin.common.MethodChannel
io.flutter.plugins.pathprovider.R$id: int normal
com.jcraft.jsch.HostKeyRepository: com.jcraft.jsch.HostKey[] getHostKey()
androidx.core.app.CoreComponentFactory
com.google.android.exoplayer2.ui.PlayerControlView: void setVrButtonListener(android.view.View$OnClickListener)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
com.jcraft.jsch.jce.KeyPairGenECDSA: KeyPairGenECDSA()
io.flutter.plugins.pathprovider.R$style
com.jcraft.jsch.PortWatcher: java.net.ServerSocket ss
com.jcraft.jsch.jcraft.HMACSHA196: void doFinal(byte[],int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onLowMemory()
io.flutter.plugins.sharedpreferences.R$attr: R$attr()
io.flutter.app.FlutterPluginRegistry: FlutterPluginRegistry(io.flutter.embedding.engine.FlutterEngine,android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
com.jcraft.jsch.ChannelSftp: void setEnv(java.lang.String,java.lang.String)
com.jcraft.jsch.jce.TripleDESCTR: javax.crypto.Cipher cipher
com.jcraft.jsch.DHG14: byte[] I_C
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] getD()
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float)
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_4
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mPackageName
com.jcraft.jsch.KeyPair: void writePublicKey(java.lang.String,java.lang.String)
com.jcraft.jsch.SftpATTRS: int S_IFCHR
com.jcraft.jsch.Session: long kex_start_time
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowTimeoutMs(int)
com.jcraft.jsch.Util$1: java.lang.Exception[] val$ee
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.BarcodeView getBarcodeView()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.HostKey: byte[][] names
com.jcraft.jsch.jce.DH: byte[] K_array
io.flutter.Log: void wtf(java.lang.String,java.lang.String)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void detachAccessibiltyBridge()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.app.FlutterActivityDelegate$1: FlutterActivityDelegate$1(io.flutter.app.FlutterActivityDelegate)
io.flutter.embedding.android.DrawableSplashScreen$1: DrawableSplashScreen$1(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable)
com.jcraft.jsch.jgss.GSSContextKrb5: byte[] init(byte[],int,int)
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
com.jcraft.jsch.KeyPairECDSA: int getKeyType()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.jcraft.jsch.UserAuth: int SSH_MSG_USERAUTH_INFO_REQUEST
io.flutter.plugins.urllauncher.R$id: R$id()
com.jcraft.jsch.DH: void setG(byte[])
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.view.FlutterNativeView: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
com.jcraft.jsch.jce.ARCFOUR256: int getBlockSize()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.jcraft.jsch.ChannelSftp: void sendPacketPath(byte,byte[],byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
com.jcraft.jsch.jce.HMAC: void init(byte[])
io.flutter.plugin.common.BasicMessageChannel$MessageHandler: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void clearFocus(int)
io.flutter.embedding.engine.systemchannels.SystemChannel
io.flutter.plugins.pathprovider.R$drawable
com.jcraft.jsch.IdentityFile: com.jcraft.jsch.KeyPair kpair
io.flutter.plugins.urllauncher.R$id: int action_divider
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterView mFlutterView
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_USE_TEST_FONTS
com.jcraft.jsch.HostKey: int type
com.jcraft.jsch.ChannelSftp: int MAX_MSG_LENGTH
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
com.jcraft.jsch.Session$GlobalRequestReply: java.lang.Thread thread
io.flutter.plugin.platform.PlatformViewsController: android.view.View access$900(io.flutter.plugin.platform.PlatformViewsController)
com.jcraft.jsch.Session: java.lang.Thread connectThread
com.jcraft.jsch.ProxySOCKS5: void fill(java.io.InputStream,byte[],int)
com.google.android.exoplayer2.ui.PlayerView: android.widget.FrameLayout getOverlayFrameLayout()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void endOfStream()
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.pathprovider.R$string: R$string()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
io.flutter.app.FlutterFragmentActivity: io.flutter.app.FlutterActivityDelegate delegate
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.jcraft.jsch.ChannelSftp: java.lang.String fEncoding
com.jcraft.jsch.ChannelSftp: void sendRENAME(byte[],byte[])
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set requestPermissionsResultListeners
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] getG()
com.jcraft.jsch.HostKey: int GUESS
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToPlatformView
com.jcraft.jsch.PortWatcher: int lport
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
io.flutter.embedding.android.FlutterSplashView$3: io.flutter.embedding.android.FlutterSplashView this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
com.jcraft.jsch.KeyPairDSA: byte[] G_array
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String)
io.flutter.plugins.pathprovider.R$drawable: int notification_icon_background
com.jcraft.jsch.Channel$PassiveOutputStream: void write(byte[],int,int)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraInstance getCameraInstance()
com.jcraft.jsch.KeyPairGenRSA
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
com.jcraft.jsch.Session: void setPortForwardingR(java.lang.String,int,java.lang.String,int,com.jcraft.jsch.SocketFactory)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel getKeyEventChannel()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityPluginBinding
com.google.android.exoplayer2.ui.PlayerView: void setKeepContentOnPlayerReset(boolean)
com.jcraft.jsch.jce.AES192CTR: void update(byte[],int,int,byte[],int)
io.flutter.embedding.android.FlutterSurfaceView
com.jcraft.jsch.KnownHosts: byte[] cr
com.jcraft.jsch.ChannelSftp: int client_version
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler eventResponseHandler
com.jcraft.jsch.ChannelSession: java.util.Hashtable env
io.flutter.plugin.common.StandardMethodCodec
com.jcraft.jsch.ChannelSubsystem: void setErrStream(java.io.OutputStream)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.jcraft.jsch.ChannelSftp$2: void close()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.flutter.plugins.sharedpreferences.R$attr: int ttcIndex
com.jcraft.jsch.LocalIdentityRepository: java.util.Vector identities
io.flutter.plugins.pathprovider.R: R()
com.jcraft.jsch.DHECN: com.jcraft.jsch.Buffer buf
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
com.jcraft.jsch.ChannelSftp: void sendSYMLINK(byte[],byte[])
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
com.jcraft.jsch.ChannelSftp: int access$000(com.jcraft.jsch.ChannelSftp)
androidx.fragment.app.Fragment: void performDestroyView()
io.flutter.view.FlutterNativeView: void assertAttached()
com.jcraft.jsch.ChannelSession: void setTerminalMode(byte[])
io.flutter.plugins.pathprovider.PathProviderPlugin: io.flutter.plugin.common.MethodChannel channel
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.Compression: void init(int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderStorageDirectory()
io.flutter.plugins.pathprovider.PathProviderPlugin$1
com.jcraft.jsch.Channel: void sendSignal(java.lang.String)
androidx.work.OverwritingInputMerger
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenNeededNow()
com.jcraft.jsch.Session: com.jcraft.jsch.HostKeyRepository getHostKeyRepository()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
io.flutter.plugins.pathprovider.R$dimen: int notification_big_circle_margin
io.flutter.embedding.android.FlutterSurfaceView$2
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.jcraft.jsch.RequestSubsystem
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
com.jcraft.jsch.ChannelSftp$2: int request_max
io.flutter.plugins.pathprovider.R$attr: int fontWeight
com.jcraft.jsch.jce.SignatureECDSA: byte[] sign()
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String,io.flutter.embedding.android.FlutterFragment$1)
com.jcraft.jsch.ProxyHTTP: java.lang.String user
com.jcraft.jsch.HASH: int getBlockSize()
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
io.flutter.plugins.urllauncher.WebViewActivity: android.content.BroadcastReceiver broadcastReceiver
io.flutter.app.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.view.FlutterMain: void ensureInitializationComplete(android.content.Context,java.lang.String[])
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_part_time
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_25
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
com.jcraft.jsch.LocalIdentityRepository: LocalIdentityRepository(com.jcraft.jsch.JSch)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerOnFullScreenModeChangedListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$OnFullScreenModeChangedListener)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean handleDeeplinking
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.flutter.app.FlutterActivityDelegate: io.flutter.view.FlutterView flutterView
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_17
io.flutter.embedding.android.RenderMode
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
com.jcraft.jsch.ChannelDirectTCPIP: byte[] _type
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] q
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE_ARRAY
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getValueLabelHint()
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_type
com.jcraft.jsch.UserAuthPublicKey: boolean start(com.jcraft.jsch.Session)
io.flutter.app.FlutterActivityDelegate: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] $VALUES
androidx.fragment.app.Fragment: void performAttach()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.app.FlutterFragmentActivity: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader$2: android.os.Handler val$callbackHandler
com.google.android.exoplayer2.ui.PlayerControlView: int getShowTimeoutMs()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatImageButton
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
io.flutter.app.FlutterFragmentActivity: boolean hasPlugin(java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationRepeat(android.animation.Animator)
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,byte[])
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.jcraft.jsch.DHGEX256
com.google.android.exoplayer2.ui.PlayerView: void setPlayer(com.google.android.exoplayer2.Player)
io.flutter.plugins.pathprovider.R$layout: R$layout()
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.view.TextureRegistry textures()
io.flutter.plugin.platform.SingleViewPresentation
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_VERBOSE_LOGGING
com.jcraft.jsch.jce.BlowfishCBC: void init(int,byte[],byte[])
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_heading
androidx.fragment.app.Fragment: int mBackStackNesting
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
io.flutter.plugins.pathprovider.R$id: int action_image
com.jcraft.jsch.ChannelForwardedTCPIP$ConfigLHost: com.jcraft.jsch.SocketFactory factory
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
io.flutter.app.FlutterPluginRegistry: java.lang.Object valuePublishedByPlugin(java.lang.String)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
com.jcraft.jsch.ChannelSftp: void sendRMDIR(byte[])
io.flutter.app.FlutterActivityDelegate: void onTrimMemory(int)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: DartExecutor$DartCallback(android.content.res.AssetManager,java.lang.String,io.flutter.view.FlutterCallbackInformation)
com.jcraft.jsch.KeyPairDSA: int getKeySize()
com.jcraft.jsch.Channel$PassiveOutputStream: com.jcraft.jsch.Channel this$0
io.flutter.app.FlutterFragmentActivity: void onBackPressed()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.plugin.platform.PlatformViewsController$1$1: io.flutter.plugin.platform.VirtualDisplayController val$vdController
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_20
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray access$100(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
com.jcraft.jsch.ChannelForwardedTCPIP: void setSocketFactory(com.jcraft.jsch.SocketFactory)
io.flutter.plugins.urllauncher.R$id
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
com.jcraft.jsch.SftpException: SftpException(int,java.lang.String,java.lang.Throwable)
com.jcraft.jsch.DH: byte[] getE()
com.jcraft.jsch.jce.HMAC
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] getP()
io.flutter.embedding.android.FlutterActivity: void onPostResume()
com.jcraft.jsch.KeyPair: byte[] getEnd()
io.flutter.embedding.engine.systemchannels.RestorationChannel$2
com.jcraft.jsch.SftpATTRS: int S_IWUSR
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
androidx.lifecycle.FullLifecycleObserverAdapter
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.plugins.urllauncher.R$dimen: int notification_action_icon_size
com.jcraft.jsch.ChannelX11: byte[] getFakedCookie(com.jcraft.jsch.Session)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
com.jcraft.jsch.DHG14: byte[] g
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener: void onIsolateServiceIdAvailable(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
com.jcraft.jsch.SftpATTRS: void setFLAGS(int)
com.jcraft.jsch.Buffer: int index
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String encodeList(java.util.List)
com.jcraft.jsch.ChannelSftp: java.lang.String pwd()
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.VirtualDisplayController$1$1
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.jcraft.jsch.KeyPairRSA: com.jcraft.jsch.Signature getVerifier()
io.flutter.plugins.pathprovider.R$drawable: int notify_panel_notification_icon_bg
com.jcraft.jsch.UserAuthNone: java.lang.String methods
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
io.flutter.app.FlutterFragmentActivity: void onStop()
com.jcraft.jsch.KeyExchange: java.lang.String getKeyAlgorithName()
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterView$Provider viewProvider
com.jcraft.jsch.ChannelSession: void sendRequests()
io.flutter.plugin.common.StandardMessageCodec: byte INT_ARRAY
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldDestroyEngineWithHost()
com.jcraft.jsch.jce.TripleDESCTR: int ivsize
com.jcraft.jsch.SftpATTRS: int atime
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.jcraft.jsch.Session: void delPortForwardingR(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_normal
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.embedding.android.FlutterSurfaceView: boolean isAttachedToFlutterRenderer
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.jcraft.jsch.Util: java.lang.String getFingerPrint(com.jcraft.jsch.HASH,byte[])
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
io.flutter.app.FlutterActivityEvents: void onNewIntent(android.content.Intent)
com.jcraft.jsch.DHGEX: java.lang.String hash
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
io.flutter.plugins.urllauncher.R$attr: int font
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_CLOSE
com.dexterous.flutterlocalnotifications.RepeatInterval
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
com.jcraft.jsch.KeyPair: com.jcraft.jsch.Random genRandom()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.flutter.plugins.urllauncher.R$styleable: int ColorStateListItem_android_color
com.jcraft.jsch.ChannelSftp$RequestQueue$Request: ChannelSftp$RequestQueue$Request(com.jcraft.jsch.ChannelSftp$RequestQueue)
com.jcraft.jsch.ChannelSftp: java.lang.String getHome()
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.app.FlutterActivityDelegate: boolean hasPlugin(java.lang.String)
io.flutter.app.FlutterPluginRegistry: java.util.List mActivityResultListeners
com.jcraft.jsch.Session: void setHostKeyRepository(com.jcraft.jsch.HostKeyRepository)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.plugins.urllauncher.R$color: int notification_icon_bg_color
io.flutter.view.FlutterRunArguments: java.lang.String libraryPath
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView access$100(io.flutter.view.FlutterView)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager
com.jcraft.jsch.KeyPair: com.jcraft.jsch.Signature getVerifier()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
io.flutter.plugins.pathprovider.R$layout: int notification_action_tombstone
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_startY
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle[] values()
com.jcraft.jsch.jce.TripleDESCBC: int getBlockSize()
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] p
io.flutter.embedding.engine.loader.FlutterLoader$2: android.content.Context val$applicationContext
androidx.work.impl.background.systemalarm.RescheduleReceiver
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.view.menu.ActionMenuItemView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.jcraft.jsch.LocalIdentityRepository: boolean add(byte[])
com.jcraft.jsch.Util: Util()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine spawn(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
com.jcraft.jsch.Session$GlobalRequestReply: int getReply()
com.jcraft.jsch.DHECN: byte[] V_C
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.pathprovider.R$styleable: int GradientColorItem_android_color
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.flutter.embedding.android.AndroidKeyProcessor: int combiningCharacter
io.flutter.util.PathUtils
io.flutter.plugins.urllauncher.R$styleable: R$styleable()
com.jcraft.jsch.KeyPair: int writeDATA(byte[],byte,int,byte[])
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
com.jcraft.jsch.Request: void write(com.jcraft.jsch.Packet)
com.jcraft.jsch.SignatureECDSA: void setPrvKey(byte[])
com.jcraft.jsch.KeyPair: void writeSECSHPublicKey(java.io.OutputStream,java.lang.String)
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
com.jcraft.jsch.Session: java.lang.Runnable thread
com.jcraft.jsch.ChannelAgentForwarding: int LOCAL_WINDOW_SIZE_MAX
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderApplicationDocumentsDirectory()
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.flutter.embedding.engine.FlutterOverlaySurface: int id
io.flutter.plugin.common.BinaryCodec
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
io.flutter.plugins.urllauncher.R$id: int tag_transition_group
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com.jcraft.jsch.Channel: void setLocalWindowSize(int)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView mNativeView
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_HANDLE_DEEPLINKING
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar publish(java.lang.Object)
io.flutter.embedding.android.FlutterFragment: java.lang.String getAppBundlePath()
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibiltyBridge()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
io.flutter.plugins.urllauncher.R$dimen: int notification_subtext_size
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_fontStyle
io.flutter.plugins.sharedpreferences.R$drawable: int notification_icon_background
io.flutter.view.FlutterMain$Settings: java.lang.String getLogTag()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
com.jcraft.jsch.jgss.GSSContextKrb5: boolean isEstablished()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.flutter.plugins.pathprovider.R$color: R$color()
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_FAILURE
com.jcraft.jsch.JSch: java.lang.String VERSION
com.jcraft.jsch.jce.SHA256: byte[] digest()
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_actions
io.flutter.embedding.engine.FlutterEngineGroup$1: void onEngineWillDestroy()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.plugins.pathprovider.R$dimen: int notification_small_icon_size_as_large
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initAndroidThreeTen(android.content.Context)
io.flutter.embedding.engine.loader.ResourceExtractor: ResourceExtractor(java.lang.String,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
io.flutter.plugins.urllauncher.R$drawable: int notification_tile_bg
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
com.jcraft.jsch.jce.SignatureDSA: boolean verify(byte[])
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
io.flutter.util.Preconditions: void checkState(boolean)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String LIST_IDENTIFIER
androidx.fragment.app.Fragment: android.content.Context getContext()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.jcraft.jsch.Session$GlobalRequestReply: int reply
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: FlutterSplashView$SavedState$1()
com.jcraft.jsch.jce.SHA384: java.security.MessageDigest md
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
com.jcraft.jsch.Session$Forwarding: java.lang.String bind_address
io.flutter.plugins.sharedpreferences.R$style: int Widget_Compat_NotificationActionContainer
android.support.v4.media.AudioAttributesImplBaseParcelizer
com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)
com.jcraft.jsch.RequestPtyReq: byte[] terminal_mode
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.embedding.android.FlutterImageView)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
com.cc_extractor.deluge_client.MainActivity
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.PlatformViewsController$1$1: io.flutter.plugin.platform.PlatformViewsController$1 this$1
io.flutter.app.FlutterActivityDelegate: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.view.FlutterView: FlutterView(android.content.Context)
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
com.jcraft.jsch.IdentityFile: void clear()
io.flutter.embedding.android.FlutterFragment: void detachFromFlutterEngine()
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_INIT
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
com.jcraft.jsch.ChannelSftp: void rmdir(java.lang.String)
io.flutter.embedding.android.FlutterFragment: void onDetach()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
com.jcraft.jsch.KeyPairDSA: com.jcraft.jsch.KeyPair fromSSHAgent(com.jcraft.jsch.JSch,com.jcraft.jsch.Buffer)
org.threeten.bp.zone.StandardZoneRules: java.lang.Object writeReplace()
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.jcraft.jsch.OpenSSHConfig: com.jcraft.jsch.OpenSSHConfig parseFile(java.lang.String)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_1
io.flutter.plugins.pathprovider.R$integer
com.jcraft.jsch.UserAuth: int SSH_MSG_USERAUTH_INFO_RESPONSE
com.jcraft.jsch.RequestWindowChange: int height_pixels
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
io.flutter.plugins.urllauncher.R$id: int icon_group
io.flutter.plugins.urllauncher.R$attr: int fontProviderFetchTimeout
com.jcraft.jsch.ChannelSftp: void sendSTATVFS(byte[])
com.jcraft.jsch.DHGEX: byte[] g
com.jcraft.jsch.Identity: byte[] getSignature(byte[])
com.jcraft.jsch.jce.TripleDESCTR: int getIVSize()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object writeReplace()
com.jcraft.jsch.RequestWindowChange: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
io.flutter.view.FlutterView: io.flutter.plugin.editing.TextInputPlugin mTextInputPlugin
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
com.jcraft.jsch.ChannelSftp$1: int ackcount
androidx.fragment.app.Fragment: void callStartTransitionListener()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.jcraft.jsch.Channel: void disconnect()
com.jcraft.jsch.UserInfo
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.HostKeyRepository
io.flutter.embedding.android.AndroidKeyProcessor: java.lang.String TAG
com.jcraft.jsch.Session: byte[] K_S
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.urllauncher.WebViewActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.jcraft.jsch.jce.SignatureDSA: byte[] sign()
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
androidx.media.AudioAttributesImpl
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.flutter.plugins.urllauncher.R$styleable: int ColorStateListItem_alpha
com.jcraft.jsch.jce.ECDH256
com.jcraft.jsch.ForwardedTCPIPDaemon: void setArg(java.lang.Object[])
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.Session: com.jcraft.jsch.Session$Forwarding parseForwarding(java.lang.String)
com.jcraft.jsch.DHG14: byte[] V_S
com.jcraft.jsch.Request: Request()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.jcraft.jsch.ProxySOCKS4: java.lang.String user
com.jcraft.jsch.jce.HMAC: java.lang.String name
com.jcraft.jsch.Session: com.jcraft.jsch.MAC s2cmac
io.flutter.plugins.pathprovider.R$dimen: int notification_action_text_size
com.jcraft.jsch.JSch: java.util.Hashtable config
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3902(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
androidx.fragment.app.Fragment: int mFragmentId
com.jcraft.jsch.ProxySOCKS4: ProxySOCKS4(java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.jcraft.jsch.ChannelSftp$RequestQueue
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void access$000(io.flutter.embedding.android.AndroidKeyProcessor$EventResponder,android.view.KeyEvent)
io.flutter.plugins.sharedpreferences.R$id: int chronometer
com.google.android.exoplayer2.ui.PlayerControlView: boolean getShowVrButton()
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_11
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.flutter.plugin.platform.PlatformViewsController: java.lang.String TAG
com.jcraft.jsch.jce.AES128CBC: boolean isCBC()
com.jcraft.jsch.jce.SignatureRSA
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
com.jcraft.jsch.ChannelSubsystem: void setEnv(byte[],byte[])
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.jcraft.jsch.Session: byte[] MACc2s
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
com.jcraft.jsch.KeyPair: int vendor
org.threeten.bp.chrono.ChronoLocalDateTimeImpl
com.jcraft.jsch.JSch$1
io.flutter.plugins.urllauncher.UrlLauncherPlugin: java.lang.String TAG
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
io.flutter.app.FlutterPlayStoreSplitApplication: void onCreate()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_25
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$2
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromActivity()
com.jcraft.jsch.ChannelSftp: java.io.InputStream get(java.lang.String,com.jcraft.jsch.SftpProgressMonitor)
androidx.work.ListenableWorker
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding
com.jcraft.jsch.Channel$1: byte[] b
io.flutter.embedding.android.FlutterView$TransparencyMode: io.flutter.embedding.android.FlutterView$TransparencyMode transparent
io.flutter.plugin.platform.PlatformViewsController$1$1: void run()
io.flutter.plugin.editing.TextInputPlugin$2
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate: boolean popSystemNavigator()
androidx.fragment.app.Fragment: java.lang.String getString(int)
com.jcraft.jsch.KeyPair$ASN1: byte[] buf
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_22
com.jcraft.jsch.UserAuthKeyboardInteractive
com.jcraft.jsch.KeyPair: java.lang.String publicKeyComment
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
io.flutter.view.AccessibilityBridge$2
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.jcraft.jsch.ChannelShell: void init()
com.jcraft.jsch.jce.DH: java.math.BigInteger f
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
com.jcraft.jsch.Channel: java.io.InputStream getInputStream()
com.jcraft.jsch.ConfigRepository$2: ConfigRepository$2()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: int atMost(int)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
com.jcraft.jsch.ChannelSftp$RequestQueue: int count()
io.flutter.Log: int WARN
com.jcraft.jsch.DHGEX: byte[] p
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
com.google.android.exoplayer2.ui.PlayerControlView: void setShowRewindButton(boolean)
com.jcraft.jsch.jce.SignatureECDSA
io.flutter.plugin.platform.PlatformViewsController$1: void disposeAndroidViewForPlatformView(int)
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
io.flutter.plugin.common.BinaryMessenger$BinaryReply: void reply(java.nio.ByteBuffer)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderCerts
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void destroy()
com.jcraft.jsch.ChannelForwardedTCPIP: void delPort(com.jcraft.jsch.Session,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.jcraft.jsch.ChannelSubsystem: void setXForwarding(boolean)
io.flutter.embedding.android.FlutterFragment: FlutterFragment()
com.jcraft.jsch.ChannelSubsystem: void setEnv(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_14
com.jcraft.jsch.jce.ECDHN: byte[] chop0(byte[])
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_tileMode
com.jcraft.jsch.jcraft.HMACSHA1: java.lang.String name
com.jcraft.jsch.IdentityRepository$Wrapper
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.jcraft.jsch.ServerSocketFactory: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder(java.lang.Class)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
io.flutter.plugin.platform.VirtualDisplayController$1
com.jcraft.jsch.ChannelSftp: java.lang.String cwd
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
io.flutter.plugins.urllauncher.R$color: int notification_action_color_filter
com.jcraft.jsch.jce.SignatureDSA: java.security.Signature signature
com.jcraft.jsch.KeyPairDSA: com.jcraft.jsch.Signature getVerifier()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.PortWatcher: com.jcraft.jsch.Session session
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.jcraft.jsch.RequestShell
com.jcraft.jsch.Channel: int SSH_MSG_CHANNEL_OPEN_FAILURE
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String TAG
androidx.appcompat.app.AlertDialog$Builder
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
com.jcraft.jsch.KeyPair: void generate(int)
com.jcraft.jsch.UserAuthNone
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
io.flutter.plugins.urllauncher.R$dimen: int notification_media_narrow_margin
com.jcraft.jsch.LocalIdentityRepository: void removeAll()
io.flutter.plugins.pathprovider.R$id: int forever
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] eq
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.jcraft.jsch.SftpATTRS: boolean isBlk()
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.jcraft.jsch.ChannelSftp: void setMtime(java.lang.String,int)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification
io.flutter.plugins.pathprovider.R$id: int icon
androidx.appcompat.app.AppCompatActivity
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.app.FlutterActivityDelegate: android.view.View createLaunchView()
com.jcraft.jsch.LocalIdentityRepository: java.lang.String name
io.flutter.embedding.engine.plugins.PluginRegistry: boolean has(java.lang.Class)
com.jcraft.jsch.PortWatcher: int connectTimeout
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_ENABLE_STATE_RESTORATION
com.google.android.exoplayer2.ui.SubtitleView
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.jcraft.jsch.ChannelSftp$2: ChannelSftp$2(com.jcraft.jsch.ChannelSftp,long,com.jcraft.jsch.SftpProgressMonitor,byte[])
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.jcraft.jsch.ChannelSftp$1: long[] val$_offset
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
com.jcraft.jsch.PortWatcher: java.net.InetAddress anyLocalAddress
com.jcraft.jsch.ChannelForwardedTCPIP: void run()
com.jcraft.jsch.jce.ARCFOUR256: ARCFOUR256()
com.jcraft.jsch.RequestShell: RequestShell()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_fontWeight
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1400(io.flutter.plugin.platform.PlatformViewsController)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setupFlutterEngine()
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.jcraft.jsch.Util: java.lang.String byte2str(byte[])
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.BitmapSource largeIconBitmapSource
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: boolean extractAPK(java.io.File)
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] y
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] q
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getUseController()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DART_ENTRYPOINT_META_DATA_KEY
com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)
com.jcraft.jsch.IdentityRepository$Wrapper: java.util.Vector getIdentities()
com.jcraft.jsch.Buffer: byte[] getString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
com.jcraft.jsch.KeyPairDSA: byte[] getPrivateKey()
com.jcraft.jsch.SftpATTRS: int SSH_FILEXFER_ATTR_PERMISSIONS
io.flutter.plugin.platform.PlatformViewsController: android.view.View flutterView
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: void onEngineWillDestroy()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_OBSERVATORY_PORT
com.jcraft.jsch.Channel
io.flutter.plugins.pathprovider.R$id: int right_icon
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.jcraft.jsch.jce.TripleDESCBC: int bsize
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
io.flutter.plugins.sharedpreferences.R$attr: int fontStyle
com.jcraft.jsch.jce.SHA1: int getBlockSize()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
io.flutter.plugins.pathprovider.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.jcraft.jsch.KeyPair: byte[] passphrase
com.jcraft.jsch.Session: int _setPortForwardingR(java.lang.String,int)
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.jcraft.jsch.OpenSSHConfig: java.util.Hashtable config
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding
com.jcraft.jsch.Util
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_5
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.plugins.urllauncher.R$attr: int fontProviderAuthority
io.flutter.embedding.android.FlutterFragmentActivity: void onTrimMemory(int)
androidx.fragment.app.Fragment: void onResume()
com.jcraft.jsch.SftpStatVFS: long getAvailBlocks()
com.jcraft.jsch.HostKey: int ECDSA384
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.RenderSurface: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
io.flutter.view.VsyncWaiter$1$1
io.flutter.plugins.pathprovider.BuildConfig: BuildConfig()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_USE_TEST_FONTS
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FLAG_BATCHED
com.jcraft.jsch.ChannelShell: void run()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
io.flutter.plugin.common.JSONMethodCodec
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
org.threeten.bp.chrono.MinguoEra
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: boolean hasPlugin(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: void execute(java.lang.Runnable)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
io.flutter.plugin.common.JSONMessageCodec
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
io.flutter.embedding.engine.systemchannels.TextInputChannel$1
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.util.Vector _configs
com.jcraft.jsch.ChannelSubsystem: void run()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.ChannelSftp$1: com.jcraft.jsch.SftpProgressMonitor val$monitor
androidx.fragment.app.Fragment: void onDestroy()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.jcraft.jsch.jce.HMACSHA196: HMACSHA196()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
com.jcraft.jsch.ChannelSftp: void sendPacketPath(byte,byte[],java.lang.String)
com.jcraft.jsch.MAC: void init(byte[])
io.flutter.plugins.urllauncher.R$dimen: int notification_right_icon_size
androidx.work.impl.WorkManagerInitializer: WorkManagerInitializer()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
com.jcraft.jsch.UserAuth: int SSH_MSG_USERAUTH_REQUEST
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.jcraft.jsch.KeyPairECDSA
com.jcraft.jsch.UserAuth: int SSH_MSG_USERAUTH_PK_OK
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
com.google.android.exoplayer2.ui.TrackSelectionView: TrackSelectionView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onMeasure(int,int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String lookupKeyForAsset(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
com.jcraft.jsch.ChannelSftp$RequestQueue: int size()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.flutter.plugins.urllauncher.R$layout: int notification_action_tombstone
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void updateViewLayout(java.lang.Object[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
io.flutter.plugins.pathprovider.R$id: int tag_screen_reader_focusable
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
com.jcraft.jsch.JSchException
com.jcraft.jsch.PortWatcher: java.lang.String host
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String largeIcon
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness
com.jcraft.jsch.Session: int SSH_MSG_GLOBAL_REQUEST
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.journeyapps.barcodescanner.DecoratedBarcodeView: android.widget.TextView getStatusView()
com.jcraft.jsch.DHG14: int SSH_MSG_KEXDH_REPLY
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean verifyJNI()
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
io.flutter.plugins.sharedpreferences.R$id: int action_image
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DISABLE_SERVICE_AUTH_CODES
com.jcraft.jsch.jce.HMAC: void doFinal(byte[],int)
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl access$100(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.BinaryMessenger messenger()
com.jcraft.jsch.jce.ARCFOUR128
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
io.flutter.view.AccessibilityBridge: int MIN_ENGINE_GENERATED_NODE_ID
com.jcraft.jsch.KeyExchange: int DSS
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
com.jcraft.jsch.jce.ECDH521: ECDH521()
com.jcraft.jsch.RequestExec: byte[] command
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
com.jcraft.jsch.ProxySOCKS5: ProxySOCKS5(java.lang.String,int)
io.flutter.embedding.android.FlutterView$RenderMode: io.flutter.embedding.android.FlutterView$RenderMode surface
com.jcraft.jsch.Channel$1: void flush()
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.Identity: java.lang.String getName()
com.jcraft.jsch.JSch: java.lang.String getConfig(java.lang.String)
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.jcraft.jsch.ChannelForwardedTCPIP: void getData(com.jcraft.jsch.Buffer)
com.jcraft.jsch.DHGEX
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.jcraft.jsch.Session: void checkConfig(com.jcraft.jsch.ConfigRepository$Config,java.lang.String)
com.jcraft.jsch.Channel: void setSession(com.jcraft.jsch.Session)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.AndroidKeyProcessor: void destroy()
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
androidx.work.impl.foreground.SystemForegroundService
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
com.jcraft.jsch.KeyPairRSA: byte[] q_array
com.jcraft.jsch.IdentityRepository: int NOTRUNNING
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.jcraft.jsch.Session: int[] uncompress_len
io.flutter.plugin.common.PluginRegistry$NewIntentListener
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
com.jcraft.jsch.jce.ARCFOUR: int bsize
com.jcraft.jsch.KeyPairRSA: byte[] getEnd()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
com.jcraft.jsch.Session: void sendIgnore()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.jhomlala.better_player.ImageWorker
com.jcraft.jsch.Session$Forwarding: com.jcraft.jsch.Session this$0
com.jcraft.jsch.jce.ARCFOUR256: javax.crypto.Cipher cipher
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
io.flutter.plugins.pathprovider.R$dimen: int compat_control_corner_material
com.jcraft.jsch.ChannelSftp$3: ChannelSftp$3(com.jcraft.jsch.ChannelSftp,java.util.Vector)
com.google.android.exoplayer2.ui.StyledPlayerView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
io.flutter.plugins.urllauncher.R$dimen: int notification_right_side_padding_top
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
com.jcraft.jsch.JSch: com.jcraft.jsch.ConfigRepository getConfigRepository()
io.flutter.plugin.editing.TextInputPlugin: boolean restartAlwaysRequired
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.jcraft.jsch.PortWatcher
com.jcraft.jsch.Session: com.jcraft.jsch.Channel openChannel(java.lang.String)
com.jcraft.jsch.Buffer: int getShort()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
io.flutter.plugins.sharedpreferences.R$dimen: int notification_media_narrow_margin
com.jcraft.jsch.ChannelSftp$Header: com.jcraft.jsch.ChannelSftp this$0
com.jcraft.jsch.MAC: void update(byte[],int,int)
com.google.android.exoplayer2.ui.StyledPlayerView
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void setDirection(int,int)
com.jcraft.jsch.KeyPair: java.lang.String[] header1
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.lang.String getHostname()
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister
com.jcraft.jsch.Util: byte[] unquote(byte[])
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
io.flutter.plugins.pathprovider.R$id: int chronometer
com.jcraft.jsch.jce.SHA1: SHA1()
com.jcraft.jsch.ChannelSftp: byte[] _realpath(java.lang.String)
com.jcraft.jsch.Session: boolean isConnected()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugins.pathprovider.PathProviderPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.jcraft.jsch.ProxySOCKS5: ProxySOCKS5(java.lang.String)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel$StreamHandler handler
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String DOUBLE_PREFIX
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object readResolve()
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_startX
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.plugins.pathprovider.R$id: int info
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_fontWeight
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int STYLUS
io.flutter.embedding.android.FlutterView: boolean access$102(io.flutter.embedding.android.FlutterView,boolean)
com.jcraft.jsch.ChannelSftp: void init()
io.flutter.embedding.android.FlutterActivity: java.lang.String TAG
io.flutter.plugin.common.MessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,byte[],int)
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: android.os.Bundle createArgs()
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: FlutterNativeView$EngineLifecycleListenerImpl(io.flutter.view.FlutterNativeView)
io.flutter.plugins.sharedpreferences.R$color: int notification_icon_bg_color
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
com.jcraft.jsch.Channel: int id
com.jcraft.jsch.KeyPairDSA: byte[] begin
com.jcraft.jsch.ChannelSftp$1: boolean isClosed
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.jcraft.jsch.Channel: int SSH_OPEN_UNKNOWN_CHANNEL_TYPE
io.flutter.plugins.pathprovider.R$color: int notification_icon_bg_color
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.jcraft.jsch.jgss.GSSContextKrb5: java.lang.String getSystemProperty(java.lang.String)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void clearClient()
androidx.appcompat.widget.Toolbar: void setLogo(int)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl handler
org.threeten.bp.zone.ZoneOffsetTransitionRule: java.lang.Object writeReplace()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
com.jcraft.jsch.ChannelForwardedTCPIP$Config: ChannelForwardedTCPIP$Config()
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.plugins.urllauncher.R$layout: int notification_template_part_chronometer
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
io.flutter.view.FlutterView$Provider
com.jcraft.jsch.ProxySOCKS4: void setUserPasswd(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] SUPPORTED_ABIS
io.flutter.app.FlutterPluginRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.jcraft.jsch.HASH: void init()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1
com.jcraft.jsch.CipherNone: void update(byte[],int,int,byte[],int)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()
com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowBuffering(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$1
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service service
com.jcraft.jsch.jce.TripleDESCBC: int ivsize
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ACTION_CLOSE
com.jcraft.jsch.UserAuthNone: boolean start(com.jcraft.jsch.Session)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: PlayStoreDeferredComponentManager(android.content.Context,io.flutter.embedding.engine.FlutterJNI)
io.flutter.app.FlutterActivity: void onDestroy()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(java.util.Set)
androidx.appcompat.widget.SearchView
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
com.jcraft.jsch.Channel: boolean connected
com.jcraft.jsch.SftpATTRS: java.lang.String[] getExtended()
com.jcraft.jsch.SftpATTRS: int uid
com.jcraft.jsch.Cipher
io.flutter.app.FlutterActivityDelegate: void onDestroy()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
io.flutter.view.FlutterView: void destroy()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
com.jcraft.jsch.JSchException: JSchException(java.lang.String,java.lang.Throwable)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.lang.String getValue(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
com.jcraft.jsch.RequestSftp
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType[] values()
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
io.flutter.embedding.android.FlutterFragment: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.jce.ECDHN: byte[] getSecret(byte[],byte[])
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.jcraft.jsch.RequestEnv: byte[] name
com.google.android.exoplayer2.ui.TrackSelectionView: void setAllowMultipleOverrides(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformViewFactory,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object)
com.jcraft.jsch.DHECN: int SSH_MSG_KEX_ECDH_INIT
io.flutter.plugins.pathprovider.R$attr: int fontProviderPackage
com.jcraft.jsch.ChannelSftp: void setPty(boolean)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
io.flutter.embedding.android.FlutterSplashView: boolean wasPreviousSplashTransitionInterrupted()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.jcraft.jsch.JSchPartialAuthException: java.lang.String getMethods()
com.jhomlala.better_player.ImageWorker: ImageWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView detach()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.view.FlutterNativeView$1: io.flutter.view.FlutterNativeView this$0
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENTC_REMOVE_ALL_IDENTITIES
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
com.jcraft.jsch.Session: java.lang.String[] getPortForwardingR()
com.jcraft.jsch.KeyPairRSA: KeyPairRSA(com.jcraft.jsch.JSch,byte[],byte[],byte[])
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus
com.jcraft.jsch.jce.AES128CBC: int getIVSize()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(int)
io.flutter.embedding.android.DrawableSplashScreen: io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView
com.jcraft.jsch.SftpATTRS: int getFlags()
com.jcraft.jsch.KeyPairRSA: byte[] n_array
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
com.jcraft.jsch.ChannelDirectTCPIP: java.lang.String originator_IP_address
com.jcraft.jsch.UserAuthGSSAPIWithMIC: byte[][] supported_oid
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
androidx.fragment.app.Fragment: void performPause()
com.jcraft.jsch.ChannelExec: void setCommand(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
com.jcraft.jsch.ConfigRepository: com.jcraft.jsch.ConfigRepository$Config defaultConfig
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit valueOf(java.lang.String)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_2
io.flutter.view.FlutterView: io.flutter.view.FlutterView$ZeroSides calculateShouldZeroSides()
io.flutter.plugins.urllauncher.WebViewActivity$1
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment createFlutterFragment()
com.jcraft.jsch.IdentityRepository$Wrapper: com.jcraft.jsch.IdentityRepository ir
com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
com.jcraft.jsch.ProxySOCKS5: int proxy_port
com.jcraft.jsch.jcraft.HMACSHA1: int getBlockSize()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar
com.jcraft.jsch.ChannelSftp$1: ChannelSftp$1(com.jcraft.jsch.ChannelSftp,byte[],long[],com.jcraft.jsch.SftpProgressMonitor)
com.jcraft.jsch.KeyPairPKCS8: byte[] dsaEncryption
androidx.work.impl.background.systemjob.SystemJobService
com.jcraft.jsch.KeyPair: void setPassphrase(byte[])
com.jcraft.jsch.Session: void write(com.jcraft.jsch.Packet,com.jcraft.jsch.Channel,int)
com.jcraft.jsch.Channel: com.jcraft.jsch.IO io
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
com.jcraft.jsch.RequestWindowChange: int width_pixels
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int UP
com.jcraft.jsch.jce.HMACSHA256: void update(byte[],int,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.jcraft.jsch.jce.HMACSHA1: void doFinal(byte[],int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView
com.jcraft.jsch.jce.AES256CBC: AES256CBC()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.jcraft.jsch.Session: java.io.InputStream in
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpStatVFS statVFS(java.lang.String)
com.jcraft.jsch.KeyPair$ASN1: boolean isSEQUENCE()
com.jcraft.jsch.ChannelSftp: void sendOPENDIR(byte[])
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
io.flutter.embedding.engine.renderer.RenderSurface
com.jcraft.jsch.Session: int getServerAliveInterval()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.jcraft.jsch.Session: boolean isConnected
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
com.jcraft.jsch.KnownHosts$HashedHostKey: boolean isMatched(java.lang.String)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_LSTAT
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.FlutterInjector$1)
com.jcraft.jsch.jce.ECDH521: void init()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String MAPPING_KEY
com.google.android.exoplayer2.ui.PlayerView: boolean getUseController()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_FLUTTER_ASSETS_DIR
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit[] values()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.lang.String[] multiFind(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.jcraft.jsch.SftpStatVFS: int flags
com.jcraft.jsch.Session: void setServerAliveInterval(int)
com.jcraft.jsch.Session: int SSH_MSG_SERVICE_REQUEST
io.flutter.app.FlutterActivity: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
com.jcraft.jsch.Buffer: byte[] tmp
org.threeten.bp.zone.ZoneOffsetTransition
com.jcraft.jsch.KeyPair$ASN1Exception: KeyPair$ASN1Exception(com.jcraft.jsch.KeyPair)
io.flutter.view.VsyncWaiter
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.jcraft.jsch.KeyPair$ASN1: com.jcraft.jsch.KeyPair$ASN1[] getContents()
io.flutter.app.FlutterActivityEvents: void onDestroy()
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: android.content.Context context()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
com.jcraft.jsch.jce.SHA1: byte[] digest()
com.jcraft.jsch.ChannelAgentForwarding: ChannelAgentForwarding()
com.jcraft.jsch.Session: java.lang.String getServerVersion()
com.jcraft.jsch.KeyPair: boolean decrypt(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
androidx.appcompat.widget.AppCompatSpinner
com.jcraft.jsch.OpenSSHConfig: java.util.Hashtable keymap
com.jcraft.jsch.jce.BlowfishCBC: int getBlockSize()
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewAttachedToWindow(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.AccessibilityBridge: void release()
com.jcraft.jsch.ChannelX11: void setCookie(java.lang.String)
com.jcraft.jsch.SignatureDSA: void setPubKey(byte[],byte[],byte[],byte[])
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
com.jcraft.jsch.UserAuthGSSAPIWithMIC: int SSH_MSG_USERAUTH_GSSAPI_MIC
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.plugins.urllauncher.R$attr: int fontProviderFetchStrategy
androidx.fragment.app.Fragment: void performStop()
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
io.flutter.plugins.urllauncher.R$drawable: int notification_bg
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
io.flutter.plugins.urllauncher.UrlLauncher: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus launch(java.lang.String,android.os.Bundle,boolean,boolean,boolean)
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
io.flutter.embedding.engine.loader.ResourceExtractor: void copy(java.io.InputStream,java.io.OutputStream)
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingBottom
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
com.jcraft.jsch.Packet: com.jcraft.jsch.Buffer buffer
com.jcraft.jsch.ChannelSftp: void setEnv(java.util.Hashtable)
com.jcraft.jsch.ProxyHTTP: java.io.OutputStream getOutputStream()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
io.flutter.embedding.android.FlutterFragmentActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.KeyPair$ASN1: int getLength(int[])
com.jcraft.jsch.RequestSftp: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
io.flutter.Log: void i(java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
com.jcraft.jsch.jgss.GSSContextKrb5: java.lang.String pUseSubjectCredsOnly
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void keyDown(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
com.jcraft.jsch.Session: byte[] expandKey(com.jcraft.jsch.Buffer,byte[],byte[],byte[],com.jcraft.jsch.HASH,int)
com.jcraft.jsch.jce.HMACSHA512: void update(byte[],int,int)
io.flutter.plugin.platform.PlatformPlugin$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String SPLASH_SCREEN_META_DATA_KEY
com.jcraft.jsch.Channel: void setOutputStream(java.io.OutputStream,boolean)
com.jcraft.jsch.Channel$MyPipedInputStream: void checkSpace(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
io.flutter.FlutterInjector: void reset()
com.jcraft.jsch.IO: void setOutputStream(java.io.OutputStream)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
com.jcraft.jsch.jce.SHA256: java.security.MessageDigest md
org.threeten.bp.YearMonth: java.lang.Object writeReplace()
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.KeyPair: byte[] space
com.jcraft.jsch.UserAuth: int SSH_MSG_USERAUTH_SUCCESS
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderAuthority
com.jcraft.jsch.ChannelSftp: java.io.InputStream get(java.lang.String,com.jcraft.jsch.SftpProgressMonitor,long)
com.jcraft.jsch.KeyPairDSA: byte[] end
io.flutter.embedding.engine.systemchannels.SystemChannel: java.lang.String TAG
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void addView(java.lang.Object[])
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: long access$300(io.flutter.view.FlutterView$SurfaceTextureRegistryEntry)
io.flutter.plugin.common.StandardMessageCodec: byte LIST
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.Session: java.lang.String[] getPortForwardingL()
com.jcraft.jsch.KnownHosts: void setKnownHosts(java.lang.String)
com.jcraft.jsch.IO: void setInputStream(java.io.InputStream)
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.Buffer obuf
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromActivityForConfigChanges()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.jcraft.jsch.UserAuthPublicKey
com.jcraft.jsch.Channel: void setExitStatus(int)
com.jcraft.jsch.ChannelDirectTCPIP
io.flutter.view.FlutterView: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.view.TextureRegistry textures()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
com.jcraft.jsch.ChannelAgentForwarding: com.jcraft.jsch.Buffer rbuf
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.Packet packet
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handleMessageFromDart(java.lang.String,byte[],int)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
io.flutter.embedding.android.FlutterActivity: android.content.Intent createDefaultIntent(android.content.Context)
com.jcraft.jsch.KeyPair: int writeOCTETSTRING(byte[],int,byte[])
io.flutter.plugin.common.ErrorLogResult: void notImplemented()
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener
com.jcraft.jsch.HostKey: byte[] key
com.google.android.exoplayer2.ui.StyledPlayerView: void setCustomErrorMessage(java.lang.CharSequence)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_6
com.jcraft.jsch.jce.AES128CTR: int bsize
com.jcraft.jsch.ChannelX11: void write(byte[],int,int)
com.jcraft.jsch.jce.PBKDF
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: java.lang.String lookupKeyForAsset(java.lang.String)
com.jcraft.jsch.Util: byte[] fromBase64(byte[],int,int)
com.jcraft.jsch.HostKeyRepository: int check(java.lang.String,byte[])
com.jcraft.jsch.ChannelDirectTCPIP: void connect(int)
com.jcraft.jsch.jce.BlowfishCBC: void update(byte[],int,int,byte[],int)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_5
com.jcraft.jsch.SftpStatVFS: long getBlocks()
com.jcraft.jsch.ConfigRepository$Config
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.AndroidKeyProcessor,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.Fragment: void onStart()
io.flutter.plugins.sharedpreferences.R$integer: int status_bar_notification_info_maxnum
com.jcraft.jsch.KeyExchange: int PROPOSAL_MAC_ALGS_CTOS
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
com.jcraft.jsch.SftpATTRS: int S_IROTH
com.jcraft.jsch.ChannelSubsystem: void setSubsystem(java.lang.String)
io.flutter.plugins.sharedpreferences.R$id: int info
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode valueOf(java.lang.String)
io.flutter.plugins.urllauncher.R$dimen: R$dimen()
com.jcraft.jsch.Channel: int getRecipient()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
com.jcraft.jsch.SftpATTRS: int SSH_FILEXFER_ATTR_UIDGID
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraSettings getCameraSettings()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
androidx.media.AudioAttributesCompat
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_4
com.jcraft.jsch.Session$GlobalRequestReply
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedFontSizes(boolean)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
io.flutter.plugin.platform.PlatformPlugin
com.dexterous.flutterlocalnotifications.BitmapSource: BitmapSource(java.lang.String,int)
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
com.jcraft.jsch.jce.SignatureECDSA: byte[] chop0(byte[])
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.flutter.plugins.urllauncher.R$attr
com.jcraft.jsch.KeyPair: boolean parseHeader(com.jcraft.jsch.Buffer,java.util.Hashtable)
io.flutter.view.VsyncWaiter$1$1: void doFrame(long)
io.flutter.plugins.urllauncher.R$attr: int fontProviderPackage
androidx.appcompat.widget.ActionBarContextView
io.flutter.embedding.android.AndroidKeyProcessor: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
com.jcraft.jsch.ChannelSubsystem: boolean want_reply
io.flutter.app.FlutterActivityDelegate: android.graphics.drawable.Drawable getLaunchScreenDrawableFromActivityTheme()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.jcraft.jsch.Session: void connect(int)
io.flutter.plugins.sharedpreferences.R
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.pathprovider.R$dimen: int notification_large_icon_width
io.flutter.view.FlutterView: void runFromBundle(io.flutter.view.FlutterRunArguments)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getEP()
com.jcraft.jsch.Session: com.jcraft.jsch.SocketFactory socket_factory
com.google.android.exoplayer2.ui.PlayerControlView: void setRewindIncrementMs(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.fragment.app.Fragment: void onPause()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.jcraft.jsch.Session: void setOutputStream(java.io.OutputStream)
io.flutter.embedding.android.FlutterActivity
com.jcraft.jsch.jce.AES128CTR: AES128CTR()
io.flutter.app.FlutterActivityEvents: void onPostResume()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener
com.jcraft.jsch.IdentityFile: byte[] getPublicKeyBlob()
com.jcraft.jsch.IdentityRepository$Wrapper: boolean keep_in_cache
com.jcraft.jsch.ChannelForwardedTCPIP: int LOCAL_MAXIMUM_PACKET_SIZE
com.jcraft.jsch.Buffer: com.jcraft.jsch.Buffer fromBytes(byte[][])
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$3800(io.flutter.view.AccessibilityBridge$SemanticsNode,float[])
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_ENABLE_STATE_RESTORATION
com.jcraft.jsch.jcraft.Compression: int buffer_margin
com.jcraft.jsch.DHGEX: com.jcraft.jsch.Packet packet
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setSingleTapListener(com.google.android.exoplayer2.ui.spherical.SingleTapListener)
com.jcraft.jsch.KeyPairECDSA: byte[] getSignature(byte[])
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_startColor
com.jcraft.jsch.JSchAuthCancelException
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
io.flutter.plugin.platform.PlatformViewsController: int access$500(io.flutter.plugin.platform.PlatformViewsController,double)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.KeyPair: void writePrivateKey(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
io.flutter.view.FlutterView$3: io.flutter.plugin.platform.PlatformPlugin val$platformPlugin
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.journeyapps.barcodescanner.CameraPreview: void setUseTextureView(boolean)
com.jcraft.jsch.Session: byte[] s2cmac_result1
io.flutter.view.FlutterView: io.flutter.embedding.android.AndroidKeyProcessor androidKeyProcessor
com.jcraft.jsch.JSch: com.jcraft.jsch.Logger logger
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
org.threeten.bp.YearMonth
com.jcraft.jsch.KnownHosts: com.jcraft.jsch.HostKey[] getHostKey()
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void hide()
com.jcraft.jsch.jcraft.Compression: byte[] inflated_buf
com.jcraft.jsch.KeyPair: byte[] getBegin()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.jcraft.jsch.jce.SignatureECDSA: void init()
org.threeten.bp.OffsetDateTime
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_OPEN_FAILURE
io.flutter.embedding.android.FlutterSurfaceView: void init()
com.jcraft.jsch.UserInfo: java.lang.String getPassphrase()
com.jcraft.jsch.Channel: com.jcraft.jsch.Session session
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
com.jcraft.jsch.Channel: void addRemoteWindowSize(long)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
io.flutter.plugins.urllauncher.R$layout: R$layout()
androidx.fragment.app.FragmentActivity: FragmentActivity()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration
io.flutter.embedding.android.FlutterSurfaceView: void pause()
io.flutter.plugins.sharedpreferences.R$styleable: int[] GradientColorItem
com.jcraft.jsch.Identity: boolean setPassphrase(byte[])
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.jcraft.jsch.Session$GlobalRequestReply: java.lang.Thread getThread()
com.jcraft.jsch.SftpStatVFS: SftpStatVFS()
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.jcraft.jsch.Packet: com.jcraft.jsch.Random random
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.jcraft.jsch.IdentityRepository$Wrapper: IdentityRepository$Wrapper(com.jcraft.jsch.IdentityRepository,boolean)
io.flutter.embedding.android.FlutterFragment: void onNewIntent(android.content.Intent)
io.flutter.view.VsyncWaiter$1$1: io.flutter.view.VsyncWaiter$1 this$1
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
io.flutter.app.FlutterPluginRegistry: void destroy()
io.flutter.embedding.android.FlutterActivity: void onPause()
io.flutter.plugin.common.StandardMethodCodec: java.lang.String getStackTrace(java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
com.jcraft.jsch.KeyPair: java.lang.String[] header2
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.view.AccessibilityBridge$1
com.dexterous.flutterlocalnotifications.models.IconSource
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
com.jcraft.jsch.KeyExchange: KeyExchange()
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.jcraft.jsch.SftpStatVFS: long getFragmentSize()
io.flutter.embedding.engine.loader.ResourceExtractor$1
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
com.jcraft.jsch.ChannelExec: void setTerminalMode(byte[])
com.jcraft.jsch.ChannelSftp: void sendCLOSE(byte[])
com.jcraft.jsch.KeyPair: int VENDOR_PKCS8
io.flutter.plugin.platform.PlatformViewRegistryImpl: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
io.flutter.plugins.sharedpreferences.R$id: int right_side
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3900(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.flutter.view.FlutterRunArguments: java.lang.String entrypoint
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource valueOf(java.lang.String)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
io.flutter.embedding.android.FlutterSplashView
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.jce.SHA1
com.jcraft.jsch.KeyExchange: byte[] K_S
io.flutter.view.FlutterView: void enableTransparentBackground()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.jcraft.jsch.KnownHosts: void add(com.jcraft.jsch.HostKey,com.jcraft.jsch.UserInfo)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
com.jcraft.jsch.jce.HMACMD596: byte[] _buf16
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.jcraft.jsch.Session: boolean checkCipher(java.lang.String)
io.flutter.plugins.urllauncher.R$id: int action_container
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineDetachedFromFlutterView()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void addPlugin(io.flutter.embedding.engine.plugins.shim.ShimRegistrar)
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int HOVER
com.jcraft.jsch.KeyPairRSA: byte[] getBegin()
com.jcraft.jsch.Buffer: long getUInt()
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
com.jcraft.jsch.jce.ARCFOUR128: boolean isCBC()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.jcraft.jsch.KnownHosts: void dump(java.io.OutputStream)
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
io.flutter.util.Preconditions: Preconditions()
io.flutter.plugins.sharedpreferences.BuildConfig: BuildConfig()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
com.jcraft.jsch.Channel$1: void init()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String NORMAL_THEME_META_DATA_KEY
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugins.pathprovider.R$attr: int fontProviderAuthority
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
androidx.core.app.ComponentActivity: ComponentActivity()
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
com.jcraft.jsch.ChannelSftp: void access$600(com.jcraft.jsch.ChannelSftp,long)
com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair genKeyPair(com.jcraft.jsch.JSch,int,int)
com.journeyapps.barcodescanner.CameraPreview: void setMarginFraction(double)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: void run()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
io.flutter.plugins.pathprovider.R$drawable: R$drawable()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
io.flutter.plugins.urllauncher.R$id: int blocking
androidx.fragment.app.Fragment: Fragment()
com.jcraft.jsch.ChannelSftp$1: int _ackid
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_centerY
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection getLastInputConnection()
io.flutter.embedding.android.FlutterView$RenderMode: io.flutter.embedding.android.FlutterView$RenderMode valueOf(java.lang.String)
com.journeyapps.barcodescanner.CameraPreview: int getDisplayRotation()
com.jcraft.jsch.jce.HMACSHA1: void init(byte[])
com.jcraft.jsch.KeyPairECDSA: byte[][] oids
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: void release()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_14
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.exoplayer2.video.VideoDecoderGLSurfaceView: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer getVideoDecoderOutputBufferRenderer()
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.jcraft.jsch.ChannelSftp: java.lang.String readlink(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_1
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void installDeferredComponent(int,java.lang.String)
io.flutter.plugins.urllauncher.R$id: int title
com.jcraft.jsch.ProxySOCKS5: void close()
org.threeten.bp.chrono.ThaiBuddhistChronology
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.jcraft.jsch.PortWatcher: void delete()
com.jcraft.jsch.ChannelExec: void setXForwarding(boolean)
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.jcraft.HMAC: HMAC()
io.flutter.embedding.engine.loader.ResourceExtractor: void access$200(java.io.InputStream,java.io.OutputStream)
com.jcraft.jsch.Request: boolean reply
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_main_column_padding_top
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.jcraft.jsch.KnownHosts: void sync(java.lang.String)
com.jcraft.jsch.ChannelX11: byte[] cookie
com.jcraft.jsch.OpenSSHConfig: com.jcraft.jsch.OpenSSHConfig parse(java.lang.String)
com.jcraft.jsch.KeyPairPKCS8
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider contentProvider
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
io.flutter.plugins.urllauncher.R$styleable: int GradientColorItem_android_offset
com.jcraft.jsch.KeyPairDSA: byte[] sshdss
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.jcraft.jsch.KeyExchange: int RSA
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.jcraft.jsch.UserAuth: int SSH_MSG_USERAUTH_BANNER
com.jcraft.jsch.ChannelDirectTCPIP: void setOutputStream(java.io.OutputStream)
com.jcraft.jsch.ChannelX11: java.lang.String host
org.threeten.bp.chrono.ThaiBuddhistChronology: java.lang.Object readResolve()
com.jcraft.jsch.DHG1: int getState()
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.exoplayer2.ui.SubtitleView: SubtitleView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.DHECN: com.jcraft.jsch.ECDH ecdh
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.flutter.plugins.sharedpreferences.R$integer
com.jcraft.jsch.Buffer: int getByte()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
io.flutter.app.FlutterPluginRegistry: io.flutter.view.FlutterNativeView access$200(io.flutter.app.FlutterPluginRegistry)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.view.WindowManager)
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
io.flutter.view.FlutterView: void postRun()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.jcraft.jsch.jce.AES192CBC: int getIVSize()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
io.flutter.plugins.sharedpreferences.R$styleable: int[] ColorStateListItem
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String BIG_INTEGER_PREFIX
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowSubtitleButton(boolean)
com.jcraft.jsch.Channel: int SSH_MSG_CHANNEL_OPEN_CONFIRMATION
io.flutter.view.FlutterView: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.plugin.common.FlutterException: java.lang.String TAG
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.jcraft.jsch.jce.AES256CTR: int getBlockSize()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
androidx.media.AudioAttributesImplBaseParcelizer
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
io.flutter.app.FlutterActivityDelegate$ViewFactory: io.flutter.view.FlutterView createFlutterView(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void onKeyEventNotHandled(android.view.KeyEvent)
io.flutter.embedding.engine.dart.PlatformMessageHandler
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
io.flutter.plugins.urllauncher.R$dimen: int notification_content_margin_start
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.ChannelSftp$RequestQueue access$900(com.jcraft.jsch.ChannelSftp)
org.threeten.bp.Month: org.threeten.bp.Month[] values()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.jcraft.jsch.KeyPairPKCS8: byte[] pbeWithMD5AndDESCBC
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.android.AndroidTouchProcessor: int BYTES_PER_FIELD
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
androidx.fragment.app.Fragment: void performDetach()
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.common.PluginRegistry$Registrar: java.lang.String lookupKeyForAsset(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
com.jcraft.jsch.Session: java.lang.Object lock
org.threeten.bp.chrono.JapaneseDate: void readObject(java.io.ObjectInputStream)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
com.jcraft.jsch.KeyPairGenRSA: byte[] getE()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
com.jcraft.jsch.JSchPartialAuthException: java.lang.String methods
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.ui.PlayerControlView: com.google.android.exoplayer2.Player getPlayer()
com.jcraft.jsch.jcraft.HMAC
com.jcraft.jsch.jce.HMACMD5: void doFinal(byte[],int)
io.flutter.plugin.platform.PlatformViewsController: void detach()
io.flutter.embedding.android.FlutterActivity: void release()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.jcraft.jsch.jce.HMACSHA1: HMACSHA1()
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
com.jcraft.jsch.jce.PBKDF: PBKDF()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCanLaunch(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.plugins.pathprovider.R$dimen: int compat_button_padding_horizontal_material
io.flutter.plugins.urllauncher.R$layout: int notification_action
io.flutter.plugin.common.EventChannel
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.jcraft.jsch.RequestEnv: void setEnv(byte[],byte[])
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
com.jcraft.jsch.ProxySOCKS4: java.io.InputStream in
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void detachFromFlutterEngine()
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: android.view.KeyEvent access$100(io.flutter.embedding.android.AndroidKeyProcessor$EventResponder,android.view.KeyEvent)
io.flutter.plugins.sharedpreferences.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.jcraft.jsch.ChannelExec: void setPtySize(int,int,int,int)
com.jcraft.jsch.SftpStatVFS: long blocks
io.flutter.FlutterInjector$Builder
com.google.android.exoplayer2.ui.SubtitleView: void setBottomPaddingFraction(float)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResources(java.util.Collection)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_8
com.jcraft.jsch.ChannelX11: byte[] addCache(byte[],int,int)
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
io.flutter.view.FlutterView$2: FlutterView$2(io.flutter.view.FlutterView)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivityForConfigChanges()
com.jcraft.jsch.Session: void sendKeepAliveMsg()
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_CACHED_ENGINE_ID
com.jcraft.jsch.Util$1: int val$_port
androidx.appcompat.widget.ContentFrameLayout
io.flutter.plugin.platform.PlatformViewsController: boolean access$000(int)
com.jcraft.jsch.jce.DH: java.security.KeyPairGenerator myKpairGen
org.threeten.bp.zone.Ser
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderQuery
io.flutter.embedding.engine.dart.DartExecutor: int getPendingChannelResponseCount()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
com.jcraft.jsch.Session: byte[] IVc2s
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
com.jcraft.jsch.KeyPair: void setPublicKeyComment(java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet,int)
com.jcraft.jsch.Session: java.lang.String getHost()
com.jcraft.jsch.KeyPairRSA: int getKeySize()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.embedding.engine.loader.FlutterLoader$1
com.jcraft.jsch.Session: int setPortForwardingL(java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory,int)
io.flutter.plugins.urllauncher.R$drawable: int notification_template_icon_low_bg
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_low
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_10
com.jcraft.jsch.Channel: void setInputStream(java.io.InputStream)
com.jcraft.jsch.ChannelSftp: int SSH_FXF_WRITE
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
com.jcraft.jsch.KnownHosts: void remove(java.lang.String,java.lang.String)
com.jcraft.jsch.ChannelSftp: java.lang.String home
com.jcraft.jsch.DHECN: int key_size
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.jcraft.jsch.KeyPairGenDSA
com.jcraft.jsch.jce.ARCFOUR128: int skip
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
com.jcraft.jsch.IdentityRepository: java.util.Vector getIdentities()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
io.flutter.embedding.android.FlutterActivity: void onResume()
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
io.flutter.embedding.android.FlutterFragmentActivity: android.os.Bundle getMetaData()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_INITIAL_ROUTE
io.flutter.embedding.engine.loader.ResourceExtractor: void deleteFiles(java.lang.String,java.util.HashSet)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3302(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.jcraft.jsch.jce.SHA256: int getBlockSize()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
androidx.lifecycle.ReportFragment$LifecycleCallbacks
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] e
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.jcraft.jsch.Session: int SSH_MSG_KEXDH_REPLY
io.flutter.plugins.urllauncher.R$integer: int status_bar_notification_info_maxnum
org.threeten.bp.chrono.Chronology: java.lang.Object readResolve()
io.flutter.view.FlutterView$3
com.jcraft.jsch.Session: void setConfig(java.util.Hashtable)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.jcraft.jsch.ProxySOCKS5: java.lang.String user
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
io.flutter.plugin.common.PluginRegistry$Registrar
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_gradientRadius
com.jcraft.jsch.Util$1
io.flutter.plugin.common.JSONUtil: java.lang.Object unwrap(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.lang.Object getLifecycle()
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
io.flutter.view.FlutterNativeView: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.lang.String[])
android.support.v4.media.session.MediaSessionCompat$QueueItem
androidx.recyclerview.widget.LinearLayoutManager
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToForeground()
io.flutter.plugins.sharedpreferences.R$color: int ripple_material_light
io.flutter.embedding.android.DrawableSplashScreen$1
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.jcraft.jsch.jce.SignatureECDSA: void setPubKey(byte[],byte[])
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.jcraft.jsch.jce.AES192CTR: javax.crypto.Cipher cipher
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENDLESS_TRACE_BUFFER
com.jcraft.jsch.Session: com.jcraft.jsch.Channel getStreamForwarder(java.lang.String,int)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.jcraft.jsch.Buffer: void reset()
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String URL_EXTRA
com.jcraft.jsch.Packet: int shift(int,int,int)
com.jcraft.jsch.ProxyHTTP: void close()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void finishAutofillContext(boolean)
com.jcraft.jsch.ChannelSftp: boolean isLocalAbsolutePath(java.lang.String)
com.jcraft.jsch.Channel: int lwsize
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.plugins.pathprovider.R$id: int line3
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
com.jcraft.jsch.ChannelSftp$2: int rest_length
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
com.jcraft.jsch.Channel: int SSH_OPEN_ADMINISTRATIVELY_PROHIBITED
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: java.lang.String getStackTrace(java.lang.Exception)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1
io.flutter.embedding.engine.plugins.service.ServiceAware
com.jcraft.jsch.jcraft.HMAC: int getBlockSize()
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_MKDIR
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
io.flutter.plugins.pathprovider.R$id: int dialog_button
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String icon
com.jcraft.jsch.Cipher: int DECRYPT_MODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.SoundSource soundSource
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_SOFTWARE_RENDERING
com.jcraft.jsch.ProxySOCKS5: java.lang.String passwd
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
com.jcraft.jsch.jcraft.Compression: int type
com.journeyapps.barcodescanner.CaptureActivity: CaptureActivity()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String,int)
com.jcraft.jsch.Channel: void close()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
com.jcraft.jsch.SftpATTRS: int S_IXUSR
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
androidx.appcompat.view.menu.ListMenuItemView
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_VERBOSE_LOGGING
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
org.threeten.bp.chrono.MinguoDate
com.jcraft.jsch.SftpATTRS: java.lang.String getAtimeString()
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
com.jcraft.jsch.Channel: java.util.Vector pool
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.app.FlutterPluginRegistry: java.util.List mRequestPermissionsResultListeners
io.flutter.plugins.sharedpreferences.R$dimen: int notification_right_icon_size
com.jcraft.jsch.ProxyHTTP: java.lang.String passwd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
androidx.fragment.app.Fragment: int hashCode()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugins.sharedpreferences.R$styleable: int ColorStateListItem_alpha
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.lang.String TAG
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.jcraft.jsch.jce.ECDH384: ECDH384()
com.jcraft.jsch.Session: com.jcraft.jsch.Packet packet
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin access$1100(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: io.flutter.view.FlutterCallbackInformation callbackHandle
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource[] $VALUES
com.jcraft.jsch.DHG1: DHG1()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.plugins.sharedpreferences.R$id: int action_container
io.flutter.embedding.android.FlutterFragment: java.lang.String getInitialRoute()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
com.journeyapps.barcodescanner.CameraPreview: void setFramingRectSize(com.journeyapps.barcodescanner.Size)
com.jcraft.jsch.Channel: void eof_remote()
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
com.jcraft.jsch.Session: java.lang.String[] guess
com.jcraft.jsch.Proxy: java.io.OutputStream getOutputStream()
com.jcraft.jsch.jce.AES192CTR: int bsize
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.jcraft.jsch.KeyPairECDSA: boolean parse(byte[])
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_31
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.jcraft.jsch.ProxySOCKS5: java.net.Socket socket
com.jcraft.jsch.Buffer: void checkFreeSize(int)
androidx.appcompat.widget.AppCompatRadioButton
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
com.jcraft.jsch.SftpATTRS: int S_IFREG
com.jcraft.jsch.SftpException: SftpException(int,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler: void onKeyEventNotHandled(android.view.KeyEvent)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getUseArtwork()
com.jcraft.jsch.ChannelSession: java.lang.String ttype
io.flutter.plugin.platform.PlatformViewsController: void attachToView(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
com.jcraft.jsch.jce.DH: javax.crypto.KeyAgreement myKeyAgree
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
org.threeten.bp.chrono.JapaneseEra: java.lang.Object writeReplace()
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com.jcraft.jsch.ChannelSftp$RequestQueue$Request: com.jcraft.jsch.ChannelSftp$RequestQueue this$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
io.flutter.plugin.common.ErrorLogResult: java.lang.String tag
com.jcraft.jsch.ProxyHTTP
io.flutter.embedding.android.AndroidTouchProcessor: int _POINTER_BUTTON_PRIMARY
com.jcraft.jsch.ChannelSftp$1: int[] ackid
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
com.jcraft.jsch.ChannelX11: void setPort(int)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.TextInputPlugin: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.jcraft.jsch.jce.HMACSHA196: void doFinal(byte[],int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.jcraft.jsch.jce.KeyPairGenRSA
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge: boolean access$500(io.flutter.view.AccessibilityBridge)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onDetachedFromBroadcastReceiver()
io.flutter.plugins.sharedpreferences.R$layout: int notification_template_part_chronometer
com.journeyapps.barcodescanner.CameraPreview: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
com.jcraft.jsch.jce.DH: void setP(byte[])
androidx.work.impl.workers.ConstraintTrackingWorker
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
com.jcraft.jsch.DHGEX: int SSH_MSG_KEX_DH_GEX_REQUEST
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long parseLong(java.lang.Object)
com.jcraft.jsch.ChannelDirectTCPIP: com.jcraft.jsch.Packet genChannelOpenPacket()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
io.flutter.plugin.common.BinaryMessenger
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
com.jcraft.jsch.Packet: void reset()
io.flutter.embedding.android.AndroidTouchProcessor
com.google.android.exoplayer2.ui.PlayerView: com.google.android.exoplayer2.ui.SubtitleView getSubtitleView()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void commitAsync(android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size getPreviewSize()
com.jcraft.jsch.RequestEnv: RequestEnv()
org.threeten.bp.LocalDateTime: java.lang.Object writeReplace()
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
com.jcraft.jsch.KeyPair$ASN1Exception
io.flutter.app.FlutterActivityDelegate: android.app.Activity activity
com.jcraft.jsch.RequestSignal: RequestSignal()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context)
com.jcraft.jsch.Channel: void setRemoteWindowSize(long)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getD()
com.jcraft.jsch.Session: void setPortForwardingR(java.lang.String,int,java.lang.String,java.lang.Object[])
io.flutter.plugins.sharedpreferences.R$dimen: int compat_notification_large_icon_max_height
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
com.jcraft.jsch.Channel$MyPipedInputStream: Channel$MyPipedInputStream(com.jcraft.jsch.Channel,java.io.PipedOutputStream)
com.dexterous.flutterlocalnotifications.models.Time: Time()
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
com.jcraft.jsch.KeyPairPKCS8: byte[] getBegin()
com.jcraft.jsch.jgss.GSSContextKrb5: void dispose()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
androidx.fragment.app.Fragment: int STARTED
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: FlutterActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
io.flutter.plugins.urllauncher.R$id: int tag_accessibility_actions
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context)
android.support.v4.app.RemoteActionCompatParcelizer
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] g
com.jcraft.jsch.ChannelSubsystem: void setPtyType(java.lang.String)
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.jcraft.jsch.jce.HMACSHA196: int getBlockSize()
androidx.fragment.app.Fragment: boolean isHideReplaced()
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.jcraft.jsch.DHGEX256: DHGEX256()
com.jcraft.jsch.ChannelSftp: boolean checkStatus(int[],com.jcraft.jsch.ChannelSftp$Header)
io.flutter.view.FlutterNativeView: boolean applicationIsRunning
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder withCachedEngine(java.lang.String)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.lang.String TAG
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1: FlutterView$SurfaceTextureRegistryEntry$1(io.flutter.view.FlutterView$SurfaceTextureRegistryEntry)
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
io.flutter.embedding.android.SplashScreen: void transitionToFlutter(java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_AOT_SHARED_LIBRARY_NAME
io.flutter.app.FlutterActivityEvents: boolean onBackPressed()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.jcraft.jsch.KeyPairGenDSA: byte[] getP()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.jcraft.jsch.Session: void setUserInfo(com.jcraft.jsch.UserInfo)
io.flutter.embedding.android.FlutterSplashView$2: io.flutter.embedding.android.FlutterSplashView this$0
com.jcraft.jsch.ChannelExec: ChannelExec()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
com.google.android.exoplayer2.ui.PlayerView: void setErrorMessageProvider(com.google.android.exoplayer2.util.ErrorMessageProvider)
com.jcraft.jsch.HostKeyRepository: int NOT_INCLUDED
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.jcraft.jsch.Session: com.jcraft.jsch.Cipher c2scipher
com.jcraft.jsch.Channel$1: Channel$1(com.jcraft.jsch.Channel,com.jcraft.jsch.Channel)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.embedding.android.FlutterFragmentActivity: void onBackPressed()
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.jcraft.jsch.jce.Random: byte[] tmp
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
com.jcraft.jsch.jce.MD5: int getBlockSize()
io.flutter.view.FlutterNativeView$EngineLifecycleListenerImpl: void onPreEngineRestart()
com.google.android.exoplayer2.ui.StyledPlayerView: com.google.android.exoplayer2.Player getPlayer()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.view.FlutterView view()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToSharedLibraryNames
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
androidx.room.MultiInstanceInvalidationService
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
io.flutter.view.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.loader.ResourceExtractor$1: ResourceExtractor$1()
com.jcraft.jsch.ChannelShell: void start()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$6000(io.flutter.view.AccessibilityBridge,int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
io.flutter.plugins.pathprovider.StorageDirectoryMapper
com.google.android.exoplayer2.ui.PlayerView: void setControllerHideDuringAds(boolean)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setOnFullScreenModeChangedListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$OnFullScreenModeChangedListener)
io.flutter.app.FlutterPlayStoreSplitApplication
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderAuthority
io.flutter.plugin.editing.TextInputPlugin: void destroy()
io.flutter.embedding.android.FlutterView$TransparencyMode: io.flutter.embedding.android.FlutterView$TransparencyMode[] $VALUES
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.jcraft.jsch.UserAuthGSSAPIWithMIC: int SSH_MSG_USERAUTH_GSSAPI_TOKEN
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map moduleNameToResults
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
androidx.fragment.app.Fragment: int getStateAfterAnimating()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
com.jcraft.jsch.ChannelForwardedTCPIP: com.jcraft.jsch.ChannelForwardedTCPIP$Config getPort(com.jcraft.jsch.Session,java.lang.String,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
com.jcraft.jsch.LocalIdentityRepository: void add(com.jcraft.jsch.Identity)
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
com.jcraft.jsch.jcraft.HMACMD5
com.jcraft.jsch.DHGEX: int check2048(java.lang.Class,int)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_big_circle_margin
io.flutter.plugins.urllauncher.R$styleable: int[] ColorStateListItem
com.jcraft.jsch.MAC: void update(int)
com.jcraft.jsch.SftpException: java.lang.Throwable cause
io.flutter.plugin.common.StringCodec: StringCodec()
com.jcraft.jsch.DHECN: int getState()
com.jcraft.jsch.SignatureRSA
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_BACKGROUND_MODE
com.jcraft.jsch.ChannelSftp$Header: int rid
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.jcraft.jsch.jce.AES192CBC: AES192CBC()
io.flutter.plugin.common.StandardMessageCodec: byte BIGINT
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
com.jcraft.jsch.SftpATTRS: boolean isType(int)
com.google.android.exoplayer2.ui.StyledPlayerView: java.util.List getAdOverlayInfos()
io.flutter.view.FlutterView: io.flutter.plugin.localization.LocalizationPlugin mLocalizationPlugin
com.jcraft.jsch.ChannelSftp: void setPtyType(java.lang.String)
io.flutter.embedding.android.FlutterTextureView$1
com.jcraft.jsch.SftpException
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.SplashScreen: boolean doesSplashViewRememberItsTransition()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
com.jcraft.jsch.KnownHosts: com.jcraft.jsch.HostKey createHashedHostKey(java.lang.String,byte[])
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
androidx.fragment.app.FragmentActivity: boolean mResumed
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit[] values()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.jcraft.jsch.Util: byte[] empty
com.google.android.exoplayer2.ui.PlayerControlView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
com.jcraft.jsch.ChannelSftp: java.io.OutputStream put(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
org.threeten.bp.Ser: Ser()
com.jcraft.jsch.jce.DH: java.math.BigInteger p
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
io.flutter.app.FlutterActivity: boolean retainFlutterNativeView()
com.jcraft.jsch.SftpStatVFS: long ffree
com.jcraft.jsch.KnownHosts: void addInvalidLine(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.jcraft.jsch.jgss.GSSContextKrb5
com.dexterous.flutterlocalnotifications.models.PersonDetails
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect getFramingRect()
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect viewBounds
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate shimRegistrarAggregate
com.jcraft.jsch.ChannelSftp: void access$1100(com.jcraft.jsch.ChannelSftp,com.jcraft.jsch.Buffer,int)
com.jcraft.jsch.SftpProgressMonitor
com.jcraft.jsch.jce.HMACSHA512: void update(int)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShutterBackgroundColor(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_8
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.ChannelSftp: boolean extension_hardlink
io.flutter.view.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.KeyPair: int VENDOR_FSECURE
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_RENAME
com.jcraft.jsch.KeyExchange: byte[] H
com.jcraft.jsch.KeyPair: int writeSEQUENCE(byte[],int,int)
com.jcraft.jsch.Session: java.lang.String getClientVersion()
com.jcraft.jsch.OpenSSHConfig: void _parse(java.io.Reader)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeVirtualDisplayForPlatformView(int)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(android.view.KeyEvent)
com.jcraft.jsch.KeyPairRSA: byte[] getSignature(byte[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
io.flutter.view.FlutterNativeView: io.flutter.view.FlutterView mFlutterView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
io.flutter.app.FlutterActivityDelegate$1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int)
com.jcraft.jsch.jcraft.HMACMD5: void update(byte[],int,int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
com.jcraft.jsch.ChannelExec: void setAgentForwarding(boolean)
com.jcraft.jsch.IO: int getByte()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
com.journeyapps.barcodescanner.BarcodeView: BarcodeView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
io.flutter.embedding.engine.loader.ApplicationInfoLoader
com.jcraft.jsch.Buffer: void putLong(long)
io.flutter.embedding.android.FlutterSplashView$1: FlutterSplashView$1(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onUserLeaveHint()
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpATTRS lstat(java.lang.String)
com.jcraft.jsch.Buffer: void rewind()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.plugins.sharedpreferences.R$styleable: int[] GradientColor
com.jcraft.jsch.Packet: void padding(int)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: java.lang.String TAG
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
com.jcraft.jsch.KeyPairPKCS8: KeyPairPKCS8(com.jcraft.jsch.JSch)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.android.exoplayer2.ui.SubtitleView: void setStyle(com.google.android.exoplayer2.text.CaptionStyleCompat)
com.jcraft.jsch.KeyExchange: com.jcraft.jsch.HASH sha
com.jcraft.jsch.ProxySOCKS4: java.lang.String proxy_host
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager,io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
com.jcraft.jsch.jce.ARCFOUR256: void init(int,byte[],byte[])
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
io.flutter.embedding.engine.plugins.PluginRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
com.jcraft.jsch.ChannelSftp: ChannelSftp()
com.jcraft.jsch.ChannelSftp: java.lang.String isUnique(java.lang.String)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void announce(java.lang.String)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.Class fragmentClass
io.flutter.plugins.urllauncher.R$id: int line3
com.jcraft.jsch.OpenSSHConfig$MyConfig: java.lang.String getUser()
io.flutter.embedding.android.FlutterView$RenderMode
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.jcraft.jsch.IO: void setExtOutputStream(java.io.OutputStream,boolean)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
io.flutter.plugins.sharedpreferences.R$layout: int custom_dialog
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.jcraft.jsch.Buffer: byte[] getString(int[],int[])
com.jcraft.jsch.ChannelSession: void setEnv(java.util.Hashtable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
io.flutter.plugins.urllauncher.R$layout: int notification_template_part_time
io.flutter.plugin.common.BasicMessageChannel: java.lang.String TAG
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.SftpATTRS _stat(byte[])
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.jcraft.jsch.KeyPair: byte[] getPrivateKey()
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerVisibilityListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$VisibilityListener)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen splashScreen
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.flutter.plugin.common.MethodChannel: void resizeChannelBuffer(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void requestAutofill()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table[] values()
com.jcraft.jsch.ChannelDirectTCPIP: int LOCAL_MAXIMUM_PACKET_SIZE
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
androidx.fragment.app.Fragment: boolean isHidden()
com.jcraft.jsch.Cipher: int getBlockSize()
com.jcraft.jsch.SftpATTRS: int SSH_FILEXFER_ATTR_ACMODTIME
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.DecoderFactory getDecoderFactory()
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
com.jcraft.jsch.ChannelForwardedTCPIP$ConfigDaemon
com.jcraft.jsch.Session: void rekey()
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
com.jcraft.jsch.ConfigRepository$1: int getPort()
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_28
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
com.jcraft.jsch.ChannelX11: byte[] cookie_hex
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void disposeAndroidViewForPlatformView(int)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
com.jcraft.jsch.HostKey: int name2type(java.lang.String)
com.jcraft.jsch.HostKeyRepository: int CHANGED
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
com.jcraft.jsch.jce.SignatureDSA: void update(byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4302(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
com.jcraft.jsch.Channel: int SSH_OPEN_CONNECT_FAILED
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values()
io.flutter.embedding.engine.systemchannels.KeyEventChannel
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_low_pressed
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
io.flutter.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterEngineProvider
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderFetchTimeout
com.jcraft.jsch.Channel: java.io.OutputStream getOutputStream()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
com.jcraft.jsch.GSSContext: boolean isEstablished()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onAttachedToContentProvider(io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: int mContainerId
com.jcraft.jsch.Channel: boolean isEOF()
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
org.threeten.bp.chrono.HijrahEra
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference activeSink
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_INITIAL_ROUTE
com.jcraft.jsch.KeyExchange: int ECDSA
com.jcraft.jsch.Session: int SSH_MSG_KEX_DH_GEX_GROUP
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides BOTH
io.flutter.embedding.android.FlutterFragmentActivity: boolean isDebuggable()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: MethodCallHandlerImpl$1$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1,boolean)
com.jcraft.jsch.Buffer: byte getCommand()
io.flutter.plugin.editing.TextInputPlugin$MinMax
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onEngineWillDestroy()
com.jcraft.jsch.KeyPair: int ECDSA
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
io.flutter.plugin.common.EventChannel: java.lang.String name
com.jcraft.jsch.ChannelSftp$1: void flush()
com.jcraft.jsch.IdentityRepository$Wrapper: IdentityRepository$Wrapper(com.jcraft.jsch.IdentityRepository)
com.jcraft.jsch.ChannelSftp$LsEntrySelector: int BREAK
com.journeyapps.barcodescanner.ViewfinderView: ViewfinderView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.KeyPairPKCS8: byte[] forSSHAgent()
com.jcraft.jsch.jce.SHA512: void update(byte[],int,int)
android.support.v4.media.MediaMetadataCompat
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
com.jcraft.jsch.jce.ARCFOUR: boolean isCBC()
io.flutter.embedding.android.FlutterSplashView: android.os.Bundle splashScreenState
io.flutter.plugin.common.EventChannel$StreamHandler
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
com.jcraft.jsch.ForwardedTCPIPDaemon
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
com.jcraft.jsch.jce.AES256CBC: int bsize
com.jcraft.jsch.IdentityFile: com.jcraft.jsch.JSch jsch
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: android.view.View getPlatformViewById(java.lang.Integer)
com.google.android.exoplayer2.ui.PlayerView: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivity()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_18
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
com.jcraft.jsch.ConfigRepository: com.jcraft.jsch.ConfigRepository nullConfig
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
com.jcraft.jsch.SftpATTRS: int flags
com.google.android.exoplayer2.source.TrackGroupArray: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.Set)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
com.jcraft.jsch.Channel$MyPipedInputStream: int max_buffer_size
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
io.flutter.embedding.engine.systemchannels.LifecycleChannel: java.lang.String TAG
io.flutter.view.FlutterView$FirstFrameListener
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_31
com.jcraft.jsch.ChannelDirectTCPIP: int LOCAL_WINDOW_SIZE_MAX
com.jcraft.jsch.jce.HMACMD5: HMACMD5()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setPlaybackSpeed(float)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.BinaryMessenger messenger()
io.flutter.plugins.pathprovider.R$styleable: int[] GradientColorItem
com.jcraft.jsch.UserAuthPassword: boolean start(com.jcraft.jsch.Session)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_startColor
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_font
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int DOWN
com.jcraft.jsch.ChannelSftp: void quit()
com.jcraft.jsch.jcraft.HMAC: void setH(java.security.MessageDigest)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderQuery
com.jcraft.jsch.Session: int SSH_MSG_CHANNEL_WINDOW_ADJUST
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.jcraft.jsch.KeyPairPKCS8: com.jcraft.jsch.Cipher getCipher(byte[])
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate access$800(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugins.sharedpreferences.R$dimen: int notification_large_icon_height
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.jcraft.jsch.ProxySOCKS4: int DEFAULTPORT
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
com.jcraft.jsch.jce.SignatureRSA: java.security.Signature signature
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
com.jcraft.jsch.KeyPairDSA: KeyPairDSA(com.jcraft.jsch.JSch,byte[],byte[],byte[],byte[],byte[])
com.jcraft.jsch.KeyPairPKCS8: boolean decrypt(byte[])
com.jcraft.jsch.jce.AES128CBC
io.flutter.embedding.android.ExclusiveAppComponent: void detachFromFlutterEngine()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
io.flutter.plugin.platform.PlatformPlugin$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
io.flutter.plugin.common.StringCodec
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
io.flutter.embedding.android.FlutterFragment: java.lang.String TAG
com.jcraft.jsch.ChannelSftp$2: int read()
org.threeten.bp.LocalDate
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: android.os.Bundle extractBundle(java.util.Map)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
com.jcraft.jsch.KeyPair: int writeINTEGER(byte[],int,byte[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask[] values()
android.support.v4.media.AudioAttributesCompatParcelizer
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: SingleViewPresentation$WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel channel
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.android.FlutterActivityLaunchConfigs: FlutterActivityLaunchConfigs()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.SplashScreen provideSplashScreen()
org.threeten.bp.ZonedDateTime: java.lang.Object writeReplace()
io.flutter.app.FlutterActivityEvents: void onCreate(android.os.Bundle)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: FlutterView$SurfaceTextureRegistryEntry(io.flutter.view.FlutterView,long,android.graphics.SurfaceTexture)
io.flutter.plugins.urllauncher.R$drawable: int notify_panel_notification_icon_bg
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldRestoreAndSaveState()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.lang.String TAG
io.flutter.view.FlutterView$2: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
androidx.media.AudioAttributesImplBase
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_endY
androidx.fragment.app.Fragment: android.view.View requireView()
com.jcraft.jsch.RequestAgentForwarding
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getControllerHideOnTouch()
com.jcraft.jsch.ChannelSftp$RequestQueue$Request: long length
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_endY
com.jcraft.jsch.Channel: void setExtOutputStream(java.io.OutputStream,boolean)
com.jcraft.jsch.RequestSubsystem: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel,java.lang.String,boolean)
com.google.android.exoplayer2.ui.SubtitleView: void setView(android.view.View)
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallSuccess(java.lang.String)
com.jcraft.jsch.ChannelSftp$2: byte[] _data
io.flutter.plugin.common.StandardMessageCodec: byte LONG_ARRAY
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void addExistingListenersToActivityPluginBinding()
com.jcraft.jsch.DHG1: com.jcraft.jsch.Packet packet
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
io.flutter.plugins.sharedpreferences.R$drawable: int notification_bg_normal_pressed
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENTC_REMOVE_RSA_IDENTITY
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunDefaultEngine(android.content.Context)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
android.support.v4.media.AudioAttributesImplApi26Parcelizer
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener: void onUserLeaveHint()
com.jcraft.jsch.ChannelSftp$RequestQueue$Request: long offset
com.jcraft.jsch.jce.KeyPairGenECDSA: byte[] s
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.cc_extractor.deluge_client.MainActivity: MainActivity()
com.jcraft.jsch.HostKey: java.lang.String getKey()
io.flutter.app.FlutterActivityDelegate$1$1: io.flutter.app.FlutterActivityDelegate$1 this$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.jcraft.jsch.ProxySOCKS4: java.io.OutputStream out
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.android.FlutterFragmentActivity: void onPostResume()
org.threeten.bp.OffsetDateTime: java.lang.Object writeReplace()
com.jcraft.jsch.IO: void close()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
com.google.android.exoplayer2.ui.PlayerControlView: void setShowVrButton(boolean)
io.flutter.embedding.android.FlutterTextureView: void init()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
io.flutter.app.FlutterApplication: android.app.Activity mCurrentActivity
com.jcraft.jsch.SftpATTRS: int S_IRGRP
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView flutterView
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
com.jcraft.jsch.jce.TripleDESCBC: void update(byte[],int,int,byte[],int)
com.jcraft.jsch.ECDH: byte[] getQ()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: ShimPluginRegistry$ShimRegistrarAggregate(io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_30
io.flutter.view.AccessibilityBridge$4
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.app.FlutterActivityDelegate: void onPostResume()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onSaveInstanceState(android.os.Bundle)
io.flutter.Log: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.embedding.android.FlutterTextureView: boolean isAttachedToFlutterRenderer
io.flutter.embedding.android.FlutterSplashView: boolean hasSplashCompleted()
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_font
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setClipboardData(java.lang.String)
com.jcraft.jsch.ChannelDirectTCPIP: void setOrgIPAddress(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
com.jcraft.jsch.SftpStatVFS: com.jcraft.jsch.SftpStatVFS getStatVFS(com.jcraft.jsch.Buffer)
com.google.android.exoplayer2.ui.StyledPlayerView: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.jcraft.jsch.ChannelSftp: int SSH_FX_PERMISSION_DENIED
io.flutter.plugins.pathprovider.R$id: int line1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType getType()
com.jcraft.jsch.Channel$PassiveInputStream: Channel$PassiveInputStream(com.jcraft.jsch.Channel,java.io.PipedOutputStream)
com.jcraft.jsch.Session: int getTimeout()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
io.flutter.plugin.common.FlutterException: java.lang.String code
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity)
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
io.flutter.embedding.engine.loader.ResourceExtractor: void access$100(java.lang.String,java.util.HashSet)
com.jcraft.jsch.jce.SHA1: void update(byte[],int,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.MAC: void doFinal(byte[],int)
io.flutter.plugins.pathprovider.R$dimen: int notification_small_icon_background_padding
com.jcraft.jsch.ChannelSftp$2: long request_offset
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createEngine(android.content.Context)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
io.flutter.app.FlutterActivityDelegate: void onCreate(android.os.Bundle)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
com.jcraft.jsch.UIKeyboardInteractive
io.flutter.app.FlutterFragmentActivity: void onDestroy()
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_fontVariationSettings
com.jcraft.jsch.jce.MD5: void update(byte[],int,int)
com.jcraft.jsch.RequestPtyReq: int trow
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderQuery
io.flutter.plugins.pathprovider.BuildConfig: boolean DEBUG
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadDartLibrary(int,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.plugins.urllauncher.R$attr: int alpha
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
io.flutter.view.AccessibilityBridge: void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
com.jcraft.jsch.ChannelForwardedTCPIP$ConfigDaemon: ChannelForwardedTCPIP$ConfigDaemon()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
com.jcraft.jsch.Channel: void sendOpenConfirmation()
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
com.jcraft.jsch.KnownHosts: int check(java.lang.String,byte[])
com.google.android.exoplayer2.ui.SubtitleView: void setViewType(int)
com.jcraft.jsch.ChannelSession: byte[] _session
com.jcraft.jsch.IO: void setExtOutputStream(java.io.OutputStream)
com.google.android.exoplayer2.ui.PlayerView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
com.jcraft.jsch.KeyExchange: java.lang.String lang_s2c
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
com.jcraft.jsch.jce.HMAC: void update(byte[],int,int)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
io.flutter.view.FlutterMain: FlutterMain()
com.jcraft.jsch.ChannelShell: void setPtyType(java.lang.String,int,int,int,int)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] x
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.Session: boolean agent_forwarding
com.jcraft.jsch.jce.AES128CBC: int ivsize
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
com.jcraft.jsch.SftpATTRS: int S_IXGRP
com.jcraft.jsch.ChannelSftp: boolean access$400(com.jcraft.jsch.ChannelSftp,byte[],com.jcraft.jsch.ChannelSftp$Header)
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.view.FlutterNativeView: boolean isApplicationRunning()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
com.jcraft.jsch.Session: boolean checkKex(com.jcraft.jsch.Session,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.jcraft.jsch.KeyPair: byte[] encrypt(byte[],byte[][],byte[])
com.jcraft.jsch.DHG1: byte[] e
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
com.google.android.exoplayer2.ui.PlayerView: android.graphics.drawable.Drawable getDefaultArtwork()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
com.jcraft.jsch.jce.AES256CBC: int getIVSize()
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: android.content.SharedPreferences$Editor val$editor
androidx.fragment.app.Fragment: boolean isInLayout()
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_android_fontWeight
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
io.flutter.plugins.urllauncher.R$id: int tag_screen_reader_focusable
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String checkTimestamp(java.io.File,android.content.pm.PackageManager,java.lang.String)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
com.jcraft.jsch.ChannelSftp: void get(java.lang.String,java.io.OutputStream)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_START_PAUSED
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.android.exoplayer2.ui.StyledPlayerControlView
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
io.flutter.view.FlutterView: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.flutter.plugins.pathprovider.R$integer: int status_bar_notification_info_maxnum
com.jcraft.jsch.jcraft.Compression: byte[] uncompress(byte[],int,int[])
io.flutter.plugin.common.ErrorLogResult
com.jcraft.jsch.Buffer: int getInt()
com.jcraft.jsch.Session: int getPort()
androidx.appcompat.widget.AppCompatButton
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField[] values()
com.jcraft.jsch.KeyPairDSA: int key_size
com.dexterous.flutterlocalnotifications.SoundSource: SoundSource(java.lang.String,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.app.Activity getActivity()
com.jcraft.jsch.KeyPairGenECDSA: byte[] getD()
com.jcraft.jsch.KeyPairRSA: boolean parse(byte[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.engine.plugins.PluginRegistry
com.jcraft.jsch.ChannelSession: void setPty(boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.jcraft.jsch.ChannelSftp: int[] ackid
io.flutter.plugins.sharedpreferences.R$dimen: int compat_control_corner_material
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void initLoadingUnitMappingToModuleNames()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterFragment: void onResume()
com.jcraft.jsch.KeyPairDSA: byte[] getSignature(byte[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.jcraft.jsch.SftpStatVFS: long fsid
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode[] values()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_24
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_24
com.dexterous.flutterlocalnotifications.models.MessageDetails
io.flutter.plugins.pathprovider.R$drawable: int notification_action_background
com.jcraft.jsch.Session: void setPassword(byte[])
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] getY()
com.jcraft.jsch.jce.SignatureDSA: void setPrvKey(byte[],byte[],byte[],byte[])
com.jcraft.jsch.RequestPtyReq: void setTerminalMode(byte[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch
io.flutter.view.FlutterNativeView: void attachViewAndActivity(io.flutter.view.FlutterView,android.app.Activity)
androidx.fragment.app.Fragment: int getNextAnim()
com.jcraft.jsch.ChannelSubsystem: void setPtySize(int,int,int,int)
com.jcraft.jsch.PortWatcher: void run()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_action_clickable_span
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.String TAG
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
io.flutter.embedding.android.FlutterView: void init()
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_centerColor
com.jcraft.jsch.KeyExchange: java.lang.String key_alg_name
org.threeten.bp.chrono.ThaiBuddhistEra: java.lang.Object writeReplace()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
io.flutter.embedding.android.SplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
androidx.media.AudioAttributesImplApi26
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_6
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
io.flutter.plugins.pathprovider.R$color: int secondary_text_default_material_light
com.jcraft.jsch.jce.HMAC: void update(int)
com.google.android.exoplayer2.ui.StyledPlayerView: void setResizeMode(int)
com.jcraft.jsch.jce.HMACSHA1: void update(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
com.jcraft.jsch.Session: byte[] nomoresessions
com.jcraft.jsch.ChannelSftp: void sendOPENR(byte[])
com.jcraft.jsch.ChannelSftp: java.lang.String localAbsolutePath(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String initialRoute
io.flutter.view.FlutterView: void resetWillNotDraw(boolean,boolean)
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.jce.SignatureRSA: boolean verify(byte[])
com.jcraft.jsch.JSch: void addIdentity(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.pathprovider.R$dimen: int notification_top_pad
com.jcraft.jsch.jce.SignatureECDSA: void bzero(byte[])
androidx.fragment.app.Fragment: void performResume()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.urllauncher.R$dimen: int compat_control_corner_material
io.flutter.plugins.urllauncher.R$dimen: int compat_button_padding_horizontal_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
com.jcraft.jsch.jce.ARCFOUR256: boolean isCBC()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
com.jcraft.jsch.SftpATTRS: int S_IWGRP
com.jcraft.jsch.SftpATTRS: int S_IFBLK
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: android.app.Service getService()
com.jcraft.jsch.ChannelSftp$LsEntry: com.jcraft.jsch.ChannelSftp this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
com.jcraft.jsch.jce.ECDHN: byte[] Q_array
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.jcraft.jsch.KeyPairGenRSA: byte[] getC()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
com.jcraft.jsch.SftpATTRS: boolean isReg()
com.jcraft.jsch.KeyPairECDSA: byte[] getKeyTypeName()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
com.jcraft.jsch.jcraft.HMACMD5: void update(int)
com.jcraft.jsch.ChannelSftp: int SSH_FILEXFER_ATTR_ACMODTIME
com.jcraft.jsch.ChannelSftp: boolean isPattern(java.lang.String,byte[][])
com.jcraft.jsch.IO: void put(byte[],int,int)
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onLongPress(int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
com.jcraft.jsch.ChannelAgentForwarding: com.jcraft.jsch.Buffer wbuf
com.jcraft.jsch.JSch: com.jcraft.jsch.Session getSession(java.lang.String)
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.jcraft.jsch.ChannelSftp: java.io.InputStream get(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.jcraft.jsch.JSch: com.jcraft.jsch.Logger getLogger()
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
com.jcraft.jsch.Session: byte[] password
com.jcraft.jsch.KeyPairRSA: byte[] prv_array
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String appBundlePath
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
io.flutter.app.FlutterPluginRegistry: android.content.Context access$100(io.flutter.app.FlutterPluginRegistry)
io.flutter.view.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
com.jcraft.jsch.jce.SignatureECDSA: java.security.KeyFactory keyFactory
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: java.util.Deque pendingEvents
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngine val$engineToCleanUpOnDestroy
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
io.flutter.app.FlutterFragmentActivity: java.lang.Object valuePublishedByPlugin(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
com.jcraft.jsch.Session: com.jcraft.jsch.Session$GlobalRequestReply grr
com.jcraft.jsch.jcraft.HMACSHA196: java.lang.String name
com.jcraft.jsch.ChannelSftp: java.lang.String lpwd()
com.jcraft.jsch.DHECN: int SSH_MSG_KEX_ECDH_REPLY
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.jcraft.jsch.jce.AES128CTR: javax.crypto.Cipher cipher
com.jcraft.jsch.SftpATTRS: int S_IFLNK
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
org.threeten.bp.MonthDay: java.lang.Object readResolve()
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENT_SIGN_RESPONSE
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
io.flutter.embedding.android.AndroidKeyProcessor
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void tryCommittingInBackground(android.content.SharedPreferences$Editor,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_20
com.jcraft.jsch.ConfigRepository$1
com.jcraft.jsch.SftpATTRS: boolean isDir()
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource DrawableResource
com.jcraft.jsch.ChannelSftp: void setPtySize(int,int,int,int)
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaDescriptionCompat
io.flutter.view.AccessibilityBridge: int ACTION_SHOW_ON_SCREEN
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay
io.flutter.embedding.android.FlutterActivity: void onStart()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_23
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate: void asyncWaitForVsync(long)
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
com.jcraft.jsch.Session: com.jcraft.jsch.JSch jsch
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1
io.flutter.plugins.sharedpreferences.BuildConfig: java.lang.String BUILD_TYPE
com.jcraft.jsch.jce.DH: void setF(java.math.BigInteger)
com.jcraft.jsch.ChannelSftp$3: java.util.Vector val$v
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.jcraft.jsch.Util: java.lang.String[] chars
com.jcraft.jsch.Util: java.lang.String diffString(java.lang.String,java.lang.String[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
com.jcraft.jsch.jce.AES192CTR: void init(int,byte[],byte[])
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(io.flutter.plugin.common.BinaryMessenger,java.lang.String,int)
com.jcraft.jsch.Session: void setProxy(com.jcraft.jsch.Proxy)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher: void didChangeEditingState(boolean,boolean,boolean)
io.flutter.plugins.pathprovider.R$styleable: int FontFamily_fontProviderPackage
com.jcraft.jsch.Session: void delPortForwardingL(int)
com.jcraft.jsch.Session: void delPortForwardingR(int)
com.jcraft.jsch.ChannelDirectTCPIP: void init()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
com.jcraft.jsch.jce.SignatureDSA: void setPubKey(byte[],byte[],byte[],byte[])
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_DART_PROFILING
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
io.flutter.plugins.urllauncher.R$dimen: int compat_notification_large_icon_max_width
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int)
io.flutter.app.FlutterPluginRegistry: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.pathprovider.StorageDirectoryMapper: StorageDirectoryMapper()
com.jcraft.jsch.ChannelSftp$LsEntry: java.lang.String getLongname()
com.jcraft.jsch.jce.TripleDESCBC: TripleDESCBC()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.urllauncher.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setDefaultStereoMode(int)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addViewDestroyListener(io.flutter.plugin.common.PluginRegistry$ViewDestroyListener)
com.jcraft.jsch.ChannelSftp$LsEntrySelector: int select(com.jcraft.jsch.ChannelSftp$LsEntry)
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.ChannelSftp: void get(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor)
com.jcraft.jsch.HASH: byte[] digest()
io.flutter.app.FlutterFragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugins.urllauncher.R$dimen: int notification_large_icon_height
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamily_fontProviderFetchTimeout
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
com.jcraft.jsch.Session: void applyConfigChannel(com.jcraft.jsch.ChannelSession)
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface getContentProviderControlSurface()
com.jcraft.jsch.Channel: byte[] type
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] ep
com.jcraft.jsch.ChannelSftp$RequestQueue: com.jcraft.jsch.ChannelSftp$RequestQueue$Request get(int)
com.jcraft.jsch.JSch: void removeIdentity(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
io.flutter.view.FlutterView: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.FlutterView$Provider: io.flutter.view.FlutterView getFlutterView()
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_normal
com.jcraft.jsch.Session: int SSH_MSG_KEX_DH_GEX_INIT
com.jcraft.jsch.ChannelSubsystem: void setPtyType(java.lang.String,int,int,int,int)
com.jcraft.jsch.ChannelSftp: void _setStat(java.lang.String,com.jcraft.jsch.SftpATTRS)
org.threeten.bp.YearMonth: java.lang.Object readResolve()
com.jcraft.jsch.ChannelSubsystem: void setEnv(java.util.Hashtable)
io.flutter.embedding.engine.loader.FlutterLoader$Settings
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.BitmapSource largeIconBitmapSource
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
com.jcraft.jsch.jce.DH: byte[] e_array
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_DART_PROFILING
androidx.appcompat.widget.ActionMenuView
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setStatusText(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int[] FontFamily
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: PathProviderPlugin$UiThreadExecutor(io.flutter.plugins.pathprovider.PathProviderPlugin$1)
io.flutter.plugins.sharedpreferences.R$styleable: int[] FontFamily
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
io.flutter.plugins.pathprovider.R$id
com.jcraft.jsch.ChannelForwardedTCPIP$ConfigLHost: ChannelForwardedTCPIP$ConfigLHost()
io.flutter.embedding.engine.FlutterEngineCache
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
com.jcraft.jsch.HostKey: HostKey(java.lang.String,java.lang.String,int,byte[],java.lang.String)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
com.jcraft.jsch.jce.ARCFOUR128: void init(int,byte[],byte[])
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.flutter.embedding.android.FlutterActivity: void onStop()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String OLD_GEN_HEAP_SIZE_META_DATA_KEY
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_startX
com.jcraft.jsch.Util: byte val(byte)
com.jcraft.jsch.KeyPairGenECDSA: void init(int)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
com.jcraft.jsch.jce.DH: java.math.BigInteger e
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalCacheDirectories()
com.jcraft.jsch.DHG1
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
io.flutter.plugins.urllauncher.UrlLauncher: void setActivity(android.app.Activity)
com.jcraft.jsch.ChannelSftp: boolean access$300(com.jcraft.jsch.ChannelSftp,int[],com.jcraft.jsch.ChannelSftp$Header)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup
com.jcraft.jsch.ChannelX11: boolean equals(byte[],byte[])
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
io.flutter.plugins.pathprovider.R$styleable: int ColorStateListItem_android_alpha
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
com.jcraft.jsch.Session$GlobalRequestReply: Session$GlobalRequestReply(com.jcraft.jsch.Session)
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENT_FAILURE
com.jcraft.jsch.KeyPair: void copy(com.jcraft.jsch.KeyPair)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
io.flutter.plugins.pathprovider.R$dimen: int compat_notification_large_icon_max_height
io.flutter.embedding.engine.loader.FlutterLoader$2$1
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
com.jcraft.jsch.ProxyHTTP: void setUserPasswd(java.lang.String,java.lang.String)
com.jcraft.jsch.JSchException: JSchException(java.lang.String)
com.jcraft.jsch.DHGEX: com.jcraft.jsch.DH dh
com.google.android.exoplayer2.metadata.mp4.SlowMotionData: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.KeyPairGenRSA: byte[] getQ()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeViewImmediate(java.lang.Object[])
com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)
com.jcraft.jsch.KeyPair: byte[] getSignature(byte[])
com.jcraft.jsch.IO: boolean out_dontclose
com.jcraft.jsch.Logger: int ERROR
com.google.android.exoplayer2.metadata.mp4.SlowMotionData$Segment: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: int getTargetRequestCode()
io.flutter.plugin.platform.PlatformViewsController$1: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
com.jcraft.jsch.RequestAgentForwarding: void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel)
androidx.fragment.app.FragmentActivity: void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
io.flutter.plugin.common.MethodCall
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: android.view.KeyEvent findPendingEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.jcraft.jsch.JSch: java.util.Vector getIdentityNames()
io.flutter.app.FlutterActivityDelegate$1: void onFirstFrame()
com.jcraft.jsch.jce.BlowfishCBC: BlowfishCBC()
com.jcraft.jsch.Channel: void setExtOutputStream(java.io.OutputStream)
com.jcraft.jsch.jce.AES128CBC: AES128CBC()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.jcraft.jsch.jce.HMAC: javax.crypto.Mac mac
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
com.jcraft.jsch.KeyPairGenRSA: byte[] getEP()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback getImeSyncCallback()
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int CANCEL
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
io.flutter.view.AccessibilityBridge: int getHoveredObjectId()
com.jcraft.jsch.SftpStatVFS: long getFreeINodes()
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.jcraft.jsch.Compression: byte[] compress(byte[],int,int[])
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.embedding.engine.loader.FlutterLoader$2$1: FlutterLoader$2$1(io.flutter.embedding.engine.loader.FlutterLoader$2)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: ShimPluginRegistry$ShimRegistrarAggregate()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void teardownChannel()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldAttachEngineToActivity
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String initialRoute
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
com.jcraft.jsch.ChannelSubsystem: java.lang.String subsystem
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.BitmapSource bigPictureBitmapSource
io.flutter.view.FlutterNativeView: void detachFromFlutterView()
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_startY
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean handleDeeplinking
com.jcraft.jsch.HostKeyRepository: void remove(java.lang.String,java.lang.String)
com.google.android.exoplayer2.ui.PlayerControlView: void setShowNextButton(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
com.jcraft.jsch.ChannelSftp$1: byte[] _data
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.pm.PackageManager mPackageManager
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.jcraft.jsch.KeyPair: int DSA
io.flutter.plugin.platform.PlatformViewFactory
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.jcraft.jsch.jcraft.HMAC: void update(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
androidx.media.AudioAttributesImplApi21
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
com.jcraft.jsch.jce.AES192CTR: AES192CTR()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
io.flutter.view.FlutterView
com.jcraft.jsch.DH: void init()
com.jcraft.jsch.jce.ARCFOUR: int getBlockSize()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
io.flutter.plugins.urllauncher.R$id: int notification_background
androidx.fragment.app.Fragment: boolean getRetainInstance()
com.jcraft.jsch.ChannelSession: int twp
com.jcraft.jsch.Session$1
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
androidx.fragment.app.Fragment: int CREATED
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
com.jcraft.jsch.ChannelExec: void setErrStream(java.io.OutputStream,boolean)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.util.HashSet mResources
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewInsetBottom
io.flutter.plugins.urllauncher.R
io.flutter.plugins.urllauncher.UrlLauncher: android.content.Context applicationContext
com.jcraft.jsch.jce.HMACSHA1
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView)
com.jcraft.jsch.SftpATTRS: int S_IREAD
com.jcraft.jsch.IdentityRepository: int UNAVAILABLE
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldAttachEngineToActivity
com.jcraft.jsch.KeyPairECDSA: java.lang.String[] names
io.flutter.plugins.pathprovider.R$id: int tag_accessibility_heading
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.jcraft.jsch.ChannelSftp: int SSH_FXF_APPEND
com.jcraft.jsch.Channel$1: void write(int)
com.jcraft.jsch.Util$1: void run()
io.flutter.plugins.urllauncher.R$id: int right_side
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
com.jcraft.jsch.ChannelSftp$RequestQueue: com.jcraft.jsch.ChannelSftp$RequestQueue$Request[] rrq
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
com.jcraft.jsch.Session: com.jcraft.jsch.Buffer read(com.jcraft.jsch.Buffer)
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
com.jcraft.jsch.SftpStatVFS: long getFreeBlocks()
io.flutter.embedding.android.FlutterFragmentActivity: void configureStatusBarForFullscreenFlutterExperience()
com.jcraft.jsch.Buffer: void putByte(byte[])
io.flutter.embedding.engine.FlutterEngineGroup: java.util.List activeEngines
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Map globalRegistrarMap
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
com.jcraft.jsch.SftpStatVFS: long namemax
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
com.jcraft.jsch.ChannelSftp: boolean interactive
com.jcraft.jsch.ProxyHTTP: java.io.OutputStream out
com.jcraft.jsch.jcraft.HMACSHA1
com.jcraft.jsch.ChannelSftp$RequestQueue$OutOfOrderException
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
com.jcraft.jsch.KeyPairECDSA: int getKeySize()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.jcraft.jsch.ChannelSftp: void get(java.lang.String,java.io.OutputStream,com.jcraft.jsch.SftpProgressMonitor)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
androidx.appcompat.widget.LinearLayoutCompat
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry: long id
com.google.android.exoplayer2.ui.PlayerView: int getResizeMode()
com.jcraft.jsch.Channel$MyPipedInputStream: Channel$MyPipedInputStream(com.jcraft.jsch.Channel,int)
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
io.flutter.plugins.urllauncher.R$id: int action_text
com.jcraft.jsch.ChannelSftp$1: com.jcraft.jsch.ChannelSftp$Header header
io.flutter.view.FlutterView$ViewportMetrics: int physicalViewPaddingLeft
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditableSizeAndTransform(double,double,double[])
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_SETSTAT
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
com.jcraft.jsch.KeyPairRSA: byte[] p_array
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void setEventResponseHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: FlutterRenderer$SurfaceTextureRegistryEntry$1(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
io.flutter.plugins.pathprovider.R$drawable: int notification_bg
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
io.flutter.plugin.common.PluginRegistry$Registrar: android.content.Context activeContext()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_ATTACH_ENGINE_TO_ACTIVITY
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
io.flutter.view.TextureRegistry
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
com.jcraft.jsch.RequestWindowChange: int width_columns
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
com.jcraft.jsch.jcraft.Compression: byte[] compress(byte[],int,int[])
com.jcraft.jsch.ChannelSftp$RequestQueue: void init()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.jcraft.jsch.JSch: boolean removeSession(com.jcraft.jsch.Session)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.jcraft.jsch.ChannelSftp: void sendREAD(byte[],long,int)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.ChannelX11: int TIMEOUT
com.jcraft.jsch.ChannelSftp$1: boolean init
com.jcraft.jsch.Session: com.jcraft.jsch.UserInfo getUserInfo()
com.jcraft.jsch.Channel: boolean eof_local
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_7
io.flutter.plugin.platform.PlatformViewsController$1$1: java.lang.Runnable val$onComplete
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DART_FLAGS
io.flutter.plugins.pathprovider.R$drawable: int notification_bg_normal_pressed
com.jcraft.jsch.IO: boolean in_dontclose
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
com.jcraft.jsch.KeyPair: int UNKNOWN
io.flutter.plugins.pathprovider.R$color
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.graphics.Bitmap getBitmap()
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource,java.lang.Boolean)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
io.flutter.embedding.android.DrawableSplashScreen: android.graphics.drawable.Drawable drawable
com.jcraft.jsch.ChannelShell: void setEnv(byte[],byte[])
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: AndroidKeyProcessor$EventResponder(android.view.View,io.flutter.plugin.editing.TextInputPlugin)
com.jcraft.jsch.jce.ECDHN: java.security.interfaces.ECPublicKey publicKey
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.jcraft.jsch.ChannelSftp: void sendOPENA(byte[])
io.flutter.view.FlutterNativeView: void runFromBundle(io.flutter.view.FlutterRunArguments)
com.jcraft.jsch.Session: java.lang.String getConfig(java.lang.String)
com.jcraft.jsch.Channel$1: com.jcraft.jsch.Channel val$channel
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.google.android.exoplayer2.ui.PlayerView: void setShowFastForwardButton(boolean)
com.jcraft.jsch.ChannelForwardedTCPIP$Config: int allocated_rport
io.flutter.plugins.pathprovider.R$style: int Widget_Compat_NotificationActionContainer
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair loadPPK(com.jcraft.jsch.JSch,byte[])
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Void doInBackground(java.lang.Void[])
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
io.flutter.app.FlutterPluginRegistry: void onPreEngineRestart()
com.jcraft.jsch.DHECN: byte[] Q_C
io.flutter.plugins.sharedpreferences.R$integer: R$integer()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.fragment.app.Fragment: Fragment(int)
com.jcraft.jsch.Session: void send_newkeys()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
com.jcraft.jsch.ProxySOCKS5: java.lang.String proxy_host
com.jcraft.jsch.Buffer: byte[][] getBytes(int,java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
androidx.fragment.app.Fragment: int getNextTransition()
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient this$1
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.jcraft.jsch.ChannelSftp: java.util.Vector glob_remote(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
com.jcraft.jsch.ChannelSftp: void disconnect()
com.jcraft.jsch.jce.SHA256
io.flutter.embedding.engine.FlutterEngineGroup
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.jcraft.jsch.Session: byte[] I_S
io.flutter.embedding.android.FlutterFragmentActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToBackground()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_CACHE_SKSL
com.jcraft.jsch.HostKey: int SSHRSA
androidx.fragment.app.Fragment: boolean mRetainInstance
com.jcraft.jsch.JSch: void removeAllIdentity()
com.jcraft.jsch.IO: void put(com.jcraft.jsch.Packet)
androidx.savedstate.Recreator
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterImageView: void pause()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2402(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.android.FlutterSplashView$3: void run()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3200(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.jcraft.jsch.jcraft.HMACMD596: HMACMD596()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.jcraft.jsch.Random
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
com.jcraft.jsch.LocalIdentityRepository
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
io.flutter.embedding.android.FlutterFragmentActivity: void onCreate(android.os.Bundle)
com.jcraft.jsch.ChannelSftp$2: com.jcraft.jsch.SftpProgressMonitor val$monitor
com.jcraft.jsch.Util: void bzero(byte[])
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.jcraft.jsch.ChannelAgentForwarding: com.jcraft.jsch.Buffer mbuf
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_4
io.flutter.app.FlutterPluginRegistry: android.content.Context mAppContext
io.flutter.plugin.platform.PlatformViewsController$1
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENTC_RSA_CHALLENGE
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] values()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.DHG1: byte[] g
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
androidx.fragment.app.FragmentActivity: boolean mStartedIntentSenderFromFragment
io.flutter.plugins.pathprovider.R$drawable: int notification_tile_bg
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.engine.systemchannels.RestorationChannel
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterSplashView flutterSplashView
io.flutter.embedding.android.FlutterEngineConfigurator
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_28
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
com.jcraft.jsch.HostKeyRepository: java.lang.String getKnownHostsRepositoryID()
io.flutter.embedding.android.DrawableSplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
com.jcraft.jsch.Session: int max_auth_tries
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.flutter.embedding.engine.systemchannels.TextInputChannel
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.app.FlutterActivityDelegate$1: io.flutter.app.FlutterActivityDelegate this$0
com.jcraft.jsch.KnownHosts
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
com.jcraft.jsch.IdentityRepository$Wrapper: java.util.Vector cache
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.fragment.app.Fragment: boolean mUserVisibleHint
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
com.jcraft.jsch.ChannelSftp: void exit()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: void run()
com.jcraft.jsch.PortWatcher: void delPort(com.jcraft.jsch.Session,java.lang.String,int)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
io.flutter.embedding.engine.FlutterEngineCache: boolean contains(java.lang.String)
com.jcraft.jsch.SftpStatVFS: long favail
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.jcraft.jsch.ChannelSftp$2: int read(byte[])
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
com.jcraft.jsch.Session: boolean isAuthed
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.jcraft.jsch.ChannelSftp: void _get(java.lang.String,java.io.OutputStream,com.jcraft.jsch.SftpProgressMonitor,int,long)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String VM_SNAPSHOT_DATA_KEY
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
io.flutter.plugins.urllauncher.R$attr: int fontStyle
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$4800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.FlutterMain: void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
io.flutter.view.FlutterView: void preRun()
androidx.fragment.app.Fragment: boolean isResumed()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.jcraft.jsch.ChannelSftp: int SSH_FXF_READ
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
com.google.android.exoplayer2.Format: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.ChannelSftp: void setTerminalMode(byte[])
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG
com.jcraft.jsch.Session: void disconnect()
com.jcraft.jsch.Session: com.jcraft.jsch.HostKey getHostKey()
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.exoplayer2.ui.PlayerView: android.view.View[] getAdOverlayViews()
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.jcraft.jsch.Identity: void clear()
com.jcraft.jsch.Session: boolean in_kex
com.jcraft.jsch.UserAuthKeyboardInteractive: boolean start(com.jcraft.jsch.Session)
com.jcraft.jsch.KeyPairDSA: KeyPairDSA(com.jcraft.jsch.JSch)
com.journeyapps.barcodescanner.BarcodeView: void setDecoderFactory(com.journeyapps.barcodescanner.DecoderFactory)
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
com.google.android.exoplayer2.ui.PlayerView: void setShowMultiWindowTimeBar(boolean)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
io.flutter.plugin.common.StandardMessageCodec
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
io.flutter.plugin.common.PluginRegistry$Registrar: io.flutter.view.FlutterView view()
io.flutter.app.FlutterActivityDelegate: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
io.flutter.app.FlutterPluginRegistry: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
com.jcraft.jsch.jcraft.HMACMD596: byte[] _buf16
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
com.jcraft.jsch.jce.ARCFOUR256: int getIVSize()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.jcraft.jsch.OpenSSHConfig$MyConfig: com.jcraft.jsch.OpenSSHConfig this$0
com.journeyapps.barcodescanner.DecoratedBarcodeView
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedStyles(boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()
com.jcraft.jsch.Proxy: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent launchIntent
com.jcraft.jsch.Session: void setInputStream(java.io.InputStream)
com.jcraft.jsch.ChannelSftp: java.util.Hashtable extensions
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
com.jcraft.jsch.Packet: Packet(com.jcraft.jsch.Buffer)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State valueOf(java.lang.String)
com.jcraft.jsch.ChannelSftp$LsEntrySelector: int CONTINUE
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer decodeMessage(java.nio.ByteBuffer)
com.jcraft.jsch.KeyPairRSA: void dispose()
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToForeground()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getCachedEngineId()
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
com.jcraft.jsch.ChannelExec: void setErrStream(java.io.OutputStream)
com.jcraft.jsch.jce.SHA1: java.security.MessageDigest md
androidx.fragment.app.FragmentActivity: void onLowMemory()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onRestoreInstanceState(android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1
io.flutter.embedding.engine.renderer.RenderSurface: void pause()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderPackage
com.jcraft.jsch.ChannelDirectTCPIP: java.lang.String host
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
com.jcraft.jsch.jcraft.Compression: byte[] tmpbuf
io.flutter.app.FlutterActivity: io.flutter.view.FlutterView getFlutterView()
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.android.exoplayer2.ui.TrackSelectionView: boolean getIsDisabled()
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
io.flutter.plugins.pathprovider.R$styleable: int GradientColor_android_startX
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_19
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.app.FlutterActivityDelegate: void onNewIntent(android.content.Intent)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener
org.threeten.bp.ZoneRegion
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void detachFromBroadcastReceiver()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
com.jcraft.jsch.Signature: boolean verify(byte[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
io.flutter.embedding.engine.loader.FlutterLoader
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
io.flutter.plugins.sharedpreferences.R$styleable
com.jcraft.jsch.KeyPairPKCS8: byte[] getEnd()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
io.flutter.BuildConfig: BuildConfig()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
com.jcraft.jsch.IO: void out_close()
com.jcraft.jsch.KeyPair: java.lang.String[] header3
io.flutter.plugin.common.EventChannel: void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler)
com.jcraft.jsch.DHG14: byte[] I_S
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getCachedEngineId()
io.flutter.Log: int INFO
org.threeten.bp.chrono.HijrahDate: java.lang.Object readResolve()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.plugin.platform.PlatformViewsController
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit valueOf(java.lang.String)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size getFramingRectSize()
com.jcraft.jsch.ChannelSftp: int SSH_FX_EOF
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.UserAuthGSSAPIWithMIC
io.flutter.plugin.platform.VirtualDisplayController$1: android.view.View val$embeddedView
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.jcraft.jsch.ChannelForwardedTCPIP: java.lang.String normalize(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.jcraft.jsch.ConfigRepository
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.pathprovider.R$dimen
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
io.flutter.plugins.urllauncher.R$style: int TextAppearance_Compat_Notification_Title
com.jcraft.jsch.RequestX11: RequestX11()
io.flutter.embedding.android.AndroidKeyProcessor: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry
io.flutter.view.FlutterNativeView$1: void onFlutterUiNoLongerDisplayed()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
com.jcraft.jsch.Session: java.lang.String username
io.flutter.app.FlutterPluginRegistry: java.util.List mUserLeaveHintListeners
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setAnimationEnabled(boolean)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager getWindowManager()
io.flutter.embedding.engine.plugins.service.ServiceAware: void onAttachedToService(io.flutter.embedding.engine.plugins.service.ServicePluginBinding)
com.jcraft.jsch.jce.ARCFOUR128: int ivsize
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationCancel(android.animation.Animator)
com.jcraft.jsch.MAC
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap access$1000(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_19
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
com.jcraft.jsch.ProxyHTTP: int proxy_port
io.flutter.embedding.android.FlutterActivityLaunchConfigs
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation
io.flutter.view.FlutterNativeView: java.lang.String TAG
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.jce.ECDHN: byte[] insert0(byte[])
com.jcraft.jsch.UserAuth: UserAuth()
com.jcraft.jsch.SftpATTRS: int S_IFMT
com.jcraft.jsch.HostKey: java.lang.String comment
io.flutter.app.FlutterActivityDelegate
com.jcraft.jsch.jcraft.HMAC: byte[] k_ipad
com.jcraft.jsch.ChannelForwardedTCPIP$Config: java.lang.String target
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.jcraft.jsch.DHGEX: com.jcraft.jsch.Buffer buf
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatio(float)
com.jcraft.jsch.Session: void setTimeout(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.jcraft.jsch.ChannelForwardedTCPIP: void delPort(com.jcraft.jsch.Session)
com.jcraft.jsch.SignatureECDSA
com.jcraft.jsch.jce.KeyPairGenECDSA: java.security.spec.ECParameterSpec params
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
com.jcraft.jsch.ChannelSftp$2: byte[] rest_byte
com.google.android.exoplayer2.ui.StyledPlayerControlView: com.google.android.exoplayer2.Player getPlayer()
com.jcraft.jsch.Util: byte[] b64
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[])
com.jcraft.jsch.jce.AES128CTR: void update(byte[],int,int,byte[],int)
androidx.versionedparcelable.ParcelImpl
com.jcraft.jsch.jce.AES256CBC: void init(int,byte[],byte[])
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
com.jcraft.jsch.ForwardedTCPIPDaemon: void setChannel(com.jcraft.jsch.ChannelForwardedTCPIP,java.io.InputStream,java.io.OutputStream)
com.jcraft.jsch.Session: void setPort(int)
com.jcraft.jsch.jce.DH: void setG(java.math.BigInteger)
com.jcraft.jsch.UserAuth: java.lang.String username
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int REMOVE
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.KnownHosts: java.lang.String getKnownHostsFile()
com.jcraft.jsch.Session: void setUserName(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
com.jcraft.jsch.Session: com.jcraft.jsch.IdentityRepository getIdentityRepository()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.view.FlutterView: void addActivityLifecycleListener(io.flutter.plugin.common.ActivityLifecycleListener)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
com.jcraft.jsch.IdentityRepository$Wrapper: boolean add(byte[])
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus NO_ACTIVITY
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.plugins.sharedpreferences.R$attr: int fontWeight
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setResizeMode(int)
com.google.android.exoplayer2.ui.PlayerControlView: void setShowTimeoutMs(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] values()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiDisplayed()
io.flutter.plugins.sharedpreferences.R$attr: int fontProviderCerts
io.flutter.app.FlutterActivity: io.flutter.view.FlutterView createFlutterView(android.content.Context)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.core.widget.NestedScrollView
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.flutter.plugins.pathprovider.R$dimen: int notification_right_icon_size
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.jcraft.jsch.jce.KeyPairGenRSA: byte[] getP()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
io.flutter.embedding.android.FlutterImageView
com.jcraft.jsch.Cipher: void init(int,byte[],byte[])
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.urllauncher.R$styleable: int[] FontFamily
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: void markTextureFrameAvailable(long)
com.jcraft.jsch.ChannelSftp: java.io.InputStream get(java.lang.String,int)
com.jcraft.jsch.jcraft.HMACSHA196: java.lang.String getName()
com.jcraft.jsch.RequestPtyReq: java.lang.String ttype
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.sharedpreferences.R$id: int tag_accessibility_pane_title
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
io.flutter.plugins.pathprovider.PathProviderPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.jcraft.jsch.jce.SHA384: byte[] digest()
com.jcraft.jsch.KeyPairECDSA: byte[] getBegin()
io.flutter.plugins.pathprovider.R$dimen: int compat_button_inset_horizontal_material
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.res.AssetManager mAssetManager
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
io.flutter.app.FlutterActivityDelegate: java.lang.String[] getArgsFromIntent(android.content.Intent)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
com.jcraft.jsch.Session: void setPassword(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.plugins.urllauncher.BuildConfig: boolean DEBUG
com.jcraft.jsch.UserInfo: void showMessage(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onLaunch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.plugin.common.PluginRegistry: boolean hasPlugin(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.jcraft.jsch.jce.SignatureRSA: void setPrvKey(byte[],byte[])
io.flutter.plugins.pathprovider.R$attr: int fontProviderFetchTimeout
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
io.flutter.app.FlutterPluginRegistry: android.app.Activity access$000(io.flutter.app.FlutterPluginRegistry)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.jcraft.jsch.ChannelSftp: boolean _sendCLOSE(byte[],com.jcraft.jsch.ChannelSftp$Header)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.jcraft.jsch.PortWatcher: java.lang.String[] getPortForwarding(com.jcraft.jsch.Session)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
androidx.lifecycle.ReflectiveGenericLifecycleObserver
io.flutter.plugins.pathprovider.R$id: int notification_main_column
io.flutter.embedding.android.FlutterFragment: void onPostResume()
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
io.flutter.embedding.android.DrawableSplashScreen
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.jcraft.jsch.JSch: void addIdentity(java.lang.String,java.lang.String,byte[])
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
com.jcraft.jsch.ChannelExec: void start()
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerAutoShow(boolean)
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_6
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
com.jcraft.jsch.jce.HMACSHA1: java.lang.String getName()
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface
androidx.fragment.app.FragmentActivity: int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
com.jcraft.jsch.Session: void start_discard(com.jcraft.jsch.Buffer,com.jcraft.jsch.Cipher,com.jcraft.jsch.MAC,int,int)
androidx.fragment.app.Fragment$2
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.jcraft.jsch.jce.ARCFOUR128: int getIVSize()
io.flutter.app.FlutterActivityEvents
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
androidx.fragment.app.FragmentActivity: void onPause()
com.jcraft.jsch.DHECN: boolean next(com.jcraft.jsch.Buffer)
com.jcraft.jsch.jcraft.HMACSHA1: HMACSHA1()
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENT_RSA_RESPONSE
com.jcraft.jsch.JSch: com.jcraft.jsch.Logger DEVNULL
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.jcraft.jsch.ECDH: byte[] getSecret(byte[],byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
org.threeten.bp.Period: java.lang.Object readResolve()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
io.flutter.view.FlutterNativeView: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: PlatformViewsChannel$1$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.ChannelSftp$Header
androidx.fragment.app.FragmentActivity: boolean mCreated
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.res.AssetManager mAssetManager
com.jcraft.jsch.Logger: boolean isEnabled(int)
com.jcraft.jsch.jce.Random: Random()
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
com.jcraft.jsch.ChannelExec: void init()
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder
io.flutter.plugins.sharedpreferences.R$dimen: int notification_subtext_size
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
io.flutter.embedding.android.FlutterView$RenderMode: io.flutter.embedding.android.FlutterView$RenderMode[] values()
com.jcraft.jsch.ChannelSftp$3: com.jcraft.jsch.ChannelSftp this$0
com.jcraft.jsch.Util: boolean glob0(byte[],int,byte[],int)
io.flutter.view.FlutterView: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.jcraft.jsch.ChannelSession: void setEnv(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
com.jcraft.jsch.SftpATTRS: int permissions
com.jcraft.jsch.ProxyHTTP: java.io.InputStream in
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
io.flutter.plugins.urllauncher.R$string
com.jcraft.jsch.ChannelX11: ChannelX11()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_9
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
android.support.v4.media.MediaBrowserCompat$ItemReceiver
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_padding_horizontal_material
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowShuffleButton(boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
io.flutter.embedding.android.FlutterFragmentActivity: void configureWindowForTransparency()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
io.flutter.plugins.urllauncher.R$attr: int ttcIndex
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)
com.jcraft.jsch.Session: int setPortForwardingR(java.lang.String)
com.jcraft.jsch.Session$Forwarding: java.lang.String host
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.jcraft.jsch.ProxyHTTP: java.net.Socket socket
io.flutter.app.FlutterActivityEvents: void onUserLeaveHint()
com.jcraft.jsch.jce.KeyPairGenRSA: void init(int)
com.jcraft.jsch.jce.HMAC: int bsize
com.jcraft.jsch.ChannelSftp: java.lang.String lcwd
com.jcraft.jsch.OpenSSHConfig$MyConfig: OpenSSHConfig$MyConfig(com.jcraft.jsch.OpenSSHConfig,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType valueOf(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
io.flutter.app.FlutterFragmentActivity: io.flutter.plugin.common.PluginRegistry pluginRegistry
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PLATFORM_VIEW
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowNextButton(boolean)
io.flutter.app.FlutterPluginRegistry: void detach()
com.jcraft.jsch.JSch$1: void log(int,java.lang.String)
io.flutter.plugins.pathprovider.R$dimen: int compat_button_inset_vertical_material
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_PURGE_PERSISTENT_CACHE
com.jcraft.jsch.SftpStatVFS: int atime
io.flutter.plugin.platform.PlatformViewsController: void flushAllViews()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartEntrypoint(java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.sharedpreferences.R$drawable: int notification_template_icon_bg
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_READDIR
com.jcraft.jsch.ChannelForwardedTCPIP$ConfigLHost
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.SoundSource soundSource
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: MethodCallHandlerImpl$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl,android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadAssets(int,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.pathprovider.R$id: int async
com.jcraft.jsch.KnownHosts: byte[] space
io.flutter.plugins.urllauncher.R$layout: int custom_dialog
io.flutter.plugins.sharedpreferences.BuildConfig: boolean DEBUG
com.jcraft.jsch.ServerSocketFactory
com.jcraft.jsch.KeyPairDSA: void dispose()
com.jcraft.jsch.IO: void put_ext(byte[],int,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
com.jcraft.jsch.ChannelSftp$1
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
com.jcraft.jsch.jce.HMACSHA512: HMACSHA512()
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context,java.lang.String[])
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
com.jcraft.jsch.jce.DH: byte[] getK()
io.flutter.Log: Log()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
com.jcraft.jsch.ChannelSftp: void chown(int,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
com.jcraft.jsch.ChannelAgentForwarding: byte SSH2_AGENTC_ADD_IDENTITY
com.jcraft.jsch.KeyExchange: int getState()
com.google.android.exoplayer2.ui.PlayerView: void setControllerHideOnTouch(boolean)
io.flutter.embedding.android.FlutterFragment: void setDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.jcraft.jsch.DHEC521
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.jce.AES192CBC: boolean isCBC()
com.jhomlala.better_player.CacheWorker: CacheWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
com.jcraft.jsch.SftpATTRS: int getATime()
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_11
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader)
com.jcraft.jsch.jce.ARCFOUR256: int skip
io.flutter.app.FlutterActivity
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.plugin.common.StandardMessageCodec: byte FALSE
io.flutter.view.AccessibilityBridge$SemanticsNode: void log(java.lang.String,boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object[] newArray(int)
com.jcraft.jsch.KeyExchange: int PROPOSAL_MAX
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
io.flutter.embedding.engine.loader.ApplicationInfoLoader: ApplicationInfoLoader()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
com.jcraft.jsch.JSch: void setIdentityRepository(com.jcraft.jsch.IdentityRepository)
com.jcraft.jsch.ChannelExec
io.flutter.plugin.common.PluginRegistry: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getAppBundlePath()
com.jcraft.jsch.ConfigRepository$Config: java.lang.String getHostname()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
io.flutter.app.FlutterFragmentActivity: io.flutter.view.FlutterView getFlutterView()
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView webview
androidx.appcompat.widget.ActivityChooserView$InnerLayout
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
com.jcraft.jsch.KeyPair: void finalize()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.Log: void setLogLevel(int)
com.jcraft.jsch.OpenSSHConfig: java.util.Hashtable access$200()
io.flutter.embedding.android.FlutterSplashView$2
com.jcraft.jsch.ChannelSftp: int SSH_FILEXFER_ATTR_UIDGID
com.jcraft.jsch.Session: com.jcraft.jsch.Cipher s2ccipher
com.journeyapps.barcodescanner.ViewfinderView: void setLaserVisibility(boolean)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
com.jcraft.jsch.RequestPtyReq: void setCode(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.jcraft.jsch.PortWatcher: int rport
com.jcraft.jsch.Session: com.jcraft.jsch.Compression inflater
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: android.view.View view
com.jcraft.jsch.ChannelSftp: boolean isPattern(byte[])
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField valueOf(java.lang.String)
com.jcraft.jsch.ChannelDirectTCPIP: void setHost(java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_28
org.threeten.bp.MonthDay: java.lang.Object writeReplace()
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
io.flutter.plugins.urllauncher.R$styleable: int GradientColorItem_android_color
com.jcraft.jsch.PortWatcher: java.lang.Runnable thread
com.jcraft.jsch.KeyPair: byte[] data
com.jcraft.jsch.Buffer: void setOffSet(int)
com.jcraft.jsch.ChannelSftp: void sendSETSTAT(byte[],com.jcraft.jsch.SftpATTRS)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
com.jcraft.jsch.Session: int seqo
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
io.flutter.plugins.urllauncher.R$attr: int fontWeight
com.jcraft.jsch.CipherNone: int ivsize
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldDestroyEngineWithHost()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry()
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding flutterPluginBinding
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.common.ActivityLifecycleListener
com.jcraft.jsch.KeyPairRSA: byte[] getEQArray()
com.jcraft.jsch.JSch: void setConfig(java.lang.String,java.lang.String)
com.jcraft.jsch.SftpProgressMonitor: long UNKNOWN_SIZE
io.flutter.app.FlutterActivity: boolean hasPlugin(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
io.flutter.plugin.platform.VirtualDisplayController
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterImageView)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.jcraft.jsch.KeyExchange: void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[])
com.jcraft.jsch.KeyExchange: int PROPOSAL_KEX_ALGS
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_16
androidx.fragment.app.Fragment: boolean isAdded()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SYSTRACE
com.jcraft.jsch.ChannelSftp: int SSH_FILEXFER_ATTR_SIZE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.PlayerView: android.view.ViewGroup getAdViewGroup()
com.google.android.exoplayer2.ui.PlayerView: void setUseArtwork(boolean)
io.flutter.view.FlutterNativeView: io.flutter.app.FlutterPluginRegistry access$200(io.flutter.view.FlutterNativeView)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.content.SharedPreferences preferences
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.jcraft.jsch.IO: IO()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: boolean val$response
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
com.jcraft.jsch.DH
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.fragment.app.Fragment: float mPostponedAlpha
com.jcraft.jsch.jce.Random: java.security.SecureRandom random
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.common.MethodChannel$MethodCallHandler: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.sharedpreferences.R$id: int text
com.jcraft.jsch.Buffer: Buffer(byte[])
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setDecoderFactory(com.journeyapps.barcodescanner.DecoderFactory)
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect getPreviewFramingRect()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterView$TransparencyMode)
com.jcraft.jsch.Session: void setDaemonThread(boolean)
io.flutter.plugins.urllauncher.R$string: int status_bar_notification_info_overflow
com.jcraft.jsch.jcraft.HMACSHA196: int getBlockSize()
io.flutter.embedding.android.FlutterImageView$SurfaceKind
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
io.flutter.plugins.urllauncher.UrlLauncher
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
com.jcraft.jsch.KeyPairRSA: byte[] sshrsa
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: androidx.lifecycle.Lifecycle getLifecycle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
io.flutter.BuildConfig: boolean JIT_RELEASE
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT
com.jcraft.jsch.jce.Random
io.flutter.plugin.common.MethodChannel$Result
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
io.flutter.plugins.sharedpreferences.R$styleable: int[] FontFamilyFont
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_endColor
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding(android.content.ContentProvider)
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.FlutterNativeView
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel
io.flutter.app.FlutterPluginRegistry
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterFragment: boolean shouldHandleDeeplinking()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int TOUCH
io.flutter.plugin.common.MethodCall: java.lang.String method
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_SOFTWARE_RENDERING
androidx.fragment.app.Fragment: java.lang.String mWho
io.flutter.app.FlutterFragmentActivity: void onCreate(android.os.Bundle)
com.jcraft.jsch.Session$Forwarding: Session$Forwarding(com.jcraft.jsch.Session)
com.google.android.exoplayer2.ui.PlayerView: void setFastForwardIncrementMs(int)
com.google.android.exoplayer2.ui.StyledPlayerControlView: int getShowTimeoutMs()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
com.jcraft.jsch.Session: byte[] MACs2c
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_RMDIR
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.jcraft.jsch.jce.ARCFOUR256: int ivsize
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.jcraft.jsch.KeyExchange: com.jcraft.jsch.Session session
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.Buffer buf
com.jcraft.jsch.Util: byte[] toBase64(byte[],int,int)
com.jcraft.jsch.Buffer: Buffer()
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.jcraft.jsch.JSch: void addIdentity(java.lang.String,byte[])
io.flutter.view.FlutterNativeView: io.flutter.embedding.engine.FlutterJNI mFlutterJNI
com.jcraft.jsch.ChannelSftp$RequestQueue$Request: int id
com.jcraft.jsch.jcraft.HMACMD596: java.lang.String getName()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
com.jcraft.jsch.KeyPair: java.lang.String getPublicKeyComment()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void installDeferredComponent(int,java.lang.String)
com.jcraft.jsch.Util: java.lang.String quote(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
io.flutter.app.FlutterActivityDelegate$1$1: void onAnimationEnd(android.animation.Animator)
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_tileMode
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
com.jcraft.jsch.jce.KeyPairGenRSA: KeyPairGenRSA()
com.jcraft.jsch.DHG14: com.jcraft.jsch.DH dh
com.jcraft.jsch.SftpStatVFS: long bfree
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
com.jcraft.jsch.jce.MD5
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment flutterFragment
io.flutter.plugins.urllauncher.R: R()
io.flutter.embedding.engine.plugins.PluginRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
com.jcraft.jsch.OpenSSHConfig: java.util.Vector hosts
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.lang.String TAG
io.flutter.app.FlutterActivityDelegate: FlutterActivityDelegate(android.app.Activity,io.flutter.app.FlutterActivityDelegate$ViewFactory)
io.flutter.plugin.platform.PlatformViewRegistry: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiDisplayed()
io.flutter.plugins.pathprovider.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
io.flutter.embedding.android.FlutterFragment: java.lang.String getCachedEngineId()
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String pathToBundle
io.flutter.embedding.android.FlutterSplashView$SavedState$1
io.flutter.view.FlutterView$SurfaceTextureRegistryEntry$1: io.flutter.view.FlutterView$SurfaceTextureRegistryEntry this$1
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.view.AccessibilityViewEmbedder$1
com.jcraft.jsch.jce.DH
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void attachToActivity(android.app.Activity,androidx.lifecycle.Lifecycle)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
com.jcraft.jsch.KeyPair: byte[] parseLines(com.jcraft.jsch.Buffer,int)
com.jcraft.jsch.Session: byte[] keepalivemsg
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.appcompat.widget.SearchView: void setInputType(int)
io.flutter.embedding.engine.FlutterEngineGroup$1
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.plugin.editing.FlutterTextUtils: int ZERO_WIDTH_JOINER
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
com.journeyapps.barcodescanner.ViewfinderView: void setMaskColor(int)
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field[] values()
com.jcraft.jsch.ChannelSftp$LsEntry: ChannelSftp$LsEntry(com.jcraft.jsch.ChannelSftp,java.lang.String,java.lang.String,com.jcraft.jsch.SftpATTRS)
io.flutter.plugins.urllauncher.R$attr: int fontProviderCerts
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
io.flutter.plugins.urllauncher.R$id: int icon
com.jcraft.jsch.ChannelShell: ChannelShell()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect getRect()
io.flutter.embedding.android.AndroidKeyProcessor: AndroidKeyProcessor(android.view.View,io.flutter.embedding.engine.systemchannels.KeyEventChannel,io.flutter.plugin.editing.TextInputPlugin)
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
com.jcraft.jsch.RequestPtyReq: void setTType(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
io.flutter.plugins.urllauncher.R$string: R$string()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugins.pathprovider.R$id: int accessibility_custom_action_7
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
com.jcraft.jsch.JSch: com.jcraft.jsch.IdentityRepository identityRepository
com.jcraft.jsch.ChannelSftp$Header: ChannelSftp$Header(com.jcraft.jsch.ChannelSftp)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding(android.app.Service,androidx.lifecycle.Lifecycle)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.jhomlala.better_player.CacheWorker
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout
io.flutter.plugin.common.ErrorLogResult: int level
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.jcraft.jsch.ConfigRepository$1: java.lang.String[] getValues(java.lang.String)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: android.content.Context activeContext()
com.jcraft.jsch.jce.AES256CTR
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
com.jcraft.jsch.Packet: com.jcraft.jsch.Buffer getBuffer()
com.jcraft.jsch.ChannelSftp$RequestQueue$OutOfOrderException: long offset
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
com.google.android.exoplayer2.ui.SubtitleView: void setCues(java.util.List)
com.jcraft.jsch.JSch: com.jcraft.jsch.IdentityRepository defaultIdentityRepository
io.flutter.plugin.platform.PlatformView: void dispose()
io.flutter.app.FlutterPluginRegistry: FlutterPluginRegistry(io.flutter.view.FlutterNativeView,android.content.Context)
com.jcraft.jsch.KeyPair$ASN1Exception: com.jcraft.jsch.KeyPair this$0
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
com.jcraft.jsch.ChannelSftp$RequestQueue$OutOfOrderException: com.jcraft.jsch.ChannelSftp$RequestQueue this$1
io.flutter.app.FlutterFragmentActivity: io.flutter.app.FlutterActivityEvents eventDelegate
com.jcraft.jsch.UserAuthPassword: UserAuthPassword()
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
com.jcraft.jsch.Identity: boolean isEncrypted()
io.flutter.plugin.editing.ListenableEditingState
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.Packet opacket
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.common.PluginRegistry$ViewDestroyListener: boolean onViewDestroy(io.flutter.view.FlutterNativeView)
io.flutter.view.FlutterView: void onAttachedToWindow()
io.flutter.app.FlutterActivity: void onTrimMemory(int)
com.jcraft.jsch.CipherNone
com.jcraft.jsch.DHGEX: DHGEX()
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
io.flutter.plugins.urllauncher.R$drawable: int notification_action_background
com.jcraft.jsch.Channel$1: int dataLen
com.jcraft.jsch.ChannelX11: int LOCAL_MAXIMUM_PACKET_SIZE
com.jcraft.jsch.SftpStatVFS
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
io.flutter.plugins.sharedpreferences.R$style: int TextAppearance_Compat_Notification_Info
com.google.android.exoplayer2.ui.PlayerView
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
io.flutter.plugin.common.EventChannel: java.lang.String access$200(io.flutter.plugin.common.EventChannel)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
io.flutter.view.FlutterView: java.util.concurrent.atomic.AtomicLong nextTextureId
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler
io.flutter.app.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugins.urllauncher.R$id: int accessibility_custom_action_18
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener
io.flutter.view.FlutterNativeView: io.flutter.app.FlutterPluginRegistry mPluginRegistry
io.flutter.view.FlutterNativeView: android.content.Context mContext
com.jcraft.jsch.SftpStatVFS: long files
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource[] $VALUES
com.jcraft.jsch.Session: void write(com.jcraft.jsch.Packet)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus ACTIVITY_NOT_FOUND
androidx.fragment.app.Fragment: void performDestroy()
io.flutter.plugins.sharedpreferences.R$layout: int notification_action_tombstone
com.jcraft.jsch.jce.SHA256: SHA256()
com.jcraft.jsch.DHG14: int state
androidx.fragment.app.FragmentActivity: java.lang.String REQUEST_FRAGMENT_WHO_TAG
androidx.fragment.app.Fragment: java.lang.String toString()
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTER_INITIALIZATION_ARGS
com.jcraft.jsch.IO: boolean out_ext_dontclose
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_20
io.flutter.plugin.common.PluginRegistry
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
com.jcraft.jsch.KeyPair: byte[] forSSHAgent()
com.jcraft.jsch.jce.HMACSHA256: void update(int)
org.threeten.bp.Instant: java.lang.Object readResolve()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.Context context
com.jcraft.jsch.jce.SignatureRSA: SignatureRSA()
io.flutter.plugins.sharedpreferences.R$styleable: int GradientColor_android_gradientRadius
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$000(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
com.jcraft.jsch.KeyPairDSA: byte[] pub_array
io.flutter.embedding.android.AndroidKeyProcessor: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
com.google.android.exoplayer2.ui.PlayerView: android.view.View getVideoSurfaceView()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
io.flutter.plugin.common.BinaryMessenger$BinaryReply
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_FSTAT
io.flutter.app.FlutterActivity: io.flutter.app.FlutterActivityEvents eventDelegate
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
io.flutter.plugin.platform.PlatformPlugin: int DEFAULT_SYSTEM_UI
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
io.flutter.app.FlutterPluginRegistry: java.util.List mNewIntentListeners
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
io.flutter.plugins.sharedpreferences.R$color: R$color()
io.flutter.plugins.sharedpreferences.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.jcraft.jsch.HostKey: HostKey(java.lang.String,int,byte[])
androidx.appcompat.widget.ActionBarOverlayLayout
com.jcraft.jsch.jce.KeyPairGenDSA: byte[] getX()
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean)
com.jcraft.jsch.jce.HMACSHA256: int getBlockSize()
io.flutter.app.FlutterFragmentActivity: void onTrimMemory(int)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void restoreSystemUiOverlays()
com.jcraft.jsch.JSchAuthCancelException: java.lang.String getMethod()
com.jcraft.jsch.IO
com.jcraft.jsch.ChannelSftp: int SSH_FILEXFER_ATTR_PERMISSIONS
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TIMESTAMP_PREFIX
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: android.content.res.AssetManager androidAssetManager
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView access$000(io.flutter.plugins.urllauncher.WebViewActivity)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
com.jcraft.jsch.ChannelSftp: boolean extension_posix_rename
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
com.jcraft.jsch.KeyExchange: java.lang.String server_host_key
io.flutter.view.FlutterNativeView$1: FlutterNativeView$1(io.flutter.view.FlutterNativeView)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
com.jcraft.jsch.IdentityFile: java.lang.String getAlgName()
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENT_RSA_IDENTITIES_ANSWER
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.jcraft.jsch.ChannelForwardedTCPIP$ConfigLHost: int lport
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: long MAX_PENDING_EVENTS
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
com.jcraft.jsch.KeyPair: int VENDOR_PUTTY
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.jcraft.jsch.DHGEX: int min
io.flutter.plugin.common.StandardMessageCodec: byte BYTE_ARRAY
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.flutter.app.FlutterPluginRegistry$FlutterRegistrar: java.lang.String pluginKey
io.flutter.embedding.android.FlutterSplashView: java.lang.String TAG
com.jcraft.jsch.JSchException: java.lang.Throwable cause
com.jcraft.jsch.jce.HMACMD596
com.jcraft.jsch.ProxySOCKS5: void setUserPasswd(java.lang.String,java.lang.String)
com.jcraft.jsch.jce.DH: void setP(java.math.BigInteger)
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
com.jcraft.jsch.UserAuthGSSAPIWithMIC: UserAuthGSSAPIWithMIC()
com.jcraft.jsch.Util: java.lang.String byte2str(byte[],int,int)
io.flutter.plugins.urllauncher.R$style: int Widget_Compat_NotificationActionText
io.flutter.plugins.sharedpreferences.R$drawable: int notification_tile_bg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: android.os.Handler handler
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
io.flutter.plugin.editing.TextInputPlugin$1: void show()
com.jcraft.jsch.Signature: void init()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$400(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToName
com.jcraft.jsch.Channel: Channel()
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,java.lang.String[],boolean)
io.flutter.plugin.editing.FlutterTextUtils: int CARRIAGE_RETURN
io.flutter.plugins.urllauncher.R$id: int action_image
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.jcraft.jsch.KeyPair$ASN1: boolean isOBJECT()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
io.flutter.view.FlutterView: void updateViewportMetrics()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void destroy()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
com.jcraft.jsch.ChannelShell: void setXForwarding(boolean)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setFlutterLoader(io.flutter.embedding.engine.loader.FlutterLoader)
com.google.android.exoplayer2.ui.PlayerView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
io.flutter.view.FlutterNativeView: io.flutter.view.FlutterView access$000(io.flutter.view.FlutterNativeView)
com.jcraft.jsch.KeyPair: com.jcraft.jsch.HASH hash
org.threeten.bp.zone.Ser: java.lang.Object readResolve()
com.jcraft.jsch.Buffer: void putMPInt(byte[])
com.jcraft.jsch.jce.AES256CTR: boolean isCBC()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
com.jcraft.jsch.ChannelAgentForwarding: byte SSH_AGENTC_ADD_RSA_IDENTITY
androidx.fragment.app.FragmentActivity: void onStop()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
com.dexterous.flutterlocalnotifications.SoundSource
com.jcraft.jsch.ChannelSftp: void chmod(int,java.lang.String)
com.jcraft.jsch.GSSContext: byte[] getMIC(byte[],int,int)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_12
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void keyUp(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
com.jcraft.jsch.Channel: com.jcraft.jsch.Channel getChannel(java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.renderer.RenderSurface: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.jcraft.jsch.ChannelSftp: int SSH_FX_FAILURE
io.flutter.Log: int ERROR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: boolean mFromLayout
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
com.jcraft.jsch.Logger: int WARN
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.work.Worker
com.jcraft.jsch.jcraft.HMACSHA1: void doFinal(byte[],int)
com.jcraft.jsch.Session: com.jcraft.jsch.Compression deflater
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
io.flutter.plugin.common.BinaryCodec: BinaryCodec()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.jcraft.jsch.DHG1: byte[] V_S
android.support.v4.media.session.MediaSessionCompat$Token
com.jcraft.jsch.HostKey: int SSHDSS
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
com.google.android.exoplayer2.ui.StyledPlayerView: void setUseArtwork(boolean)
com.jcraft.jsch.ConfigRepository$Config: int getPort()
com.google.android.exoplayer2.ui.StyledPlayerControlView: boolean getShowShuffleButton()
io.flutter.plugins.sharedpreferences.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
io.flutter.plugin.common.JSONUtil: JSONUtil()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
com.jcraft.jsch.KeyPairRSA
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
io.flutter.plugins.urllauncher.R$drawable: int notification_bg_normal_pressed
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
com.jcraft.jsch.Channel$MyPipedInputStream: Channel$MyPipedInputStream(com.jcraft.jsch.Channel,java.io.PipedOutputStream,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2602(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
com.jcraft.jsch.DHEC256: DHEC256()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
com.google.android.exoplayer2.ui.TrackSelectionView
com.jcraft.jsch.DHG14: byte[] p
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
com.jcraft.jsch.jce.HMACMD5: void update(int)
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.jcraft.jsch.KeyPair: boolean decrypt(byte[])
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
io.flutter.plugins.sharedpreferences.R$id: int tag_unhandled_key_listeners
com.jcraft.jsch.Buffer: int getByte(int)
com.jcraft.jsch.ChannelSftp: byte SSH_FXP_WRITE
com.jcraft.jsch.Session: void initInflater(java.lang.String)
androidx.appcompat.widget.AppCompatImageView
io.flutter.embedding.android.FlutterFragment: void onStart()
io.flutter.BuildConfig: boolean RELEASE
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: GeneratedPluginRegister()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DISABLE_SERVICE_AUTH_CODES
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
com.jcraft.jsch.SftpATTRS: SftpATTRS()
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setUseSensorRotation(boolean)
com.jcraft.jsch.UserAuthNone: java.lang.String getMethods()
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String)
io.flutter.plugins.urllauncher.WebViewActivity$2: io.flutter.plugins.urllauncher.WebViewActivity this$0
io.flutter.view.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.plugins.sharedpreferences.R$style
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.plugins.pathprovider.R$style: R$style()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
com.jcraft.jsch.PortWatcher: java.lang.String normalize(java.lang.String)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
androidx.work.impl.WorkManagerInitializer
com.jcraft.jsch.jce.MD5: MD5()
com.jcraft.jsch.KeyPairRSA: KeyPairRSA(com.jcraft.jsch.JSch)
com.jcraft.jsch.LocalIdentityRepository: java.util.Vector getIdentities()
android.support.v4.media.session.ParcelableVolumeInfo
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.plugins.urllauncher.R$styleable: int FontFamily_fontProviderCerts
com.jcraft.jsch.SftpStatVFS: int uid
io.flutter.embedding.android.FlutterSplashView: void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen)
com.jcraft.jsch.Buffer: void shift()
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.jcraft.jsch.ChannelSftp: void setFilenameEncoding(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
com.jcraft.jsch.ChannelSession: void setXForwarding(boolean)
com.jcraft.jsch.DHGEX: int getState()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
com.jcraft.jsch.ChannelSftp: void read(byte[],int,int)
io.flutter.embedding.android.FlutterView$TransparencyMode: io.flutter.embedding.android.FlutterView$TransparencyMode valueOf(java.lang.String)
io.flutter.Log: int logLevel
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
com.jcraft.jsch.ChannelSftp: void rm(java.lang.String)
com.jcraft.jsch.KeyPair: byte[][] header
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
com.jcraft.jsch.IO: void setInputStream(java.io.InputStream,boolean)
org.threeten.bp.chrono.ThaiBuddhistEra
com.jcraft.jsch.UserAuthPassword
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setPreferredOrientations(int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
io.flutter.plugins.sharedpreferences.R$id: int normal
com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
io.flutter.plugins.urllauncher.R$styleable: int GradientColor_android_endY
com.jcraft.jsch.KeyPair: byte a2b(byte)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: UrlLauncherPlugin()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
com.jcraft.jsch.JSchException: JSchException()
com.jcraft.jsch.ChannelSftp: void sendREADDIR(byte[])
io.flutter.embedding.engine.systemchannels.AccessibilityChannel
com.jcraft.jsch.SftpStatVFS: long getBlockSize()
io.flutter.app.FlutterActivityDelegate: void onResume()
com.jcraft.jsch.jcraft.HMACMD596: int getBlockSize()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager
com.jcraft.jsch.ChannelSftp$2: byte[] val$handle
com.jcraft.jsch.jce.AES256CTR: void update(byte[],int,int,byte[],int)
io.flutter.plugins.urllauncher.R$dimen: int notification_big_circle_margin
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.Session: byte[] V_S
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean clearTextPermitted
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_START_PAUSED
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivity()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
io.flutter.plugins.pathprovider.R$attr: int fontProviderCerts
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
io.flutter.embedding.android.FlutterFragmentActivity: android.view.View createFragmentContainer()
io.flutter.plugins.sharedpreferences.R$id: int accessibility_custom_action_8
com.jcraft.jsch.ChannelSftp$LsEntry: void setFilename(java.lang.String)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onAttachedToBroadcastReceiver(io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding)
io.flutter.plugins.urllauncher.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.widget.Toolbar: int getPopupTheme()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String PLUGINS_RESTORATION_BUNDLE_KEY
com.jcraft.jsch.SftpATTRS: int SSH_FILEXFER_ATTR_EXTENDED
com.jcraft.jsch.ChannelSftp$LsEntry
io.flutter.embedding.engine.systemchannels.PlatformChannel$1
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
io.flutter.app.FlutterActivityDelegate: void onLowMemory()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
com.jcraft.jsch.KeyPairPKCS8: byte[] pbkdf2
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$300(io.flutter.embedding.android.FlutterView)
com.jcraft.jsch.jce.AES256CBC: int getBlockSize()
com.jcraft.jsch.ChannelSftp$RequestQueue: ChannelSftp$RequestQueue(com.jcraft.jsch.ChannelSftp,int)
io.flutter.embedding.engine.plugins.FlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.pathprovider.R$styleable: int[] FontFamilyFont
io.flutter.embedding.android.FlutterView: java.util.Set access$200(io.flutter.embedding.android.FlutterView)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.jcraft.jsch.ChannelSftp$2: long offset
com.jcraft.jsch.jce.DH: DH()
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
com.jcraft.jsch.ChannelAgentForwarding: void write(byte[],int,int)
io.flutter.app.FlutterPluginRegistry: java.util.Map mPluginMap
io.flutter.embedding.android.FlutterFragment$1
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
com.jcraft.jsch.Identity: java.lang.String getAlgName()
io.flutter.embedding.android.FlutterActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
com.jcraft.jsch.ChannelSftp$RequestQueue: void cancel(com.jcraft.jsch.ChannelSftp$Header,com.jcraft.jsch.Buffer)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
io.flutter.app.FlutterPluginRegistry: boolean onNewIntent(android.content.Intent)
androidx.fragment.app.Fragment: java.lang.String mTag
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
io.flutter.embedding.engine.systemchannels.NavigationChannel
com.jcraft.jsch.KeyPairECDSA: byte[] r_array
com.google.android.exoplayer2.video.ColorInfo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
com.jcraft.jsch.KeyExchange
io.flutter.embedding.android.FlutterSplashView$1
com.jcraft.jsch.ChannelSftp: com.jcraft.jsch.ChannelSftp$Header header(com.jcraft.jsch.Buffer,com.jcraft.jsch.ChannelSftp$Header)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
io.flutter.app.FlutterApplication: FlutterApplication()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler)
androidx.fragment.app.Fragment: void setNextTransition(int,int)
com.jcraft.jsch.KeyPairRSA: byte[] getPublicKeyBlob()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
